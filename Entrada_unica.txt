forward
global type w_siccod_frame from window
end type
type mdi_1 from mdiclient within w_siccod_frame
end type
end forward

global type w_siccod_frame from window
integer x = 457
integer y = 136
integer width = 2619
integer height = 1832
boolean titlebar = true
string menuname = "m_mdi"
boolean controlmenu = true
boolean minbox = true
boolean maxbox = true
boolean resizable = true
windowtype windowtype = mdihelp!
windowstate windowstate = maximized!
long backcolor = 12632256
string icon = "codere.ico"
mdi_1 mdi_1
end type
global w_siccod_frame w_siccod_frame

type prototypes

end prototypes
type variables
// PBD 
// avisar = 1 cuando da mensaje
// avisar = 0 no da mensaje

integer		ii_avisar = 1

integer		ii_mantenimiento
end variables

on w_siccod_frame.create
if this.MenuName = "m_mdi" then this.MenuID = create m_mdi
this.mdi_1=create mdi_1
this.Control[]={this.mdi_1}
end on

on w_siccod_frame.destroy
if IsValid(MenuID) then destroy(MenuID)
destroy(this.mdi_1)
end on

event open;//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			w_siccod_frame
//
//	Evento:			open
//
//	Descripción	  : Abrimos la ventana de mantenimiento que corresponda
//
//	Usada en:	   Entrada en la aplicación
//
//	Argumentos:		(None)
//					  
//	Retorno:			(None)												
//																				<br></br><div><b>
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios									</div><div>
//	--------	--------	---------------------------------			</div><div>
//	PBD 		05/10/07		Creación								</div><div>
//  PBD		07/05/08		Incluir autoactualización			</div><div>
//  PBD		20/05/08		Histórico de envío de datos 				</div>
///////////////////////////////////////////////////////////////////////////////
String 		ls_mantenimiento
integer		li_retorno

/*//s IF of_copynewfiles() = FALSE THEN
	crm_siccod.il_codretorno = il_retorno_siebel_nueva_version
	Close(THIS)
	RETURN
END IF*/

App.of_hiseunica(TRUE)

ii_mantenimiento = Message.DoubleParm

CHOOSE CASE ii_mantenimiento
	CASE 1
		
		ls_mantenimiento = "Mantenimiento de Interlocutores"
		App.is_CodTran = "eu_interlocutor"
		
		li_retorno = opensheet(w_form_interlocutor, this, 0, original!)

		App.MsgBoxTitle = "Interlocutores"
		
	CASE 2
		
		ls_mantenimiento = "Mantenimiento de Locales"
		App.is_CodTran = "eu_local"

		li_retorno = opensheet(w_form_local, this, 0, original!)

		App.MsgBoxTitle = "Locales"
		
	CASE 3
		
		ls_mantenimiento = "Mantenimiento de Máquinas"
		App.is_CodTran = "eu_maquina"

		li_retorno = opensheet(w_form_maquina, this, 0, original!)

		App.MsgBoxTitle = "Máquinas"
		
	CASE 4
		
		ls_mantenimiento = "Mantenimiento de Modelos"
		App.is_CodTran = "eu_modelo"

		li_retorno = opensheet(w_form_modelo, this, 0, original!)

		App.MsgBoxTitle = "Modelos"	
		
	CASE 5
		
		ls_mantenimiento = "Mantenimiento de Local-Interlocutor"
		App.is_CodTran = "eu_localinterloc"

		li_retorno = opensheet(w_form_localint, this, 0, original!)

		App.MsgBoxTitle = "Local-Interlocutor"
	
END CHOOSE

//PBD 03.03.2008. Ha podido recibir antes una orden de cierre
IF NOT IsValid(THIS) THEN
	RETURN
END IF


Title = App.appName + " - [Entorno: "+ App.is_entorno + "]" + &
							+ " - Usuario: " + App.srvusers.codi  + &
							+ "  Fecha: " + string(Today() , "dd/mm/yyyy") + &
							" - [" + ls_mantenimiento + "]"
							
							
IF li_retorno < 0 THEN
	ii_mantenimiento = 0		//Para que no pregunte
	Close(THIS)
END IF
end event

event closequery;//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			w_siccod_frame
//
//	Función:			closequery
//
//	Descripción	  : Considera si hay que preguntar antes de permitir salir
//
//	Usada en:	   Salida de la aplicación
//
//	Argumentos:		(None)
//					  
//	Retorno:																	<div>
//						0			OK											</div><div>
//						1			Se interrumpe la salida				</div><br></br>
//
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios									</div><div>
//	--------	--------	---------------------------------		</div><div>
//	PBD 		05/10/07		Creación		</div>
//
///////////////////////////////////////////////////////////////////////////////
string			ls_mensaje = "¿ Seguro que desea salir de la aplicación ?", ls_mantenimiento
string			ls_articulo
integer			li_default = 1
long				ll_variable_mirar

CHOOSE CASE ii_mantenimiento
	CASE 0
		RETURN 0
	CASE 1
		ls_articulo = "del"
		ls_mantenimiento = "interlocutor"
		ll_variable_mirar = App.il_intid
	CASE 2
		ls_articulo = "del"
		ls_mantenimiento = "local"
		ll_variable_mirar = App.il_locid
	CASE 3
		ls_articulo = "de la"
		ls_mantenimiento = "máquina"
		ll_variable_mirar = App.il_maqid
	CASE 4
		ls_articulo = "del"
		ls_mantenimiento = "modelo"
		ll_variable_mirar = App.il_tmoid
	CASE 5
		ls_articulo = "de la"
		ls_mantenimiento = "relación local-interlocutor"
		ll_variable_mirar = App.il_rleid
END CHOOSE

IF ll_variable_mirar <= 0 THEN
	ls_mensaje = "Aún no se ha grabado la información " + ls_articulo + " " + &
					ls_mantenimiento + ". ~r~n" + &
					"¿Está seguro de que quiere salir sin guardarla?"
	li_default = 2
	crm_siccod.il_codretorno = crm_siccod.II_ERROR_NO_GUARDADO
ELSE
	crm_siccod.il_codretorno = ll_variable_mirar
END IF

IF ii_avisar = 1 THEN
	CHOOSE CASE App.srvMsgbox.messagebox( "Mensaje", ls_mensaje, question!, yesno!, li_default )
		CASE 1
			return 0
		CASE 2
			return 1
	END CHOOSE
END IF

end event

type mdi_1 from mdiclient within w_siccod_frame
long BackColor=15780518
end type


forward
global type n_cst_connection from connection
end type
end forward

global type n_cst_connection from connection
end type
global n_cst_connection n_cst_connection

type variables
string is_connectfrom = "3"

CONSTANT string IS_USE_INIFILE 	= "1"
CONSTANT string IS_USE_REGISTRY	= "2"
CONSTANT string IS_USE_SCRIPT 	= "3"

// Nombres de los paquetes
Constant String		CNT_Package_APPL    = "siccod"
Constant String		CNT_Package_SISTEMA = "syscod"
Constant String		CNT_Package_DATOS   = "datcod"
Constant String		CNT_Package_INF     = "inforcod"
Constant String		CNT_Package_EVA     = "evacod"


// Constantes de valores por defecto de la conexión
Constant	String		CNT_Seccion = "ConexionServidor"
Constant String		CNT_Package_Default = ""
Constant String		CNT_Server = "XMI"
Constant String		CNT_Port   = "9020"
Constant String		CNT_UserID = "jagadmin"
Constant String		CNT_PassWord = ""

//PBD 03.06.2008
boolean ib_connected = FALSE
end variables

forward prototypes
public function integer of_getconnectioninfo (ref string as_server, ref string as_port, ref string as_logid, ref string as_password, ref string as_appl)
public function integer of_connecttoserver ()
protected function long of_createinstance (ref n_cst_srv_base newremoteobject, string as_paquete, string as_componente)
public function long of_createinstancedatos (ref n_cst_srv_base newremoteobject, string as_componente)
public function integer of_destroyinstance (ref n_cst_srv_base remoteobject)
public function integer of_destroyinstancedatos (ref n_cst_srv_base remoteobject)
public function integer of_destroyinstanceappl (n_cst_srv_base remoteobject)
public function integer of_createinstanceappl (ref n_cst_srv_base newremoteobject, string as_componente)
public function long of_createinstancesistema (ref n_cst_srv_base newremoteobject, string as_componente)
public function integer of_destroyinstancesistema (ref n_cst_srv_base remoteobject)
end prototypes

public function integer of_getconnectioninfo (ref string as_server, ref string as_port, ref string as_logid, ref string as_password, ref string as_appl);//*-----------------------------------------------------------------*/
//*    of_GetConnectionInfo:  Get the stored connection information
//*
//*    Note:
//*		The source of connection information can be changed by
//*		 altering the value of the 'is_connectfrom' variable.
//*-----------------------------------------------------------------*/
Choose Case is_connectfrom
		
	Case IS_USE_INIFILE						/*  Populate Jaguar Connection from INI file  */
		string ls_inifile = ""
		
		as_logid			= ProfileString ( ls_inifile, "Jaguar", "UserID",			"jagadmin")
		as_password		= ProfileString ( ls_inifile, "Jaguar", "PassWord",		"")
		as_server		= ProfileString ( ls_inifile, "Jaguar", "Server",			"xmi") 
		as_port			= ProfileString ( ls_inifile, "Jaguar", "Port",				"9020")
		as_appl			= ProfileString ( ls_inifile, "Jaguar", "Application",	"none")

	Case IS_USE_REGISTRY						/*  Populate Jaguar Connection from Registry  */
		string ls_registrykey = "" + "\Jaguar"
		
		If RegistryGet ( ls_registrykey, "UserID", 			RegString!, as_logid ) <> 1 Then
			RegistrySet ( ls_registrykey, "UserID", 			RegString!, "jagadmin" )
			RegistryGet ( ls_registrykey, "UserID", 			RegString!, as_logid )
		End If
		If RegistryGet ( ls_registrykey, "PassWord", 		RegString!, as_password ) <> 1 Then
			RegistrySet ( ls_registrykey, "PassWord", 		RegString!, "" )
			RegistryGet ( ls_registrykey, "PassWord", 		RegString!, as_password )
		End If
		If RegistryGet ( ls_registrykey, "Server", 			RegString!, as_server ) <> 1 Then
			RegistrySet ( ls_registrykey, "Server", 			RegString!, "xmi" )
			RegistryGet ( ls_registrykey, "Server", 			RegString!, as_server )
		End If
		If RegistryGet ( ls_registrykey, "Port", 				RegString!, as_port ) <> 1 Then
			RegistrySet ( ls_registrykey, "Port", 				RegString!, "9020" )
			RegistryGet ( ls_registrykey, "Port", 				RegString!, as_port )
		End If
		If RegistryGet ( ls_registrykey, "Application", 	RegString!, as_appl ) <> 1 Then
			RegistrySet ( ls_registrykey, "Application", 	RegString!, "none" )
			RegistryGet ( ls_registrykey, "Application", 	RegString!, as_appl )
		End If
		
	Case IS_USE_SCRIPT					/*  Populate Jaguar Connection from Script  */
		as_logid 		= "jagadmin"
		as_password 	= ""
		as_server		= "xmi"
		as_port			= "9020"
		as_appl			= "none"
		
	Case Else
		
		Return -1
		
End Choose

Return 1
end function

public function integer of_connecttoserver ();///////////////////////////////////////////////////////////////////////////////
// Función		: of_ConnectToServer
//	Comentarios	: Se conecta al Servidor y al paquete que recibe como parametro
//	Parámetros	: as_Package -> nombre del paquete dentro del jaguar al que 
//					  nos queremos conectar.
//					  
//	Retorno		: 0, si Ok
//					 >0, si hay algun error (ver help de ConnectToServer()
//					  
//	Modificaciones:
//		Fecha		Autor		Comentarios
//		--------	--------	-------------------------------------------------------
//		16/05/01	Manel		Creación del Script
///////////////////////////////////////////////////////////////////////////////

Int	li_ret
String	ls_String

li_Ret = This.ConnectToServer()

If li_Ret <> 0 Then
		Choose Case li_ret
			Case 50
				ls_String = "50-Distributed service error"
			Case 52
				ls_String = "52-Distributed communications error"
			Case 53				
				ls_String = "53-Requested server not active"
			Case 54				
				ls_String = "54-Server not accepting requests"
			Case 55				
				ls_String = "55-Request terminated abnormally"
			Case 56				
				ls_String = "56-Response to request incomplete"
			Case 57				
				ls_String = "57-Not connected"
			Case 62
				ls_String = "62-Server busy"
		End Choose
		App.srvMsgBox.MessageBox("Error de Conexión al Jaguar", ls_string)

	//PBD 03.06.2008	
ELSE
	ib_connected = TRUE
End If

Return li_ret



end function

protected function long of_createinstance (ref n_cst_srv_base newremoteobject, string as_paquete, string as_componente);///////////////////////////////////////////////////////////////////////////////
// Función		: of_CreateInstance
//	Comentarios	: Crea una instancia de un componente
//	Parámetros	: NewRemoteObject -> Nuevo objeto de servidor
//					  as_Paquete
//					  as_Componente
//					  
//	Retorno		: 1, si OK
//					 -1, si tenemos algun problema
//					  
//	Modificaciones:
//		Fecha		Autor		Comentarios
//		--------	--------	-------------------------------------------------------
//		16/05/01	Manel		Creación del Script
///////////////////////////////////////////////////////////////////////////////

Int		li_ret
String	ls_ClassName, ls_string

If TRUE THEN
	ls_ClassName = trim(as_Paquete) + "/" + trim(as_Componente)
	
	li_ret = CreateInstance(NewRemoteObject, ls_ClassName)
	
	If li_Ret <> 0 Then
			Choose Case li_ret
				Case 50
					ls_String = "50-Distributed service error"
				Case 52
					ls_String = "52-Distributed communications error"
				Case 53				
					ls_String = "53-Requested server not active"
				Case 54				
					ls_String = "54-Server not accepting requests"
				Case 55				
					ls_String = "55-Request terminated abnormally"
				Case 56				
					ls_String = "56-Response to request incomplete"
				Case 57				
					ls_String = "57-Not connected"
				Case 62
					ls_String = "62-Server busy"
			End Choose
		
		App.srvMsgBox.MessageBox("Error en la creación de Instancia", ls_string)
		
		Return -1
		
	End If
	
Else
	
	// NO Tenemos Jaguar
	If IsValid(NewRemoteObject) Then Destroy NewRemoteObject
	NewRemoteObject = Create Using as_Componente
	
End If


// Cargamos las propiedades del componente

NewRemoteObject.of_CargarPropiedades(App.srvUsers.Codi, App.srvUsers.Perfil, &
												 App.JaguarOK, App.AppName)



Return li_ret

end function

public function long of_createinstancedatos (ref n_cst_srv_base newremoteobject, string as_componente);///////////////////////////////////////////////////////////////////////////////
// Función		: of_CreateInstanceDATOS
//	Comentarios	: Crea una instancia en el paquete de Datos
//	Parámetros	: NewRemoteObject -> Nuevo objeto de servidor
//					  as_componente
//					  
//	Retorno		: 1, si OK
//					 -1, si tenemos algun problema
//					  
//	Modificaciones:
//		Fecha		Autor		Comentarios
//		--------	--------	-------------------------------------------------------
//		16/05/01	Manel		Creación del Script
///////////////////////////////////////////////////////////////////////////////

Return This.of_CreateInstance(NewRemoteObject, CNT_Package_Datos, as_componente)


end function

public function integer of_destroyinstance (ref n_cst_srv_base remoteobject);///////////////////////////////////////////////////////////////////////////////
// Función		: of_DestroyInstance
//	Comentarios	: Destruye o desactiva una instancia de un objecte
//	Parámetros	: RemoteObject -> Objeto que queremos destruir
//					  
//	Retorno		: 1, si Ok
//					 -1, en caso contrario
//					  
//	Modificaciones:
//		Fecha		Autor		Comentarios
//		--------	--------	-------------------------------------------------------
//		24/05/01	Manel		Creación del Script
//		14/05/07	PBD		Incluyo try-catch donde puede dar error por desconexión
///////////////////////////////////////////////////////////////////////////////

//If App.JaguarOK Then
	If IsValid(RemoteObject) Then 
		
		try	
			RemoteObject.of_SetComplete()
				
			catch ( corbasystemexception e )
				RemoteObject.of_SetAbort()
				
		end try
				
		Destroy RemoteObject
	End If

Return 1
end function

public function integer of_destroyinstancedatos (ref n_cst_srv_base remoteobject);Return of_DestroyInstance(RemoteObject)	
end function

public function integer of_destroyinstanceappl (n_cst_srv_base remoteobject);Return of_DestroyInstance(RemoteObject)
end function

public function integer of_createinstanceappl (ref n_cst_srv_base newremoteobject, string as_componente);///////////////////////////////////////////////////////////////////////////////
// Función		: of_CreateInstanceAPPL	
//	Comentarios	: Crea una instancia en el paquete de Aplicación
//	Parámetros	: NewRemoteObject -> Nuevo objeto de servidor
//					  as_componente
//					  
//	Retorno		: 1, si OK
//					 -1, si tenemos algun problema
//					  
//	Modificaciones:
//		Fecha		Autor		Comentarios
//		--------	--------	-------------------------------------------------------
//		16/05/01	Manel		Creación del Script
///////////////////////////////////////////////////////////////////////////////

Return This.of_CreateInstance(NewRemoteObject, CNT_Package_Appl, as_componente)



end function

public function long of_createinstancesistema (ref n_cst_srv_base newremoteobject, string as_componente);///////////////////////////////////////////////////////////////////////////////
// Función		: of_CreateInstanceSISTEMA
//	Comentarios	: Crea una instancia en el paquete de Sistema
//	Parámetros	: NewRemoteObject -> Nuevo objeto de servidor
//					  as_componente
//					  
//	Retorno		: 1, si OK
//					 -1, si tenemos algun problema
//					  
//	Modificaciones:
//		Fecha		Autor		Comentarios
//		--------	--------	-------------------------------------------------------
//		16/05/01	Manel		Creación del Script
///////////////////////////////////////////////////////////////////////////////

Return This.of_CreateInstance(NewRemoteObject, CNT_Package_Sistema, as_componente)


end function

public function integer of_destroyinstancesistema (ref n_cst_srv_base remoteobject);Return of_DestroyInstance(RemoteObject)
end function

on n_cst_connection.create
call super::create
TriggerEvent( this, "constructor" )
end on

on n_cst_connection.destroy
TriggerEvent( this, "destructor" )
call super::destroy
end on


forward
global type m_mdi from menu
end type
type m_help from menu within m_mdi
end type
global type m_mdi from menu
m_help m_help
end type
end forward

global type m_mdi from menu
m_help m_help
end type
global m_mdi m_mdi

on m_mdi.create
m_mdi=this
call super::create
this.m_help=create m_help
this.Item[UpperBound(this.Item)+1]=this.m_help
end on

on m_mdi.destroy
call super::destroy
destroy(this.m_help)
end on

type m_help from menu within m_mdi
end type

on m_help.create
call super::create
this.text = "Help"
end on

on m_help.destroy
call super::destroy
end on


forward
global type n_srv_users from nonvisualobject
end type
end forward

global type n_srv_users from nonvisualobject
end type
global n_srv_users n_srv_users

type variables
string			codi
long			perfil
Long			il_usuid	

datastore ids_permisos	//seguridad
end variables

on n_srv_users.create
call super::create
TriggerEvent( this, "constructor" )
end on

on n_srv_users.destroy
TriggerEvent( this, "destructor" )
call super::destroy
end on


forward
global type n_cst_mainclass from n_cst_base
end type
end forward

global type n_cst_mainclass from n_cst_base
event uesystemerror ( )
end type
global n_cst_mainclass n_cst_mainclass

type prototypes
Function ulong GetForegroundWindow()  Library "USER32.DLL"
Function BOOLEAN SetForegroundWindow(ulong  hWnd ) Library "USER32.DLL"
end prototypes

type variables
boolean						JaguarOk = TRUE

Integer 						ii_Log, ii_valor
long							il_ugeid, il_intid, il_locid, il_maqid
long							il_tmoid, il_rleid

//Para el histórico 	hthiseunica
long							il_heuid
string							is_commandline

string							is_parametros[] 
string							appName = "Interface CRM-SICCOD"
string							is_ini = "crm-siccod.ini"
string							is_entorno = ""
string							MsgBoxTitle
string							Version = "1.1"
CONSTANT string			IS_SEPARADOR = "|"
CONSTANT Integer		II_DIASCADUCIDAD = 90
constant String				SECTIONCONNECT = "CONEXIONSERVIDOR"
constant String				SECTIONPARM = "PARAMETROS"

n_srv_users					srvUsers
n_cst_connection			inv_Connect
uo_appsrv_msgbox		srvMsgBox

//Permisos
string							is_codtran
end variables

forward prototypes
public function integer of_inicializarjaguar (string as_conexionservidor)
public subroutine of_parametro_retorno (window aw_window, integer an_valor_retorno)
public function integer of_parametros_array (string commandline, integer ai_tipo)
public function integer of_inicializarjaguarini (string as_ficheroini)
public function integer of_no_en_siebel (ref integer ai_tipo)
public function integer of_getinfousuario (string as_usuario)
public function integer of_permuser (integer ai_perfil, integer ai_userid, ref datastore ads_permisos)
public function integer of_hiseunica (boolean ab_datosida)
public function integer of_log (string as_texto)
end prototypes

event uesystemerror();// Pasamos la llamada al controlador de erores
// Se llama a un evento de forma dinámica por si no se utiliza el objeto de error de la librería.
// En lugar de llamar al evento también se puede hacer una llamada a la función con cualquiera de las dos
// formas posibles:
//			Error.SystemError()
//			Error.SystemError("NomWindowError")
Error.Event Dynamic SystemError()

end event

public function integer of_inicializarjaguar (string as_conexionservidor);//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			n_cst_mainclass
//
//	Función:			of_inicializarjaguar
//
//	Descripción	  : Nos conectamos al Jaguar definido por el parámetro
//
//	Usada en:	  Conexión inicial a Jaguar
//
//	Argumentos:		as_conexionservidor	String		Parámetros de conexión (ConexiónServidorN)
//					  
//	Retorno:																	<div>			
//		0  	 : OK 														</div><div>
//		-1	 :Error 	de conexión											</div>
//																				<br></br><div><b>
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios									</div><div>
//	--------	--------	---------------------------------		</div><div>
//	PBD 		05/10/07		Creación		</div>
//
///////////////////////////////////////////////////////////////////////////////
Long				ll_RC
String			ls_Server,ls_Port,ls_UserID,ls_Password, ls_entorno

CONSTANT		string	LS_REGISTRO_KEY = 'HKEY_LOCAL_MACHINE\Software\CODERE\SICCODg\'

inv_Connect = Create n_cst_connection
RegistryGet( LS_REGISTRO_KEY + as_ConexionServidor,'Server',RegString!,ls_Server )

RegistryGet( LS_REGISTRO_KEY + as_ConexionServidor,'Port',RegString!,ls_Port )
RegistryGet( LS_REGISTRO_KEY + as_ConexionServidor,'UserID',RegString!,ls_UserID )
RegistryGet( LS_REGISTRO_KEY + as_ConexionServidor,'Password',RegString!,ls_Password )
RegistryGet( LS_REGISTRO_KEY + as_ConexionServidor,'Entorno',RegString!,ls_entorno )

is_entorno = ls_entorno

inv_Connect.Application = ''
inv_Connect.Driver      = 'jaguar'
inv_Connect.UserID   	= ls_UserID
inv_Connect.Password 	= ls_Password
inv_Connect.Location 	= 'iiop://' + ls_Server + ':' + ls_Port

ll_RC = inv_Connect.of_connecttoserver()
If ll_RC <> 0 Then
	App.srvMsgBox.MessageBox(App.MsgBoxTitle, 'Error en la conexión al servidor')
//	of_LogMessage('Conexión a servidor fallida (' + String(ll_RC) + ')')
//	of_LogMessage('Server: ' + ls_Server)
//	of_LogMessage('Port: ' + ls_Port)
//	of_LogMessage('User: ' + ls_UserID)
//	of_LogMessage('Password: ' + ls_Password)
//	of_LogMessage('PROCESO_FALLIDO')
	Return -1
End If

Return 1

end function

public subroutine of_parametro_retorno (window aw_window, integer an_valor_retorno);//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			n_cst_mainclass
//
//	Función:			of_parametro_retorno
//
//	Descripción	  : Retornamos al CRM el código ID/de error antes de salir
//
//	Usada en:	  Salida de la aplicación
//
//	Argumentos:		aw_window	window				Ventana a cerrar
//						an_valor_retorno	integer		Valor a retornar a CRM
//					  
//	Retorno:			(None)												<div></div>
//
//																				<br></br><div><b>
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios									</div><div>
//	--------	--------	---------------------------------		</div><div>
//	PBD 		05/10/07		Creación		</div>
//
///////////////////////////////////////////////////////////////////////////////
Close(aw_window)

crm_siccod.il_codretorno = an_valor_retorno	//error en los parámetros
crm_siccod.iw_siccod_frame.ii_avisar = 0
Close(crm_siccod.iw_siccod_frame)
end subroutine

public function integer of_parametros_array (string commandline, integer ai_tipo);//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			n_cst_mainclass
//
//	Función:			of_parametros_array
//
//	Descripción	  : Validamos el número de parámetros recibidos
//
//	Usada en:	   Entrada en la aplicación
//
//	Argumentos:		commandline		String		Datos ida de CRM
//						ai_tipo			Integer		Tipo de mantenimiento
//					  
//	Retorno:																	<div>			
//		0  	 : OK 														</div><div>
//		-1	 :Número incorrecto de parámetros						</div>
//																				<br></br><div><b>
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios									</div><div>
//	--------	--------	---------------------------------		</div><div>
//	PBD 		05/10/07		Creación		</div>
//
///////////////////////////////////////////////////////////////////////////////
integer		li_pos, k, li_retorno = 1
integer		TOTALCAMPOS

//CONSTANT 		integer	TOTALCAMPOSINTERLOCUTOR = 36
CONSTANT 		integer	TOTALCAMPOSINTERLOCUTOR = 37

//CONSTANT 		integer	TOTALCAMPOSLOCAL= 26
//CONSTANT 		integer	TOTALCAMPOSLOCAL= 34
//CONSTANT 		integer	TOTALCAMPOSLOCAL= 35
//VMQ 2016/06/13 se añaden los parámetros nuevos de entrada (crmpuntoventaid y deydeid)
//CONSTANT 		integer	TOTALCAMPOSLOCAL= 37
//VMQ 2016/07/8 se añaden los parámetros nuevos de entrada (longitud y latitud)
CONSTANT 		integer	TOTALCAMPOSLOCAL= 39

CONSTANT		integer	TOTALCAMPOSMAQUINA = 12
CONSTANT		integer	TOTALCAMPOSMODELO = 9
//CONSTANT		integer	TOTALCAMPOSLOCALINTERLOC = 10
CONSTANT		integer	TOTALCAMPOSLOCALINTERLOC = 14

string		ls_parametros, ls_parametro[]

CHOOSE CASE ai_tipo
	CASE 1
		TOTALCAMPOS = TOTALCAMPOSINTERLOCUTOR
	CASE 2
		TOTALCAMPOS = TOTALCAMPOSLOCAL
	CASE 3
		TOTALCAMPOS = TOTALCAMPOSMAQUINA
	CASE 4
		TOTALCAMPOS = TOTALCAMPOSMODELO
	CASE 5
		TOTALCAMPOS = TOTALCAMPOSLOCALINTERLOC
		
END CHOOSE

ls_parametros = commandline + IS_SEPARADOR

do while (LenA(ls_parametros) > 0)
	k ++
	li_pos = PosA(ls_parametros, IS_SEPARADOR)
	ls_parametro[k] = LeftA(ls_parametros, li_pos -1)
	ls_parametros = MidA(ls_parametros, li_pos +1)
loop

IF k < TOTALCAMPOS THEN
	//el número de parámetros es menor del esperado
	li_retorno = crm_siccod.II_ERROR_FALTAN_PARAMETROS //-100
ELSEIF k > TOTALCAMPOS THEN
	//el número de parámetros es mayor que el esperado
	li_retorno = crm_siccod.II_ERROR_SOBRAN_PARAMETROS //-200
	
ELSEIF li_retorno = 1 THEN
	is_parametros[] = ls_parametro[]

//	If of_InicializarJaguar(ls_conexion) < 0 Then 

	If of_InicializarJaguarini(is_ini) < 0 Then 
		Return -50
	End If
	
END IF

return li_retorno
end function

public function integer of_inicializarjaguarini (string as_ficheroini);//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			n_cst_mainclass
//
//	Función:			of_inicializarjaguarini
//
//	Descripción	  : Nos conectamos al Jaguar definido por el parámetro
//
//	Usada en:	  Conexión inicial a Jaguar
//
//	Argumentos:		as_conexionservidor	String		Parámetros de conexión (ConexiónServidorN)
//					  
//	Retorno:																	<div>			
//		0  	 : OK 														</div><div>
//		-1	 :Error 	de conexión											</div>
//																				<br></br><div><b>
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios									</div><div>
//	--------	--------	---------------------------------		</div><div>
//	PBD 		05/10/07		Creación		</div>
//
///////////////////////////////////////////////////////////////////////////////
boolean						lb_code
Long							ll_RC
integer						contador, li_retorno
String						ls_Server,ls_Port,ls_UserID,ls_Password, ls_entorno, ls_entornos, ls_modo, ls_password2, ls_UserID2, ls_admin

uo_string					luo_string

//as_ficheroini = "C:/crm_siccod/crm-siccod.ini"//prueba borrar
ls_server = ProfileString ( as_ficheroini, SECTIONCONNECT, "Server", "" )
ls_port = ProfileString ( as_ficheroini, SECTIONCONNECT, "Port", "" )
ls_userID = ProfileString ( as_ficheroini, SECTIONCONNECT, "UserID", "jagadmin" )
ls_password = ProfileString ( as_ficheroini, SECTIONCONNECT, "Password", "" )
ls_entorno = ProfileString ( as_ficheroini, SECTIONCONNECT, "Entorno", "Local" )

ls_modo = ProfileString(as_ficheroini, SECTIONPARM, "modo", "")
ls_admin = ProfileString(as_ficheroini, SECTIONPARM, "admin", "N")

/*************************/
IF trim(lower(ls_modo)) = "code"	THEN
	lb_code = TRUE
ELSE	//le damos una posibilidad de error
	IF Pos(ls_userID, "jagadmin") > 0 THEN
		lb_code = TRUE
	END IF
END IF

/*Si está en lb_code = TRUE antes de nada hay que codificar user/password*/
IF lb_code = TRUE THEN
	luo_string.of_codetext(lb_code, ls_userID)
	luo_string.of_codetext(lb_code, ls_password)
	
	ls_modo = "decode"
	SetProfileString(as_ficheroini, SECTIONCONNECT, "Password", ls_password)
	SetProfileString(as_ficheroini, SECTIONCONNECT, "UserID", ls_userID)
	SetProfileString(as_ficheroini, SECTIONPARM, "modo", ls_modo)
END IF
/*************************/

IF ls_admin = "S" THEN

	ls_entornos = ls_entorno
	DO
		contador ++
		ls_entorno = ProfileString ( as_ficheroini, SECTIONCONNECT, "Entorno" + string(contador +1), "" ) 
		IF ls_entorno <> "" THEN 
			ls_entornos +=  "|" + ls_entorno  
			
		//codificamos user/password si fuera necesario (Esto sólo ocurrirá la primera vez que se cree el ini
			
			IF lb_code = TRUE THEN
				ls_userID2 = ProfileString ( as_ficheroini, SECTIONCONNECT, "UserID" + string(contador +1), "" ) 
				ls_password2 = ProfileString ( as_ficheroini, SECTIONCONNECT, "Password" + string(contador +1), "" ) 
				
				luo_string.of_codetext(lb_code, ls_userID2)
				luo_string.of_codetext(lb_code, ls_password2)
				
				SetProfileString(as_ficheroini, SECTIONCONNECT, "Password" + string(contador +1), ls_password2)
				SetProfileString(as_ficheroini, SECTIONCONNECT, "UserID" + string(contador +1), ls_userID2)
			END IF
	/********************************************/
				
		END IF
	LOOP WHILE ls_entorno <> ""
	
	ls_entornos +="|"
END IF

//Si hay más de un entorno(solo para administradores), abrimos una ventana modal de selección

IF contador > 1 THEN
	OpenWithParm(w_multiserver, ls_entornos)
	li_retorno = Message.DoubleParm
	IF li_retorno <= 0 THEN
		RETURN -1
	ELSE
		IF li_retorno > 1 THEN
			ls_server = ProfileString ( as_ficheroini, SECTIONCONNECT, "Server" + string(li_retorno), "" )
			ls_port = ProfileString ( as_ficheroini, SECTIONCONNECT, "Port" + string(li_retorno), "" )
			ls_userID = ProfileString ( as_ficheroini, SECTIONCONNECT, "UserID" + string(li_retorno), "jagadmin" )
			ls_password = ProfileString ( as_ficheroini, SECTIONCONNECT, "Password" + string(li_retorno), "" )
			ls_entorno = ProfileString ( as_ficheroini, SECTIONCONNECT, "Entorno" + string(li_retorno), "Local" )
		ELSE
			ls_entorno = ProfileString ( as_ficheroini, SECTIONCONNECT, "Entorno" , "Local" )
		END IF
	END IF
ELSE
	ls_entorno = ProfileString ( as_ficheroini, SECTIONCONNECT, "Entorno" , "Local" )
END IF

//Descodificamos
luo_string.of_codetext(FALSE, ls_userid)
luo_string.of_codetext(FALSE, ls_Password)

inv_Connect = Create n_cst_connection

is_entorno = ls_entorno

inv_Connect.Application = ''
inv_Connect.Driver      = 'jaguar'
inv_Connect.UserID   	= ls_UserID
inv_Connect.Password 	= ls_Password
inv_Connect.Location 	= 'iiop://' + ls_Server + ':' + ls_Port

IF ls_server = "" OR ls_port = "" THEN
	RETURN -1
END IF

ll_RC = inv_Connect.of_connecttoserver()

If ll_RC <> 0 Then
	App.srvMsgBox.MessageBox(App.MsgBoxTitle, 'Error en la conexión al servidor')
	
	Return -1
End If

Return 1

end function

public function integer of_no_en_siebel (ref integer ai_tipo);/*Esta función detecta el caso de que se haya grabado un registro en Siccod pero antes de retornar a Siebel éste se haya desconectado (timeout)  
con lo que no quedarían homogéneos los status en Siebel Y Siccod. Si encontramos el Código Siebel en la tabla y el id de Siccod es 0 asumimos 
que estamos en esta situación y cambiamos el "0" del caso alta por el ID de Siccod y lo hacemos como modificación*/

string											ls_codsiebel
long											ll_codsiccod
integer										li_retorno


n_cst_do_crm_interlocutor				lnv_do_crm_interlocutor
n_cst_do_crm_local						lnv_do_crm_local
n_cst_do_crm_maquina					lnv_do_crm_maquina		
n_cst_do_crm_modelo					lnv_do_crm_modelo
n_cst_do_crm_localinterloc				lnv_do_crm_localinterloc


IF is_parametros[1]= "0" THEN
	ls_codsiebel = is_parametros[2]
	
	CHOOSE CASE ai_tipo
		CASE 1
			
			App.inv_Connect.of_CreateInstanceDatos(lnv_do_crm_interlocutor,"n_cst_do_crm_interlocutor")
			
			li_retorno = lnv_do_crm_interlocutor.of_no_en_siebel(ls_codsiebel, ll_codsiccod)
				
			App.inv_Connect.of_DestroyInstance(lnv_do_crm_interlocutor)
			
		CASE 2
			
			App.inv_Connect.of_CreateInstanceDatos(lnv_do_crm_local,"n_cst_do_crm_local")
			
			li_retorno = lnv_do_crm_local.of_no_en_siebel(ls_codsiebel, ll_codsiccod)
				
			App.inv_Connect.of_DestroyInstance(lnv_do_crm_local)
			
		CASE 3
			
			App.inv_Connect.of_CreateInstanceDatos(lnv_do_crm_maquina,"n_cst_do_crm_maquina")
			
			li_retorno = lnv_do_crm_maquina.of_no_en_siebel(ls_codsiebel, ll_codsiccod)
				
			App.inv_Connect.of_DestroyInstance(lnv_do_crm_maquina)
			
		CASE 4
			
			App.inv_Connect.of_CreateInstanceDatos(lnv_do_crm_modelo,"n_cst_do_crm_modelo")
			
			li_retorno = lnv_do_crm_modelo.of_no_en_siebel(ls_codsiebel, ll_codsiccod)
				
			App.inv_Connect.of_DestroyInstance(lnv_do_crm_modelo)
			
		CASE 5
			
			App.inv_Connect.of_CreateInstanceDatos(lnv_do_crm_localinterloc,"n_cst_do_crm_localinterloc")
			
			li_retorno = lnv_do_crm_localinterloc.of_no_en_siebel(ls_codsiebel, ll_codsiccod)
				
			App.inv_Connect.of_DestroyInstance(lnv_do_crm_localinterloc)
			
	END CHOOSE
	
	//Existe el código Siccod, ñapeamos los parámetros de entrada para que Siebel reciba el código que no tiene
	
	IF li_retorno = 1 THEN
		is_parametros[1] = string(ll_codsiccod)
	END IF
	
END IF

RETURN 0
end function

public function integer of_getinfousuario (string as_usuario);//////////////////////////////////////////////////////////////////////////////
//
// Objeto: n_cst_mainclass
//
// Función: of_getinfousuario
//
// Argumentos: string as_usuario	
//
// Retorno: integer
//
// Descripción: Obtenemos perfil y usuid para gestión de permisos
//
//////////////////////////////////////////////////////////////////////////////
//
// Historial de revisiones      Autor: 
//
// Fecha               Versión   Autor
// 17/04/2008          1.0       PBD        Versión inicial
//
//////////////////////////////////////////////////////////////////////////////
integer							 	li_ret, li_retorno = 0, li_perid, li_error
long									ll_userid
string								ls_error, ls_info
n_cst_do_sistemaseguridad		luo_seguridad
blob									lblb_datos
datastore							lds_datos
str_usuario							lstr_usuario[]
integer								i, li_total, li_fila

App.inv_Connect.of_CreateInstanceDatos(luo_seguridad,"n_cst_do_sistemaseguridad")

//li_ret = luo_seguridad.of_validarusuariosiebel(as_usuario, II_DIASCADUCIDAD,li_perid, ll_userid)
//PBD 18.07.2011 DIRECTORIO ACTIVO
li_ret = luo_seguridad.of_validar_ldap (as_usuario, li_error, ls_error, lstr_usuario[])

IF li_ret < 0 THEN
	/*Caducada			RETURN -2
	Usuario inactivo	RETURN -3
	Usuario revocado	RETURN -4
	Usuario de baja	RETURN -5
	*/
/*	IF li_ret = -2 THEN
		ls_error =  "La password de Siccod ha cadudado. Debe acceder a Siccod y cambiarla."
	ELSEIF li_ret = -3 THEN
		ls_error = "El acceso a la aplicación no está permitido en "+&
						"estos momentos. ~n~r Disculpe las molestias."
	ELSEIF li_ret = -4 THEN
		ls_error = 'El acceso al usuario '+as_usuario+' ha sido revocado.'+&
					'~n~rDeberá ponerse en contacto con un Administrador del Sistema'
	ELSEIF li_ret = -5 THEN
		ls_error = 'El usuario '+as_usuario+' está dado de baja en la aplicación.'+&
					'~n~rDeberá ponerse en contacto con un Administrador del Sistema'
	ELSE
		ls_error = "Se ha producido un error al recuperar la información del usuario."
	END IF
*/	
	MessageBox('Aviso',ls_error)
	li_retorno = -1
ELSE
	IF UpperBound(lstr_usuario) > 1 THEN
		
		lds_datos = Create Datastore
		lds_datos.Dataobject = 'd_lista_usuarios'

		li_total = UpperBound(lstr_usuario)
		
		FOR i = 1 TO li_total
			li_fila = lds_datos.InsertRow(0)
			lds_datos.SetItem(li_fila,"usuario",lstr_usuario[i].as_nombre)
			lds_datos.SetItem(li_fila,"usuid",lstr_usuario[i].as_usuid)
			lds_datos.SetItem(li_fila,"perfil",lstr_usuario[i].as_perfil)
			lds_datos.SetItem(li_fila,"estado",lstr_usuario[i].as_activo)
			lds_datos.SetItem(li_fila,"indice",i)
		NEXT
		
		OpenWithParm(w_ldap, lds_datos)
		
		li_fila = Message.LongParm
		IF li_fila <=0 THEN
			RETURN -1
		END IF
	ELSE
		li_fila = 1
	END IF
	THIS.srvUsers.Perfil = lstr_usuario[li_fila].al_perid
	THIS.srvUsers.il_usuid = lstr_usuario[li_fila].al_userid
	
	THIS.srvUsers.Codi = lstr_usuario[li_fila].as_usuid

END IF

App.inv_Connect.of_DestroyInstance(luo_seguridad)


RETURN li_retorno
end function

public function integer of_permuser (integer ai_perfil, integer ai_userid, ref datastore ads_permisos);///////////////////////////////////////////////////////////////////////////////
// Función		: of_permuser
//
//	Comentarios	: Obtiene los permisos del usuario
//
//	Parámetros	:  integer				ai_perfil
//						integer				ai_userid
//						datastore			ads_permisos	Reference
//					  
//	Retorno		:   0  	Ok
//						-1		Error
//
//	Modificaciones:
//		Fecha		Autor			Comentarios
//		--------	--------		----------------------------------------------------
//		PBD 		02/03/05		Creación
//		PBD		17/04/08		Tomada de w_usuario para Entrada Única
///////////////////////////////////////////////////////////////////////////////
integer		li_ret
blob			lblb_datos

n_cst_so_permventana		luo_so_permventana

App.inv_Connect.of_CreateInstanceSistema(luo_so_permventana,	"n_cst_so_permventana")

li_ret = luo_so_permventana.of_permuser(ai_perfil,ai_userid,lblb_Datos)

if li_ret >0 then

	app.SrvUsers.ids_permisos.dataobject = "d_so_syspermventana"
	ads_permisos.SetFullState (lblb_Datos)	
	li_ret = 0
 
else
	li_Ret = -1
end if 

App.inv_Connect.of_DestroyInstanceSistema(luo_so_permventana)

RETURN li_ret
end function

public function integer of_hiseunica (boolean ab_datosida);//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			n_cst_mainclass
//
//	Función:			of_hiseunica
//
//	Descripción	  : Guardamos los datos ida y vuelta con que se accede a Siccod
//
//	Usada en:	   Entraday salida de la aplicación
//
//	Argumentos:	boolean			ab_datosida		TRUE si guardamos los datos ida, FALSE para los de vuelta
//					  
//	Retorno:																	<div>			
//		0  	 : OK 														</div><div>
//		-1	 :Grabación incorrecta								</div>
//																				<br></br><div><b>
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios									</div><div>
//	--------	--------	---------------------------------		</div><div>
//	PBD 		20/05/08		Creación		</div>
//
///////////////////////////////////////////////////////////////////////////////
/*Esta función escribe los parámetros recibidos en la tabla de históricos de entrada única*/

long								ll_fila, ll_id
integer							li_retorno

n_cst_do_crm_hiseunica			luo_componente
datastore						lds_datos
blob								lblb_datos

lds_datos = Create DataStore

IF NOT IsValid(App) THEN
	RETURN 0
END IF

IF NOT IsValid(App.inv_Connect) THEN
	RETURN 0
END IF

IF App.inv_Connect.ib_connected = FALSE THEN
	RETURN 0
END IF

App.inv_Connect.of_CreateInstanceDatos(luo_componente,"n_cst_do_crm_hiseunica")

IF ab_datosida = TRUE THEN

	lds_datos.DataObject = 'd_do_crm_hiseunica'
	
	ll_fila = lds_datos.InsertRow(0)
	
	lds_datos.SetItem(ll_fila, "heuida", is_commandline)
	lds_datos.SetItem(ll_fila, "codusucid", srvUsers.codi)
	
	//Uso cualquier componente porque el n_cst_do_base no existe independientemente
	//Sólo voy a usar funciones del base así que no me importa cual emplee, siempre
	//y cuando no tenga el uepreupdate lleno de validaciones
	
	lds_datos.GetFullState(lblb_datos)
	
	Destroy lds_datos
	
	il_heuid = luo_componente.of_updateblob(lblb_datos)
	IF il_heuid > 0 THEN
		li_retorno = 0
	ELSE
		li_retorno = -1
	END IF
ELSE
	li_retorno = luo_componente.of_addwhere("heuid = " + string(il_heuid))
	IF li_retorno >= 0 THEN
		li_retorno = luo_componente.of_retrieveblob(lblb_datos)
		IF li_retorno >= 0 THEN
			lds_datos.SetFullState(lblb_datos)
			lds_datos.SetItem(1, "heuvuelta", crm_siccod.il_codretorno)
			lds_datos.GetFullState(lblb_datos)
			
			li_retorno = luo_componente.of_updateblob(lblb_datos)
			IF li_retorno >=0 THEN
				li_retorno = 0
			END IF
		END IF
	END IF
END IF

App.inv_Connect.of_DestroyInstance(luo_componente)

RETURN li_retorno

end function

public function integer of_log (string as_texto);integer li_file
time		lt_hora

lt_hora = now()
li_file = FileOpen("log.txt",LineMode!,Write!,Shared!)
FileWrite(li_file,as_texto + " " + string(lt_hora,"mm:ss:ff"))
FileClose(li_file)
RETURN 0
end function

on n_cst_mainclass.create
call super::create
end on

on n_cst_mainclass.destroy
call super::destroy
end on

event constructor;call super::constructor;//App = THIS

srvUsers 	= Create n_srv_users			
srvMsgBox   = Create uo_appsrv_msgbox
end event


forward
global type crm_siccod from application
end type
global transaction sqlca
global dynamicdescriptionarea sqlda
global dynamicstagingarea sqlsa
global uo_appsrv_error error
global message message
end forward

global variables
n_cst_mainclass App
end variables

global type crm_siccod from application
string appname = "crm_siccod"
end type
global crm_siccod crm_siccod

type prototypes

end prototypes

type variables
w_siccod_frame			iw_siccod_frame

//PBD 26.03.2008 Devolverá error, salvo que se demuestre lo contrario
long						il_codretorno = -1

CONSTANT integer		II_ERROR_NO_CONTROLADO = -3
CONSTANT integer		II_ERROR_NO_GUARDADO = -2
CONSTANT integer		II_ERROR_GENERAL = -1
CONSTANT integer		II_ERROR_NO_PARAMETROS = -80
CONSTANT integer		II_ERROR_FALTAN_PARAMETROS = -100
CONSTANT integer		II_ERROR_SOBRAN_PARAMETROS = -200
CONSTANT integer		II_ERROR_MODO_ACCESO = -1
CONSTANT integer		II_ERROR_USUARIO = -1
CONSTANT integer		II_ERROR_SINPERMISOS = -1






end variables

forward prototypes
public function integer of_getparam (ref string as_parametro)
public function integer of_log (string as_texto)
public subroutine of_export_to_syntax ()
public subroutine of_convert_to_array (string as_cadena, string as_separador, ref string as_array[])
end prototypes

public function integer of_getparam (ref string as_parametro);string			ls_fichero = "C:\crm_siccod\param.txt", ls_parametro
integer		li_file, li_read, li_retorno = 0

IF FileExists(ls_fichero) THEN
	li_file = FileOpen(ls_fichero, linemode!, read!,shared!)
	IF li_file > 0 THEN
		li_read = FileRead(li_file, ls_parametro)
		IF li_read > 0 THEN
			as_parametro = ls_parametro
		ELSE
			li_retorno = -3
		END IF
	ELSE
		li_retorno = -2
	END IF
ELSE
	li_retorno = -1
END IF

RETURN li_retorno
end function

public function integer of_log (string as_texto);integer li_file
time		lt_hora

lt_hora = now()
li_file = FileOpen("log.txt",LineMode!,Write!,Shared!)
FileWrite(li_file,as_texto + " " + string(lt_hora))
FileClose(li_file)
RETURN 0
end function

public subroutine of_export_to_syntax ();// funcion para exportar los objetos de la aplicación a syntax.
Integer 		li_file

String		ls_syntax, ls_lib

integer li_count, li_index, li_index2
string ls_libname, ls_entry, ls_type, ls_output_file, ls_dir, ls_export_type

string ls_libraries[], ls_entryinfo[], ls_dirs[], ls_clear[]


ls_lib = GetLibraryList( )

of_convert_to_array( ls_lib, ",", ls_libraries )

FOR li_index = 1 TO UpperBound(ls_libraries)
	
	// Paso 2: Obtener info del objeto (name y type)
	ls_dir = LibraryDirectoryEx( ls_libraries[li_index], DirAll! )
	of_convert_to_array( ls_dir, '~n', ls_dirs )
	
	FOR li_index2 = 1 To UpperBound(ls_dirs)
		of_convert_to_array( ls_dirs[li_index2], '	', ls_entryinfo )
		
		// Paso 2: Obtener info del objeto (name y type)
		ls_entry = ls_entryinfo[1]
		ls_type = ls_entryinfo[4] // ej. window, menu, userobject, datawindow
		// Paso 3: Se recoge la información según el tipo
		CHOOSE CASE lower(ls_type)
			  CASE "window"
				ls_syntax = LibraryExport( ls_libraries[li_index], ls_entry, ExportWindow! )
			  CASE "menu"
				ls_syntax = LibraryExport( ls_libraries[li_index], ls_entry, ExportMenu! )
			  CASE "userobject"
				ls_syntax = LibraryExport( ls_libraries[li_index], ls_entry, ExportUserObject! )
			  CASE "datawindow"
				ls_syntax = LibraryExport( ls_libraries[li_index], ls_entry, ExportDataWindow! )
			  CASE "function"
				ls_syntax = LibraryExport( ls_libraries[li_index], ls_entry, ExportFunction! )
			  CASE "structure"
				ls_syntax = LibraryExport( ls_libraries[li_index], ls_entry, ExportStructure! )
			  CASE "application"
				ls_syntax = LibraryExport( ls_libraries[li_index], ls_entry, ExportApplication! )
				
		END CHOOSE
		
		// Paso 4: Se guardan los datos.
		li_file = FileOpen( "ExportSyntax.txt", LineMode!, Write!, Shared! )
		FileWriteEx(li_file, ls_syntax)
		FileClose(li_file)
		ls_entryinfo = ls_clear[]
	NEXT
	
NEXT

MessageBox("Exportación completa", "Todos los objetos han sido exportados a syntax.")
end subroutine

public subroutine of_convert_to_array (string as_cadena, string as_separador, ref string as_array[]);// función que pasa a array una cadena de texto.

long		arraylen, stringlen, place_nbr, i, place_tt
String	string_now

stringlen = len(as_cadena)
DO WHILE stringlen > 0 
	place_nbr = pos(as_cadena, as_separador)
	IF place_nbr > 0 THEN
		place_tt = place_nbr - 1
		string_now = Mid(as_cadena,0,place_tt)
		as_cadena = RIGHT(as_cadena,stringlen - place_nbr)
		stringlen = stringlen - place_nbr
	ELSE
		string_now = as_cadena
		as_cadena = RIGHT(as_cadena,stringlen - place_nbr)
		stringlen = 0
	END IF
	string_now = trim(string_now)
	arraylen = UpperBound(as_array)
	as_array[arraylen+1] = string_now
LOOP
end subroutine

on crm_siccod.create
appname="crm_siccod"
message=create message
sqlca=create transaction
sqlda=create dynamicdescriptionarea
sqlsa=create dynamicstagingarea
error=create uo_appsrv_error
end on

on crm_siccod.destroy
destroy(sqlca)
destroy(sqlda)
destroy(sqlsa)
destroy(error)
destroy(message)
end on

event open;//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			crm_siccod
//
//	Evento:			open
//
//	Descripción	  : Abrimos el mantenimiento correspondiente a los parámetros
//						 recibidos
//
//	Usada en:	  Salida de la aplicación
//
//	Argumentos:		commandline			Parámetros de acceso
//					  
//	Retorno:  		(Nonez
//																				<br></br><div><b>
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios									</div><div>
//	--------	--------	---------------------------------		</div><div>
//	PBD 		05/10/07		Creación		</div>
//
///////////////////////////////////////////////////////////////////////////////
integer				li_modo, li_retorno, li_pos, i
string				ls_usuario
boolean				lb_error = FALSE, lb_retorno
//n_cst_update		luo_update
	

of_export_to_syntax()

App = Create n_cst_mainclass

// TF
// 5|0|1-4H8N9M|44554|94166|50079940|10085466|18/03/2019||63|194|||||YASMINA.ALVAREZ
// 5|193676|1-65YS3|25484|42510|50039967|10034003|11/10/2010|19/01/2011|66|194|||||MARGARITAJ 
//IF commandline = "" THEN &	
//CommandLine = "1|59113|1-7RAAH|LAS HOCES 2011, S.L.|B86099546||7|ANDRES MELLADO|77||||31509|28003|28|1||||||||||ARANTZAZU.SABATER"
//"2|0|1-2L3222|2016062908|3|C|7|DIREC 2016062908|23|32016|28490|28|||||||D|||7|N|00000000|12||N|||||obs via||N|||2016062908|2016062908|44.87|12.98|DOLORES.LANCHO"
//s of_getparam(commandline)
//commandline="2|0|1-34TGA0|PRUEBA PACO R.|3|C|4|CALVO SOTELO|20|32016|28490|28|763612399||||||D|||7|M|00000000|12||N|||||||N|||dbdc6d94-78c0-e711-8115-5065f38a5a21|471c2f08-79c0-e711-8115-5065f38a5a21|-3.98969|40.71596|MARIAJOSE.MARTIN"

//commandline="2|0|1-35EV7C|PRUEBA INTEGRACION SICCOD 3|10|P|7|ANTONIO LOPEZ|1|31531|28025|28|910256177||||||D|||14|J|00000000|12||N|||||||N|||020a5cb9-e8cd-e711-8115-5065f38a5a21|c4b7cd2d-e9cd-e711-8115-5065f38a5a21|-3.71498|40.39751|MARIAJOSE.MARTIN"

//commandline="2|0|1-35EV7C|PRUEBA INTEGRACION SICCOD 3|10|P|7|ANTONIO LOPEZ|1|31531|28025|28|910256177||||||D|||14|J|00000000|12||N|||||||N|||020a5cb9-e8cd-e711-8115-5065f38a5a21|c4b7cd2d-e9cd-e711-8115-5065f38a5a21|-3.71498|40.39751|MARIAJOSE.MARTIN"

//commandline="2|0|1-35EV6I|PRUEBA INTEGRACION SICCOD 2|3|A|7|ANTONIO LOPEZ|1|31531|28025|28|910256189||||||D|||7|D|00000000|12||N|||||||N|||fd095cb9-e8cd-e711-8115-5065f38a5a21|758e1a20-e9cd-e711-8115-5065f38a5a21|-3.71498|40.39751|MARIAJOSE.MARTIN"

//App.is_commandline = commandline

//18.11.2010
/*luo_update = Create n_cst_update
lb_retorno = luo_update.of_copynewfiles( )

IF lb_retorno = FALSE THEN
	THIS.il_codretorno = luo_update.il_retorno_siebel_nueva_version
	RETURN
END IF*/


//Caso interlocutores
IF li_modo = 1 THEN
	CommandLine = "1|0|1-3S1S9R|PRUEBA, ALBERTO|Y29311380M|||||||||||||||||||||||||||||N|N|N|Persona Física||MARIAJOSE.MARTIN" 
	//CommandLine = "1|0|1-3OQL98|FISICA 12, PERSONA|25795454B|30/04/2019|7|RICARDO DEL ARCO|18||BAJOS||25953|22004|22|1|911111111||666666666|922222222|COEDERE|codere.com||DON|10/04/1995||3333x|4444x|5555x|||||Y|N|N|Persona Física|1256|MARIAJOSE.MARTIN"

	//CommandLine = "1|0|1-3OQL89|RUPERTO, MARTINEZ|D79987160||||||||||||911111111|||||||SR||||||||||N|N|N|Persona Jurídica||MARIAJOSE.MARTIN" 

	//CommandLine = "1|0|1-3OPJH6|PRUEBA, SEIS|A51051761||4|ENCARTACIONES|28||||58675|48800|48|1|917633333||666666666|||codere@codere.com|1|||||||Castellano||||Y|N|N|Persona Jurídica||MARIAJOSE.MARTIN "
	//CommandLine = "1|0|1-3OPJFF|PRUEBA, CUATRO|A85724235|"
	//	CommandLine = "1|0|1-3OPJFF|PRUEBA, CUATRO|A85724235|2|C||||||||||||||||||||||||||||||||DAVID.NIETO"
	//	CommandLine = "1|95147|1-2B-120417| FERNANDEZ, MABEL LILIANA||/|||||||||||||||||||||||||||||||||DAVID.NIETO"
	//CommandLine = "1|0|1-2B-120419| FERNANDEZ, MABEL LILIANA|A51927838|03/12/2012|7|DE MIGUEL DE CERVANTES|12||BJS|8|4885|08940|8|1|667034364||||||18|SRA|02/09/1968|||||||||Y|N|N|Persona Física|12345|DAVID.NIETO"
//CommandLine = "1|0|1-YPP1V| FERNANDEZ, MABEL LILIANA|08627115E|03/12/2012|7|DE MIGUEL DE CERVANTES|12||BJS|8|4885|08940|8|1|667034364||||||18|SRA|02/09/1968|||||||||Y|N|N|Persona Física|12345|DAVID.NIETO"
//CommandLine = "1|66840|1-YPP1V| FERNANDEZ, MABEL LILIANA|X08627115E|03/12/2012|7|DE MIGUEL DE CERVANTES|12||BJS|8|4885|08940|8|1|667034364||||||18|SRA|02/09/1968|||||||||Y|N|N|Persona Física|12345|DAVID.NIETO"
//Caso locales
ELSEIF li_modo = 2 THEN

CommandLine = "2|0|1-PIDIL23|Ejemplo con Pruebas|2|C|7|Palau Plegamanses|55|4276|08015|8|916194251|638039255|620234500|915442382|www.prueba.com|prueba@prueba.com|L|M|X|7|W|00000000|24|21|SILVIAC"
// 2016/06/02 VMQ Se añaden dos parametros mas antes del usuario -> crmpuntoventaid (varchar 26) y deydeid (varchar 200)
CommandLine = "2|0|1-2NEBWA|ALAI|3|A|7|OBISPO BALLESTER|20|2|01002|1|945330799|688877417|||||X|X|X|28|N|09002200|65||N|||||||N||BAR|ID CRM|ID DEYDE|SANDRA.CALVO"
CommandLine = "2|0|1-2NCHTR|CAMPANA, LA|12|N|4|REY DON JAIME|48|59819|03501|3|965866935||636521189||||D|D|D|7|N|00000000|18|6|N|||||BLOQUE 2 LOCAL 5||N||BAR|ID CRM|ID DEYDE|MERCEDES.SORO"
// 2016/07/08 VMQ Se añaden dos parametros mas antes del usuario -> longitud y  latitud
CommandLine = "2|0|1-2NEBWA|ALAI|3|A|7|OBISPO BALLESTER|20|2|01002|1|945330799|688877417|||||X|X|X|28|N|09002200|65||N|||||||N||BAR|ID CRM|ID DEYDE|LONGITUD|LATITUD|SANDRA.CALVO"
//Caso máquinas
ELSEIF li_modo = 3 THEN
CommandLine = "3|0|1-GDNT|66|2007|A|58327|13|68|10/02/2007|12|64|SILVIAC"
// Caso modelo
ELSEIF li_modo = 4 THEN
CommandLine =  "4|1081|1-74-1101|1002062|GNOMOS|10|1|JA-B.1-37||1-78-84|PILARR"
// Caso local-interlocutor
ELSEIF li_modo = 5 THEN
CommandLine = "5|0|1-GkSIN|26666|707|||10/01/2008|11/01/2008|211||PACO"	
END IF


If CommandLine <> '' Then
	
	li_pos = PosA(CommandLine, App.IS_SEPARADOR)
	
	IF li_pos < 0 THEN
		lb_error = TRUE
	ELSE
		li_modo = integer(MidA(CommandLine, li_pos -1, 1))
		IF li_modo = 0 OR li_modo > 5 THEN
			lb_error = TRUE
		ELSE
			IF RightA(CommandLine, 1) = "~"" OR RightA(CommandLine, 1) = "'" THEN
				CommandLine = MidA(CommandLine,li_pos +1, LenA(CommandLine) - li_pos -1)
			ELSE
				CommandLine = MidA(CommandLine,li_pos +1, LenA(CommandLine) - li_pos)
			END IF
		END IF
	END IF

	IF lb_error = TRUE THEN
		MessageBox('Error',"Modo de acceso no válido. Los valores posibles son: ~r~n" + &
								"1: Interlocutores ~r~n" + &
								"2: Locales ~r~n" + &
								"3: Máquinas ~r~n" + &
								"4: Modelos ~r~n" + &
								"5: Local-interlocutor")
								
		il_codretorno = II_ERROR_MODO_ACCESO
		RETURN
	END IF
	
	/*Tomamos el usuario: último parámetro*/
	i = 0
	do	while (MidA(commandline, LenA(commandline) - i, 1) <> App.IS_SEPARADOR)
		i ++
	loop
	ls_usuario = MidA(commandline, LenA(commandline)  - i +1)
	CommandLine = MidA(CommandLine, 1, LenA(commandline)  - i -1)
	

	li_retorno = App.of_parametros_array(CommandLine, li_modo)

	//Tras esta función ya hay acceso al Jaguar
	IF li_retorno < 0 THEN
		CHOOSE CASE li_retorno
			CASE -50
				messagebox("Error","No ha sido posible conectar al Jaguar", Exclamation!)
			CASE -100
				messagebox("Error","Faltan parámetros", Exclamation!)
			CASE -200
				messagebox("Error","Sobran parámetros", Exclamation!)
			CASE ELSE
				messagebox("Error","Error en los parámetros", Exclamation!)
		END CHOOSE
		il_codretorno = li_retorno
		RETURN
	END IF
	//Esta funcuión carga el perfil y el userid
	li_retorno = App.of_getinfousuario(ls_usuario)
	
	IF li_retorno < 0 THEN
		messagebox("Error","Error con el usuario", Exclamation!)
		il_codretorno = II_ERROR_USUARIO
		RETURN
	END IF
	App.srvUsers.ids_permisos  = Create datastore

	App.of_permuser(App.srvUsers.perfil, App.srvUsers.il_usuid, App.srvUsers.ids_permisos)

Else
	MessageBox('Error',"No se recibieron parámetros de entrada.")
	il_codretorno = II_ERROR_NO_PARAMETROS	
	Return
End If

//19.02.2008
App.of_no_en_siebel(li_modo)

OpenWithParm(iw_siccod_frame, li_modo)
end event

event close;//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			crm_siccod
//
//	Evento:			close
//
//	Descripción	  : Retornamos al CRM el ID generado o un valor negativo en caso
//						 de error
//
//	Usada en:	  Salida de la aplicación
//
//	Argumentos:
//					  
//	Retorno:  		(None)
//																				<br></br><div><b>
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios									</div><div>
//	--------	--------	---------------------------------		</div><div>
//	PBD 		05/10/07		Creación		</div>
//
///////////////////////////////////////////////////////////////////////////////
IF il_codretorno <> 0 THEN
	App.of_hiseunica(FALSE)
	Message.LongParm = il_codretorno
END IF

if IsValid(w_mensaje_popup) then Close(w_mensaje_popup)

end event

event systemerror;// Redirigimos hacia el objeto aplicación
If isValid(App) Then 
	App.Event ueSystemError()
END IF
end event


forward
global type w_form_base from window
end type
type dw_1 from datawindow within w_form_base
end type
end forward

global type w_form_base from window
integer width = 2738
integer height = 1560
string title = "Mantenimiento de Interlocutores"
string menuname = "m_main"
long backcolor = 67108864
string icon = "Vendedor.ico"
event m_accok ( )
event type boolean ue_postopen ( )
event type boolean ue_preopen ( )
event ue_exitapp ( )
event ueinitpermisos ( ref integer ai_retorno )
dw_1 dw_1
end type
global w_form_base w_form_base

type variables
integer						ii_modo
CONSTANT INTEGER		II_MODIFICACION = 1
CONSTANT INTEGER		II_ALTA = 0

string							is_campos[]
boolean						ib_canbenull[]


//Perfiles acceso
n_cst_winsrv_mantenim	i_cst_manteniment
string							is_codtran
boolean						ib_stop_processing = FALSE

end variables

forward prototypes
public function integer of_asigna_valores ()
public function boolean of_validadatos ()
public function boolean of_validacampos ()
public function boolean of_isnumber (string as_parametro)
public function boolean of_isdate (string as_parametro)
end prototypes

event type boolean ue_postopen();RETURN TRUE
end event

event type boolean ue_preopen();//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			w_form_base
//
//	Evento:			ue_preopen
//
//	Descripción	  : Rellenamos los datos del mantenimiento
//
//	Usada en:	   Entrada en la aplicación
//
//	Argumentos:		(None)
//					  
//	Retorno:			boolean		TRUE si OK							<br></br>
//										FALSE si hay que cerrar			
//																			<br></br><div><b>
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios							</div><div>
//	--------	--------	---------------------------------				</div><div>
//	PBD 		05/10/07		Creación									</div><div>
///////////////////////////////////////////////////////////////////////////////
integer		li_ret

THIS.Event ueinitpermisos(li_ret)

IF li_ret < 0 THEN
	ib_stop_processing = TRUE
	RETURN FALSE
END IF

RETURN TRUE
end event

event ue_exitapp();w_siccod_frame				lw_mdi

App.srvmsgbox.MessageBox(App.MsgBoxTitle,'Se ha completado la grabación. A continuación se cerrará Siccod')

//25.01.2008 Al terminar la grabación, cerramos la ventana
lw_mdi = THIS.ParentWindow()
lw_mdi.ii_avisar = 0
Close(lw_mdi)
RETURN
end event

event ueinitpermisos(ref integer ai_retorno);/////////////////////////////////////////////////////////////////////////////
// Objeto		: w_form_base
//
//	Evento		: ueinitpermisos
//
//	Comentarios	: Gestiona los permisos del menú
//			  
//
//	Modificaciones:
//		Fecha		Autor			Comentarios
//		--------	--------		----------------------------------------------------
//		PBD 		16/04/08		Creación a partir de wc_winmenu
///////////////////////////////////////////////////////////////////////////////
//Iniciamos servicios de datawindow

datastore						lds_datos
m_main							lm_menu
integer							li_ret 
string							ls_mensaje 

lm_menu = THIS.MenuID
i_cst_manteniment = Create n_cst_winsrv_mantenim

i_cst_manteniment.of_getpermisostran(App.is_CodTran,App.srvUsers.perfil,&
App.srvUsers.il_usuid,lds_datos)


li_ret = i_cst_manteniment.of_permisosthismenu(lm_menu,lds_datos)
li_ret = i_cst_manteniment.of_permisosmenu(lm_menu,lds_datos)



IF li_ret = -2 THEN
	
	ls_mensaje = "Su usuario no tiene permisos de acceso a esta opción de Siccod"
	if isValid(App.srvMsgBox) Then
		li_Ret = App.srvMsgBox.MessageBox(App.MsgBoxTitle, ls_mensaje , StopSign!) 
	Else
		li_Ret = MessageBox(App.MsgBoxTitle, ls_mensaje, StopSign!) 
	End If
	
	ai_retorno = -1
	RETURN
END IF	

ai_retorno = 0
RETURN
end event

public function integer of_asigna_valores ();//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			w_form_base
//
//	Función:			of_asigna_valores
//
//	Descripción	  : Rellenamos en la ventana los parámetros recibidos
//
//	Usada en:	   Apertura del mantenimiento a crear/modificar
//
//	Argumentos:		(None)
//					  
//	Retorno:																	<div>
//						0			OK											</div><div>
//						-1			Si hay un error						</div><br></br>
//
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios									</div><div>
//	--------	--------	---------------------------------		</div><div>
//	PBD 		05/10/07		Creación		</div>
//
///////////////////////////////////////////////////////////////////////////////
RETURN 0
end function

public function boolean of_validadatos ();//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			w_form_base
//
//	Función:			of_validadatos
//
//	Descripción	  : Validamos que todos los parámetros recibidos estén rellenos
//
//	Usada en:	   Apertura del mantenimiento a crear/modificar
//
//	Argumentos:		(None)
//					  
//	Retorno:																	<div>
//						TRUE		Si son correctos						</div><div>
//						FALSE		Si se produce algún error			</div><br></br>
//
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios									</div><div>
//	--------	--------	---------------------------------		</div><div>
//	PBD 		05/10/07		Creación		</div>
//
///////////////////////////////////////////////////////////////////////////////
String 				ls_mensaje[]
integer				i, ll_total
boolean				lb_retorno = TRUE

ls_mensaje = is_campos

ll_total = UpperBound(App.is_parametros[])

FOR i = 1 TO ll_total
	IF isnull(App.is_parametros[i]) OR trim(App.is_parametros[i]) = '' THEN
		IF UpperBound(ib_canbenull[]) >= i THEN
			IF ib_canbenull[i] = FALSE THEN
				App.srvMsgBox.MessageBox(App.MsgBoxTitle, "No se ha encontrado el dato del " + ls_mensaje[i])
				lb_retorno = FALSE
				EXIT
			END IF
		ELSE
			App.srvMsgBox.MessageBox(App.MsgBoxTitle, "No se ha encontrado el dato del " + ls_mensaje[i])
			lb_retorno = FALSE
			EXIT
		END IF
	END IF
NEXT

Return lb_retorno
end function

public function boolean of_validacampos ();//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			w_form_base
//
//	Función:			of_validacampos
//
//	Descripción	  : Validamos que todos los parámetros tienen valores coherentes
//
//	Usada en:	   Apertura del mantenimiento a crear/modificar
//
//	Argumentos:		(None)
//					  
//	Retorno:																	<div>
//						TRUE		Si son correctos						</div><div>
//						FALSE		Si se produce algún error			</div><br></br>
//
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios									</div><div>
//	--------	--------	---------------------------------		</div><div>
//	PBD 		05/10/07		Creación		</div>
//
///////////////////////////////////////////////////////////////////////////////
boolean				lb_retorno = TRUE


Return lb_retorno
end function

public function boolean of_isnumber (string as_parametro);/*Esta función comprueba si un dato, de estar relleno, es numérico. Se emplea para validar los datos de entrada de Entrada Única*/
IF as_parametro = "" OR IsNull(as_parametro) THEN 
	RETURN TRUE
END IF

IF IsNumber(as_parametro) THEN
	RETURN TRUE
END IF

RETURN FALSE

end function

public function boolean of_isdate (string as_parametro);/*Esta función comprueba si un dato, de estar relleno, es de tipo fecha. Se emplea para validar los datos de entrada de Entrada Única*/
IF as_parametro = "" OR IsNull(as_parametro) THEN 
	RETURN TRUE
END IF

IF IsDate(as_parametro) THEN
	RETURN TRUE
END IF

RETURN FALSE

end function

on w_form_base.create
if this.MenuName = "m_main" then this.MenuID = create m_main
this.dw_1=create dw_1
this.Control[]={this.dw_1}
end on

on w_form_base.destroy
if IsValid(MenuID) then destroy(MenuID)
destroy(this.dw_1)
end on

event open;boolean			lb_ok
integer			li_retorno


this.x = 0
this.y = 0
/*******************************************/	
lb_ok = Event ue_preopen()
/*******************************************/	

IF lb_ok = TRUE AND 	ib_stop_processing = FALSE THEN
/*******************************************/	
	lb_ok = Event ue_postopen()
/*******************************************/		
	IF lb_ok = TRUE THEN
		li_retorno = 0
	ELSE
		li_retorno = -1
	END IF
ELSE
	li_retorno = -1
END IF

IF li_retorno < 0 THEN
	Close(THIS)
END IF
end event

type dw_1 from datawindow within w_form_base
integer y = 4
integer width = 2720
integer height = 1436
integer taborder = 10
boolean bringtotop = true
string title = "none"
boolean border = false
boolean livescroll = true
borderstyle borderstyle = stylelowered!
end type


forward
global type w_form_base from window
end type
type dw_1 from datawindow within w_form_base
end type
end forward

global type w_form_base from window
integer width = 2738
integer height = 1560
string title = "Mantenimiento de Interlocutores"
string menuname = "m_main"
long backcolor = 67108864
string icon = "Vendedor.ico"
event m_accok ( )
event type boolean ue_postopen ( )
event type boolean ue_preopen ( )
event ue_exitapp ( )
event ueinitpermisos ( ref integer ai_retorno )
dw_1 dw_1
end type
global w_form_base w_form_base

type variables
integer						ii_modo
CONSTANT INTEGER		II_MODIFICACION = 1
CONSTANT INTEGER		II_ALTA = 0

string							is_campos[]
boolean						ib_canbenull[]


//Perfiles acceso
n_cst_winsrv_mantenim	i_cst_manteniment
string							is_codtran
boolean						ib_stop_processing = FALSE

end variables

forward prototypes
public function integer of_asigna_valores ()
public function boolean of_validadatos ()
public function boolean of_validacampos ()
public function boolean of_isnumber (string as_parametro)
public function boolean of_isdate (string as_parametro)
end prototypes

event type boolean ue_postopen();RETURN TRUE
end event

event type boolean ue_preopen();//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			w_form_base
//
//	Evento:			ue_preopen
//
//	Descripción	  : Rellenamos los datos del mantenimiento
//
//	Usada en:	   Entrada en la aplicación
//
//	Argumentos:		(None)
//					  
//	Retorno:			boolean		TRUE si OK							<br></br>
//										FALSE si hay que cerrar			
//																			<br></br><div><b>
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios							</div><div>
//	--------	--------	---------------------------------				</div><div>
//	PBD 		05/10/07		Creación									</div><div>
///////////////////////////////////////////////////////////////////////////////
integer		li_ret

THIS.Event ueinitpermisos(li_ret)

IF li_ret < 0 THEN
	ib_stop_processing = TRUE
	RETURN FALSE
END IF

RETURN TRUE
end event

event ue_exitapp();w_siccod_frame				lw_mdi

App.srvmsgbox.MessageBox(App.MsgBoxTitle,'Se ha completado la grabación. A continuación se cerrará Siccod')

//25.01.2008 Al terminar la grabación, cerramos la ventana
lw_mdi = THIS.ParentWindow()
lw_mdi.ii_avisar = 0
Close(lw_mdi)
RETURN
end event

event ueinitpermisos(ref integer ai_retorno);/////////////////////////////////////////////////////////////////////////////
// Objeto		: w_form_base
//
//	Evento		: ueinitpermisos
//
//	Comentarios	: Gestiona los permisos del menú
//			  
//
//	Modificaciones:
//		Fecha		Autor			Comentarios
//		--------	--------		----------------------------------------------------
//		PBD 		16/04/08		Creación a partir de wc_winmenu
///////////////////////////////////////////////////////////////////////////////
//Iniciamos servicios de datawindow

datastore						lds_datos
m_main							lm_menu
integer							li_ret 
string							ls_mensaje 

lm_menu = THIS.MenuID
i_cst_manteniment = Create n_cst_winsrv_mantenim

i_cst_manteniment.of_getpermisostran(App.is_CodTran,App.srvUsers.perfil,&
App.srvUsers.il_usuid,lds_datos)


li_ret = i_cst_manteniment.of_permisosthismenu(lm_menu,lds_datos)
li_ret = i_cst_manteniment.of_permisosmenu(lm_menu,lds_datos)



IF li_ret = -2 THEN
	
	ls_mensaje = "Su usuario no tiene permisos de acceso a esta opción de Siccod"
	if isValid(App.srvMsgBox) Then
		li_Ret = App.srvMsgBox.MessageBox(App.MsgBoxTitle, ls_mensaje , StopSign!) 
	Else
		li_Ret = MessageBox(App.MsgBoxTitle, ls_mensaje, StopSign!) 
	End If
	
	ai_retorno = -1
	RETURN
END IF	

ai_retorno = 0
RETURN
end event

public function integer of_asigna_valores ();//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			w_form_base
//
//	Función:			of_asigna_valores
//
//	Descripción	  : Rellenamos en la ventana los parámetros recibidos
//
//	Usada en:	   Apertura del mantenimiento a crear/modificar
//
//	Argumentos:		(None)
//					  
//	Retorno:																	<div>
//						0			OK											</div><div>
//						-1			Si hay un error						</div><br></br>
//
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios									</div><div>
//	--------	--------	---------------------------------		</div><div>
//	PBD 		05/10/07		Creación		</div>
//
///////////////////////////////////////////////////////////////////////////////
RETURN 0
end function

public function boolean of_validadatos ();//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			w_form_base
//
//	Función:			of_validadatos
//
//	Descripción	  : Validamos que todos los parámetros recibidos estén rellenos
//
//	Usada en:	   Apertura del mantenimiento a crear/modificar
//
//	Argumentos:		(None)
//					  
//	Retorno:																	<div>
//						TRUE		Si son correctos						</div><div>
//						FALSE		Si se produce algún error			</div><br></br>
//
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios									</div><div>
//	--------	--------	---------------------------------		</div><div>
//	PBD 		05/10/07		Creación		</div>
//
///////////////////////////////////////////////////////////////////////////////
String 				ls_mensaje[]
integer				i, ll_total
boolean				lb_retorno = TRUE

ls_mensaje = is_campos

ll_total = UpperBound(App.is_parametros[])

FOR i = 1 TO ll_total
	IF isnull(App.is_parametros[i]) OR trim(App.is_parametros[i]) = '' THEN
		IF UpperBound(ib_canbenull[]) >= i THEN
			IF ib_canbenull[i] = FALSE THEN
				App.srvMsgBox.MessageBox(App.MsgBoxTitle, "No se ha encontrado el dato del " + ls_mensaje[i])
				lb_retorno = FALSE
				EXIT
			END IF
		ELSE
			App.srvMsgBox.MessageBox(App.MsgBoxTitle, "No se ha encontrado el dato del " + ls_mensaje[i])
			lb_retorno = FALSE
			EXIT
		END IF
	END IF
NEXT

Return lb_retorno
end function

public function boolean of_validacampos ();//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			w_form_base
//
//	Función:			of_validacampos
//
//	Descripción	  : Validamos que todos los parámetros tienen valores coherentes
//
//	Usada en:	   Apertura del mantenimiento a crear/modificar
//
//	Argumentos:		(None)
//					  
//	Retorno:																	<div>
//						TRUE		Si son correctos						</div><div>
//						FALSE		Si se produce algún error			</div><br></br>
//
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios									</div><div>
//	--------	--------	---------------------------------		</div><div>
//	PBD 		05/10/07		Creación		</div>
//
///////////////////////////////////////////////////////////////////////////////
boolean				lb_retorno = TRUE


Return lb_retorno
end function

public function boolean of_isnumber (string as_parametro);/*Esta función comprueba si un dato, de estar relleno, es numérico. Se emplea para validar los datos de entrada de Entrada Única*/
IF as_parametro = "" OR IsNull(as_parametro) THEN 
	RETURN TRUE
END IF

IF IsNumber(as_parametro) THEN
	RETURN TRUE
END IF

RETURN FALSE

end function

public function boolean of_isdate (string as_parametro);/*Esta función comprueba si un dato, de estar relleno, es de tipo fecha. Se emplea para validar los datos de entrada de Entrada Única*/
IF as_parametro = "" OR IsNull(as_parametro) THEN 
	RETURN TRUE
END IF

IF IsDate(as_parametro) THEN
	RETURN TRUE
END IF

RETURN FALSE

end function

on w_form_base.create
if this.MenuName = "m_main" then this.MenuID = create m_main
this.dw_1=create dw_1
this.Control[]={this.dw_1}
end on

on w_form_base.destroy
if IsValid(MenuID) then destroy(MenuID)
destroy(this.dw_1)
end on

event open;boolean			lb_ok
integer			li_retorno


this.x = 0
this.y = 0
/*******************************************/	
lb_ok = Event ue_preopen()
/*******************************************/	

IF lb_ok = TRUE AND 	ib_stop_processing = FALSE THEN
/*******************************************/	
	lb_ok = Event ue_postopen()
/*******************************************/		
	IF lb_ok = TRUE THEN
		li_retorno = 0
	ELSE
		li_retorno = -1
	END IF
ELSE
	li_retorno = -1
END IF

IF li_retorno < 0 THEN
	Close(THIS)
END IF
end event

type dw_1 from datawindow within w_form_base
integer y = 4
integer width = 2720
integer height = 1436
integer taborder = 10
boolean bringtotop = true
string title = "none"
boolean border = false
boolean livescroll = true
borderstyle borderstyle = stylelowered!
end type


forward
global type w_form_base from window
end type
type dw_1 from datawindow within w_form_base
end type
end forward

global type w_form_base from window
integer width = 2738
integer height = 1560
string title = "Mantenimiento de Interlocutores"
string menuname = "m_main"
long backcolor = 67108864
string icon = "Vendedor.ico"
event m_accok ( )
event type boolean ue_postopen ( )
event type boolean ue_preopen ( )
event ue_exitapp ( )
event ueinitpermisos ( ref integer ai_retorno )
dw_1 dw_1
end type
global w_form_base w_form_base

type variables
integer						ii_modo
CONSTANT INTEGER		II_MODIFICACION = 1
CONSTANT INTEGER		II_ALTA = 0

string							is_campos[]
boolean						ib_canbenull[]


//Perfiles acceso
n_cst_winsrv_mantenim	i_cst_manteniment
string							is_codtran
boolean						ib_stop_processing = FALSE

end variables

forward prototypes
public function integer of_asigna_valores ()
public function boolean of_validadatos ()
public function boolean of_validacampos ()
public function boolean of_isnumber (string as_parametro)
public function boolean of_isdate (string as_parametro)
end prototypes

event type boolean ue_postopen();RETURN TRUE
end event

event type boolean ue_preopen();//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			w_form_base
//
//	Evento:			ue_preopen
//
//	Descripción	  : Rellenamos los datos del mantenimiento
//
//	Usada en:	   Entrada en la aplicación
//
//	Argumentos:		(None)
//					  
//	Retorno:			boolean		TRUE si OK							<br></br>
//										FALSE si hay que cerrar			
//																			<br></br><div><b>
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios							</div><div>
//	--------	--------	---------------------------------				</div><div>
//	PBD 		05/10/07		Creación									</div><div>
///////////////////////////////////////////////////////////////////////////////
integer		li_ret

THIS.Event ueinitpermisos(li_ret)

IF li_ret < 0 THEN
	ib_stop_processing = TRUE
	RETURN FALSE
END IF

RETURN TRUE
end event

event ue_exitapp();w_siccod_frame				lw_mdi

App.srvmsgbox.MessageBox(App.MsgBoxTitle,'Se ha completado la grabación. A continuación se cerrará Siccod')

//25.01.2008 Al terminar la grabación, cerramos la ventana
lw_mdi = THIS.ParentWindow()
lw_mdi.ii_avisar = 0
Close(lw_mdi)
RETURN
end event

event ueinitpermisos(ref integer ai_retorno);/////////////////////////////////////////////////////////////////////////////
// Objeto		: w_form_base
//
//	Evento		: ueinitpermisos
//
//	Comentarios	: Gestiona los permisos del menú
//			  
//
//	Modificaciones:
//		Fecha		Autor			Comentarios
//		--------	--------		----------------------------------------------------
//		PBD 		16/04/08		Creación a partir de wc_winmenu
///////////////////////////////////////////////////////////////////////////////
//Iniciamos servicios de datawindow

datastore						lds_datos
m_main							lm_menu
integer							li_ret 
string							ls_mensaje 

lm_menu = THIS.MenuID
i_cst_manteniment = Create n_cst_winsrv_mantenim

i_cst_manteniment.of_getpermisostran(App.is_CodTran,App.srvUsers.perfil,&
App.srvUsers.il_usuid,lds_datos)


li_ret = i_cst_manteniment.of_permisosthismenu(lm_menu,lds_datos)
li_ret = i_cst_manteniment.of_permisosmenu(lm_menu,lds_datos)



IF li_ret = -2 THEN
	
	ls_mensaje = "Su usuario no tiene permisos de acceso a esta opción de Siccod"
	if isValid(App.srvMsgBox) Then
		li_Ret = App.srvMsgBox.MessageBox(App.MsgBoxTitle, ls_mensaje , StopSign!) 
	Else
		li_Ret = MessageBox(App.MsgBoxTitle, ls_mensaje, StopSign!) 
	End If
	
	ai_retorno = -1
	RETURN
END IF	

ai_retorno = 0
RETURN
end event

public function integer of_asigna_valores ();//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			w_form_base
//
//	Función:			of_asigna_valores
//
//	Descripción	  : Rellenamos en la ventana los parámetros recibidos
//
//	Usada en:	   Apertura del mantenimiento a crear/modificar
//
//	Argumentos:		(None)
//					  
//	Retorno:																	<div>
//						0			OK											</div><div>
//						-1			Si hay un error						</div><br></br>
//
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios									</div><div>
//	--------	--------	---------------------------------		</div><div>
//	PBD 		05/10/07		Creación		</div>
//
///////////////////////////////////////////////////////////////////////////////
RETURN 0
end function

public function boolean of_validadatos ();//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			w_form_base
//
//	Función:			of_validadatos
//
//	Descripción	  : Validamos que todos los parámetros recibidos estén rellenos
//
//	Usada en:	   Apertura del mantenimiento a crear/modificar
//
//	Argumentos:		(None)
//					  
//	Retorno:																	<div>
//						TRUE		Si son correctos						</div><div>
//						FALSE		Si se produce algún error			</div><br></br>
//
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios									</div><div>
//	--------	--------	---------------------------------		</div><div>
//	PBD 		05/10/07		Creación		</div>
//
///////////////////////////////////////////////////////////////////////////////
String 				ls_mensaje[]
integer				i, ll_total
boolean				lb_retorno = TRUE

ls_mensaje = is_campos

ll_total = UpperBound(App.is_parametros[])

FOR i = 1 TO ll_total
	IF isnull(App.is_parametros[i]) OR trim(App.is_parametros[i]) = '' THEN
		IF UpperBound(ib_canbenull[]) >= i THEN
			IF ib_canbenull[i] = FALSE THEN
				App.srvMsgBox.MessageBox(App.MsgBoxTitle, "No se ha encontrado el dato del " + ls_mensaje[i])
				lb_retorno = FALSE
				EXIT
			END IF
		ELSE
			App.srvMsgBox.MessageBox(App.MsgBoxTitle, "No se ha encontrado el dato del " + ls_mensaje[i])
			lb_retorno = FALSE
			EXIT
		END IF
	END IF
NEXT

Return lb_retorno
end function

public function boolean of_validacampos ();//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			w_form_base
//
//	Función:			of_validacampos
//
//	Descripción	  : Validamos que todos los parámetros tienen valores coherentes
//
//	Usada en:	   Apertura del mantenimiento a crear/modificar
//
//	Argumentos:		(None)
//					  
//	Retorno:																	<div>
//						TRUE		Si son correctos						</div><div>
//						FALSE		Si se produce algún error			</div><br></br>
//
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios									</div><div>
//	--------	--------	---------------------------------		</div><div>
//	PBD 		05/10/07		Creación		</div>
//
///////////////////////////////////////////////////////////////////////////////
boolean				lb_retorno = TRUE


Return lb_retorno
end function

public function boolean of_isnumber (string as_parametro);/*Esta función comprueba si un dato, de estar relleno, es numérico. Se emplea para validar los datos de entrada de Entrada Única*/
IF as_parametro = "" OR IsNull(as_parametro) THEN 
	RETURN TRUE
END IF

IF IsNumber(as_parametro) THEN
	RETURN TRUE
END IF

RETURN FALSE

end function

public function boolean of_isdate (string as_parametro);/*Esta función comprueba si un dato, de estar relleno, es de tipo fecha. Se emplea para validar los datos de entrada de Entrada Única*/
IF as_parametro = "" OR IsNull(as_parametro) THEN 
	RETURN TRUE
END IF

IF IsDate(as_parametro) THEN
	RETURN TRUE
END IF

RETURN FALSE

end function

on w_form_base.create
if this.MenuName = "m_main" then this.MenuID = create m_main
this.dw_1=create dw_1
this.Control[]={this.dw_1}
end on

on w_form_base.destroy
if IsValid(MenuID) then destroy(MenuID)
destroy(this.dw_1)
end on

event open;boolean			lb_ok
integer			li_retorno


this.x = 0
this.y = 0
/*******************************************/	
lb_ok = Event ue_preopen()
/*******************************************/	

IF lb_ok = TRUE AND 	ib_stop_processing = FALSE THEN
/*******************************************/	
	lb_ok = Event ue_postopen()
/*******************************************/		
	IF lb_ok = TRUE THEN
		li_retorno = 0
	ELSE
		li_retorno = -1
	END IF
ELSE
	li_retorno = -1
END IF

IF li_retorno < 0 THEN
	Close(THIS)
END IF
end event

type dw_1 from datawindow within w_form_base
integer y = 4
integer width = 2720
integer height = 1436
integer taborder = 10
boolean bringtotop = true
string title = "none"
boolean border = false
boolean livescroll = true
borderstyle borderstyle = stylelowered!
end type


forward
global type w_response_base from window
end type
type p_icono from picture within w_response_base
end type
type st_titulo from statictext within w_response_base
end type
type pb_borrar from picturebutton within w_response_base
end type
type pb_modificar from picturebutton within w_response_base
end type
type pb_salir from picturebutton within w_response_base
end type
type pb_aceptar from picturebutton within w_response_base
end type
type pb_cancelar from picturebutton within w_response_base
end type
type pb_alta from picturebutton within w_response_base
end type
type dw_1 from datawindow within w_response_base
end type
type st_fondo from statictext within w_response_base
end type
end forward

global type w_response_base from window
integer x = 50
integer y = 284
integer width = 2350
integer height = 1200
windowtype windowtype = response!
long backcolor = 67108864
boolean center = true
event ue_aceptar pbm_custom21
event ue_cancel ( )
event ue_close ( )
event ue_transaction ( )
event ue_insertrow ( )
event ue_delete ( )
event ue_save ( )
event type integer ue_presave ( )
event ue_postsave ( )
event ue_enabled ( )
event ue_desabled ( )
event ue_modificar ( )
event ue_retrieve ( )
event ue_postopen ( )
p_icono p_icono
st_titulo st_titulo
pb_borrar pb_borrar
pb_modificar pb_modificar
pb_salir pb_salir
pb_aceptar pb_aceptar
pb_cancelar pb_cancelar
pb_alta pb_alta
dw_1 dw_1
st_fondo st_fondo
end type
global w_response_base w_response_base

type variables
Long     il_fila

long		il_ugeid, ii_modo, il_tmoid

CONSTANT integer	II_ALTA = 0
CONSTANT integer	II_MODIFICACION = 1

//damos opción a salir pero avisamos al usuario
//de que debe guardar alguna unidad de gestión
boolean	ib_pregunta_salir = TRUE	

CONSTANT integer	II_ACCESO_ALTA = 0
CONSTANT integer	II_ACCESO_MODIFICACION = 1
CONSTANT integer	II_INSERTROW = 2
CONSTANT integer	II_MODIFICAR = 3
CONSTANT integer	II_PREPARED_BORRABLE = 4
CONSTANT integer	II_PREPARED_NOBORRABLE = 5
CONSTANT	integer	II_TRASBORRAR = 6
CONSTANT	integer	II_TRASGUARDAR = 7
CONSTANT integer	II_MODIFICAR_CANCELABLE = 8
CONSTANT integer	II_PREMODIFICAR= 9

string			is_mensaje_close = 'No se ha guardado los datos.~r~n ¿Está seguro de salir?'

//17.04.2008 Permisos
n_cst_winsrv_mantenim		i_cst_manteniment
string								is_tag

end variables

forward prototypes
public function integer of_botones (integer ai_modo)
public function integer of_setdefaultvalues ()
public function integer of_asignavalores ()
public function boolean of_isborrable (long al_row)
public function integer of_getderechos (string as_menutag)
public function integer of_getugesusuario (string as_campo)
public function integer of_getugesusuario ()
end prototypes

event ue_aceptar;this.PostEvent("ue_close")
end event

event ue_cancel();integer			li_respuesta


IF dw_1.Modifiedcount( ) > 0 AND ib_pregunta_salir = FALSE THEN
	li_respuesta = App.srvMsgBox.MessageBox(App.MsgBoxTitle,  'No se han grabado los cambios. ~r~n' + &
	'Está seguro de que desea salir?', Question!, YesNo!, 2)
	
	IF li_respuesta = 2 THEN RETURN
END IF

this.Post Event ue_close()
end event

event ue_close();Close(This)
end event

event ue_insertrow();Integer li_row

dw_1.SetFocus()
li_row	=	dw_1.InsertRow(0)
dw_1.SetRow( li_row )
dw_1.ScrollToRow ( li_row )


f_enabled(dw_1)

of_botones(II_INSERTROW)
end event

event ue_delete();Long	ll_fila

ll_fila = dw_1.GetRow()
IF ll_fila > 0 THEN
	IF of_isborrable(ll_fila) = FALSE THEN RETURN
	
	dw_1.deleterow(ll_fila)
	
	IF ll_fila > 1 THEN
		dw_1.SelectRow(ll_fila, TRUE)
	ELSE
		dw_1.SelectRow(1, TRUE)
	END IF
END IF


f_desabled(dw_1)

of_botones(II_TRASBORRAR)
end event

event ue_enabled();
f_enabled(dw_1)

of_botones(II_MODIFICAR)
end event

event ue_desabled();of_botones(II_PREPARED_BORRABLE)

Event ue_retrieve()

f_desabled(dw_1)



end event

event ue_modificar();This.Event ue_enabled()
end event

event ue_postopen();IF IsValid(THIS) THEN
 	of_getderechos(is_tag)
END IF
end event

public function integer of_botones (integer ai_modo);return 0
end function

public function integer of_setdefaultvalues ();return 0
end function

public function integer of_asignavalores ();return 0
end function

public function boolean of_isborrable (long al_row);/*25.01.2008 Esta función determina si una fila puede borrarse o no
*/
RETURN TRUE
end function

public function integer of_getderechos (string as_menutag);///////////////////////////////////////////////////////////////////////////////
// Función		: of_getderechos
//	Comentarios	: Toma los derechos del usuario para esta opción (varían con ella)
//					
//
//	Parámetros	: as_menutag	Identificativo de la opción
//					  
//	Retorno		: 1  = Correcto. Se toman derechos
//					  -1 = No hay derechos específicos de esta opción
//			
//	Modificaciones:
//		Fecha		Autor		Comentarios
//		--------	--------	-------------------------------------------------------
//		03/03/05	PBD		Creación del Script
///////////////////////////////////////////////////////////////////////////////
datastore						lds_datos
integer							li_ret 
string							ls_mensaje

i_cst_manteniment = Create n_cst_winsrv_mantenim

i_cst_manteniment.of_getpermisostran(as_menutag,App.srvUsers.perfil,&
App.srvUsers.il_usuid,lds_datos)

li_ret = i_cst_manteniment.of_permisosresponse(lds_datos,THIS)

IF li_ret = -2 THEN
	
	ls_mensaje = "Su usuario no tiene permisos de acceso a esta opción de Siccod"
	if isValid(App.srvMsgBox) Then
		li_Ret = App.srvMsgBox.MessageBox(App.MsgBoxTitle, ls_mensaje , StopSign!) 
	Else
		li_Ret = MessageBox(App.MsgBoxTitle, ls_mensaje, StopSign!) 
	End If
	
	Close(THIS)
	RETURN -1
END IF	

RETURN 0
end function

public function integer of_getugesusuario (string as_campo);// Una vez ha finalizado el retrieve, filtramos la 
// DDDW de las unidades de gestión para mostrar sólo
// las UG que puede visualizar el usuario

String								ls_filter, ls_UGES
DataWindowChild					ldwChild
n_cst_bo_estructuragestion		lnv_EstGest

IF as_campo = "" THEN as_campo = "ugeid"

If dw_1.GetChild(as_campo, ldwChild) < 0 Then Return -1

App.inv_Connect.of_CreateInstanceAppl(lnv_EstGest, "n_cst_bo_estructuragestion")

If lnv_EstGest.of_GetUGesUsuario(App.srvUsers.Codi, ls_UGEs) > 0 Then

	ls_filter = as_campo + " IN (" + ls_UGES + ")"
	ldwChild.SetFilter(ls_filter)
	ldwChild.Filter()

End If

App.inv_Connect.of_DestroyInstanceAppl(lnv_EstGest)

RETURN 0
end function

public function integer of_getugesusuario ();integer			li_retorno

li_retorno = of_getugesusuario("ugeid")

RETURN li_retorno

end function

on w_response_base.create
this.p_icono=create p_icono
this.st_titulo=create st_titulo
this.pb_borrar=create pb_borrar
this.pb_modificar=create pb_modificar
this.pb_salir=create pb_salir
this.pb_aceptar=create pb_aceptar
this.pb_cancelar=create pb_cancelar
this.pb_alta=create pb_alta
this.dw_1=create dw_1
this.st_fondo=create st_fondo
this.Control[]={this.p_icono,&
this.st_titulo,&
this.pb_borrar,&
this.pb_modificar,&
this.pb_salir,&
this.pb_aceptar,&
this.pb_cancelar,&
this.pb_alta,&
this.dw_1,&
this.st_fondo}
end on

on w_response_base.destroy
destroy(this.p_icono)
destroy(this.st_titulo)
destroy(this.pb_borrar)
destroy(this.pb_modificar)
destroy(this.pb_salir)
destroy(this.pb_aceptar)
destroy(this.pb_cancelar)
destroy(this.pb_alta)
destroy(this.dw_1)
destroy(this.st_fondo)
end on

event closequery;integer			li_retorno

IF ib_pregunta_salir = TRUE THEN
	li_retorno = App.srvMsgBox.MessageBox(App.MsgBoxTitle,  &
	is_mensaje_close,	Question!, YesNo!, 2)
	
	IF li_retorno = 2 THEN
		RETURN 1
	END IF
END IF
end event

event open;structure								lstr_parametros
str_interlocutor_eu						lstr_interlocutor
str_modecomu						lstr_modecomu


CHOOSE CASE Message.PowerObjectParm.ClassName()
	CASE "str_interlocutor"
		lstr_interlocutor = Message.PowerObjectParm
		is_tag = lstr_interlocutor.str_tag
	CASE  "str_modecomu"
		lstr_modecomu = Message.PowerObjectParm
		is_tag = lstr_modecomu.str_tag
END CHOOSE

Post Event ue_postopen()
end event

type p_icono from picture within w_response_base
integer x = 46
integer width = 146
integer height = 128
boolean enabled = false
boolean originalsize = true
string picturename = "images\trebol32.jpg"
boolean focusrectangle = false
end type

type st_titulo from statictext within w_response_base
integer x = 210
integer y = 20
integer width = 1879
integer height = 100
integer textsize = -14
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
long textcolor = 16777215
long backcolor = 15780518
boolean enabled = false
boolean focusrectangle = false
end type

type pb_borrar from picturebutton within w_response_base
integer x = 521
integer y = 996
integer width = 101
integer height = 88
integer taborder = 30
integer textsize = -8
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "MS Sans Serif"
string picturename = "images\borrar.gif"
string disabledname = "images\borrar.gif"
end type

event clicked;Parent.event ue_delete()
end event

type pb_modificar from picturebutton within w_response_base
integer x = 407
integer y = 996
integer width = 101
integer height = 88
integer taborder = 60
integer textsize = -8
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "MS Sans Serif"
string picturename = "EditStops5!"
string disabledname = "EditStops5!"
end type

event clicked;PARENT.Event ue_modificar()
end event

type pb_salir from picturebutton within w_response_base
integer x = 2149
integer y = 996
integer width = 101
integer height = 88
integer taborder = 50
integer textsize = -8
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "MS Sans Serif"
string picturename = "exit!"
string disabledname = "exit!"
end type

event clicked;parent.event ue_cancel()
end event

type pb_aceptar from picturebutton within w_response_base
integer x = 14
integer y = 996
integer width = 101
integer height = 88
integer taborder = 40
integer textsize = -8
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "MS Sans Serif"
string picturename = "images\accept.jpg"
string disabledname = "images\accept.jpg"
end type

event clicked;PARENT.Event ue_save()
end event

type pb_cancelar from picturebutton within w_response_base
integer x = 133
integer y = 996
integer width = 101
integer height = 88
integer taborder = 10
integer textsize = -8
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "MS Sans Serif"
string picturename = "images\cross.jpg"
string disabledname = "images\cross.jpg"
end type

event clicked;Parent.triggerEvent('ue_desabled')
end event

type pb_alta from picturebutton within w_response_base
integer x = 288
integer y = 996
integer width = 101
integer height = 88
integer taborder = 20
integer textsize = -8
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "MS Sans Serif"
string picturename = "images\new.jpg"
string disabledname = "images\new.jpg"
end type

event clicked;Parent.triggerEvent('ue_insertrow')
end event

type dw_1 from datawindow within w_response_base
integer x = 5
integer y = 144
integer width = 2304
integer height = 832
boolean hscrollbar = true
boolean vscrollbar = true
boolean border = false
boolean livescroll = true
borderstyle borderstyle = stylelowered!
end type

event rowfocuschanged;IF this.RowCount() < 1 THEN RETURN

SetRedraw (FALSE)
SelectRow (0, FALSE)
SelectRow (GetRow(), TRUE )
SetRedraw (TRUE)
end event

event dberror;Return 1
end event

event itemchanged;
of_botones(ii_modificar)
end event

event editchanged;
of_botones(ii_modificar)
end event

type st_fondo from statictext within w_response_base
integer x = 14
integer width = 5134
integer height = 136
integer textsize = -14
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
long textcolor = 16777215
long backcolor = 15780518
boolean enabled = false
boolean focusrectangle = false
end type


forward
global type m_main from menu
end type
type m_01 from menu within m_main
end type
type m_0111 from menu within m_01
end type
type m_0112 from menu within m_01
end type
type m_0113 from menu within m_01
end type
type m_parametrosentrada from menu within m_01
end type
type m_0117 from menu within m_01
end type
type m_0118 from menu within m_01
end type
type m_finalizar from menu within m_01
end type
type m_01 from menu within m_main
m_0111 m_0111
m_0112 m_0112
m_0113 m_0113
m_parametrosentrada m_parametrosentrada
m_0117 m_0117
m_0118 m_0118
m_finalizar m_finalizar
end type
type m_03 from menu within m_main
end type
type m_0301 from menu within m_03
end type
type m_0302 from menu within m_03
end type
type m_0310 from menu within m_03
end type
type m_0311 from menu within m_03
end type
type m_0312 from menu within m_03
end type
type m_0313 from menu within m_03
end type
type m_0314 from menu within m_03
end type
type m_03 from menu within m_main
m_0301 m_0301
m_0302 m_0302
m_0310 m_0310
m_0311 m_0311
m_0312 m_0312
m_0313 m_0313
m_0314 m_0314
end type
type m_02 from menu within m_main
end type
type m_0201 from menu within m_02
end type
type m_0202 from menu within m_02
end type
type m_0203 from menu within m_02
end type
type m_0204 from menu within m_02
end type
type m_0205 from menu within m_02
end type
type m_0206 from menu within m_02
end type
type m_configurartools from menu within m_02
end type
type m_02 from menu within m_main
m_0201 m_0201
m_0202 m_0202
m_0203 m_0203
m_0204 m_0204
m_0205 m_0205
m_0206 m_0206
m_configurartools m_configurartools
end type
global type m_main from menu
m_01 m_01
m_03 m_03
m_02 m_02
end type
end forward

type estat from structure
    boolean visible
    boolean toolbaritem
    boolean enabled
end type

global type m_main from menu
m_01 m_01
m_03 m_03
m_02 m_02
end type
global m_main m_main

type variables
end variables

forward prototypes
public function window getframe ()
end prototypes

public function window getframe ();//////////////////////////////////////////////////////////
// Devuelve la ventana para...
//
Window Frame

Frame = ParentWindow

if Frame.WindowType <> MDI! and Frame.WindowType <> MDIHelp! then
	Frame = ParentWindow(Frame)
end if

return Frame

end function

on m_main.create
m_main=this
call super::create
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
this.m_01=create m_01
this.m_03=create m_03
this.m_02=create m_02
this.Item[UpperBound(this.Item)+1]=this.m_01
this.Item[UpperBound(this.Item)+1]=this.m_03
this.Item[UpperBound(this.Item)+1]=this.m_02
end on

on m_main.destroy
call super::destroy
destroy(this.m_01)
destroy(this.m_03)
destroy(this.m_02)
end on

type m_01 from menu within m_main
m_0111 m_0111
m_0112 m_0112
m_0113 m_0113
m_parametrosentrada m_parametrosentrada
m_0117 m_0117
m_0118 m_0118
m_finalizar m_finalizar
end type

on m_01.create
call super::create
this.text = "&Fichero"
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
this.m_0111=create m_0111
this.m_0112=create m_0112
this.m_0113=create m_0113
this.m_parametrosentrada=create m_parametrosentrada
this.m_0117=create m_0117
this.m_0118=create m_0118
this.m_finalizar=create m_finalizar
this.Item[UpperBound(this.Item)+1]=this.m_0111
this.Item[UpperBound(this.Item)+1]=this.m_0112
this.Item[UpperBound(this.Item)+1]=this.m_0113
this.Item[UpperBound(this.Item)+1]=this.m_parametrosentrada
this.Item[UpperBound(this.Item)+1]=this.m_0117
this.Item[UpperBound(this.Item)+1]=this.m_0118
this.Item[UpperBound(this.Item)+1]=this.m_finalizar
end on

on m_01.destroy
call super::destroy
destroy(this.m_0111)
destroy(this.m_0112)
destroy(this.m_0113)
destroy(this.m_parametrosentrada)
destroy(this.m_0117)
destroy(this.m_0118)
destroy(this.m_finalizar)
end on

type m_0111 from menu within m_01
end type

on clicked;TriggerEvent (ParentWindow, "m_FilePrint")

end on

on m_0111.create
call super::create
this.text = "&Imprimir ..."
this.microhelp = "Imprimir"
this.toolbaritemvisible = false
this.toolbaritemname = "print!"
this.toolbaritemtext = "Imprimir"
this.toolbaritemorder = 80
this.toolbaritemspace = 1
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_0111.destroy
call super::destroy
end on

type m_0112 from menu within m_01
end type

on clicked;TriggerEvent (ParentWindow, "m_FilePrintPreview")

end on

on m_0112.create
call super::create
this.text = "Pre-Visualizar ..."
this.microhelp = "Pre-visualizar la impresión ..."
this.toolbaritemvisible = false
this.toolbaritemname = "preview!"
this.toolbaritemtext = "Pre-Visualización"
this.toolbaritemorder = 81
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_0112.destroy
call super::destroy
end on

type m_0113 from menu within m_01
end type

on clicked;PrintSetup()

end on

on m_0113.create
call super::create
this.text = "Configurar impresora ..."
this.microhelp = "Configuar la impresora ..."
this.toolbaritemvisible = false
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_0113.destroy
call super::destroy
end on

type m_parametrosentrada from menu within m_01
end type

event clicked;MessageBox('Parámetros', App.is_commandline)
end event

on m_parametrosentrada.create
call super::create
this.text = "Parametros entrada"
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_parametrosentrada.destroy
call super::destroy
end on

type m_0117 from menu within m_01
end type

on m_0117.create
call super::create
this.text = "-"
this.toolbaritemvisible = false
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_0117.destroy
call super::destroy
end on

type m_0118 from menu within m_01
end type

on clicked;TriggerEvent (ParentWindow, "m_FileClose")

end on

on m_0118.create
call super::create
this.visible = false
this.text = "Cerrar~tCtrl+F4"
this.shortcut = 371
this.microhelp = "Cerrar la finestra"
this.toolbaritemvisible = false
this.toolbaritemname = "close!"
this.toolbaritemtext = "Cerrar"
this.toolbaritemorder = 998
this.toolbaritemspace = 1
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_0118.destroy
call super::destroy
end on

type m_finalizar from menu within m_01
end type

event clicked;
Close (GetFrame())


end event

on m_finalizar.create
call super::create
this.text = "Finalizar~tAlt+F4"
this.shortcut = 627
this.microhelp = "Salir de la aplicación"
this.toolbaritemname = "exit!"
this.toolbaritemtext = "Finalizar"
this.toolbaritemorder = 999
this.toolbaritemspace = 1
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_finalizar.destroy
call super::destroy
end on

type m_03 from menu within m_main
m_0301 m_0301
m_0302 m_0302
m_0310 m_0310
m_0311 m_0311
m_0312 m_0312
m_0313 m_0313
m_0314 m_0314
end type

on m_03.create
call super::create
this.text = "&Editar"
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
this.m_0301=create m_0301
this.m_0302=create m_0302
this.m_0310=create m_0310
this.m_0311=create m_0311
this.m_0312=create m_0312
this.m_0313=create m_0313
this.m_0314=create m_0314
this.Item[UpperBound(this.Item)+1]=this.m_0301
this.Item[UpperBound(this.Item)+1]=this.m_0302
this.Item[UpperBound(this.Item)+1]=this.m_0310
this.Item[UpperBound(this.Item)+1]=this.m_0311
this.Item[UpperBound(this.Item)+1]=this.m_0312
this.Item[UpperBound(this.Item)+1]=this.m_0313
this.Item[UpperBound(this.Item)+1]=this.m_0314
end on

on m_03.destroy
call super::destroy
destroy(this.m_0301)
destroy(this.m_0302)
destroy(this.m_0310)
destroy(this.m_0311)
destroy(this.m_0312)
destroy(this.m_0313)
destroy(this.m_0314)
end on

type m_0301 from menu within m_03
end type

on clicked;TriggerEvent (ParentWindow, "m_AccOk")

end on

on m_0301.create
call super::create
this.text = "&Validar"
this.microhelp = "Validar las modificaciones"
this.toolbaritemname = "images\accept.jpg"
this.toolbaritemdownname = "images\accept.jpg"
this.toolbaritemtext = "Validar"
this.toolbaritemorder = 11
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_0301.destroy
call super::destroy
end on

type m_0302 from menu within m_03
end type

on clicked;TriggerEvent (ParentWindow, "m_AccCancel")

end on

on m_0302.create
call super::create
this.visible = false
this.text = "&Cancelar~tCtrl+C"
this.shortcut = 323
this.microhelp = "Cancelar las modificaciones ..."
this.toolbaritemvisible = false
this.toolbaritemname = "images/cross.jpg"
this.toolbaritemdownname = "images/cross.jpg"
this.toolbaritemtext = "Cancelar"
this.toolbaritemorder = 12
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_0302.destroy
call super::destroy
end on

type m_0310 from menu within m_03
end type

on m_0310.create
call super::create
this.visible = false
this.text = "-"
this.enabled = false
this.toolbaritemvisible = false
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_0310.destroy
call super::destroy
end on

type m_0311 from menu within m_03
end type

on clicked;TriggerEvent (ParentWindow, "m_AccInsert")

end on

on m_0311.create
call super::create
this.visible = false
this.text = "&Alta~tCtrl+I"
this.enabled = false
this.shortcut = 329
this.microhelp = "Alta de un nuevo registro ..."
this.toolbaritemvisible = false
this.toolbaritemname = "images\new.jpg"
this.toolbaritemdownname = "images\new.jpg"
this.toolbaritemtext = "Alta"
this.toolbaritemorder = 20
this.toolbaritemspace = 1
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_0311.destroy
call super::destroy
end on

type m_0312 from menu within m_03
end type

on clicked;TriggerEvent (ParentWindow, "m_AccModify")

end on

on m_0312.create
call super::create
this.visible = false
this.text = "&Modificación~tCtrl+M"
this.enabled = false
this.shortcut = 333
this.microhelp = "Modificación del registro seleccionado ..."
this.toolbaritemvisible = false
this.toolbaritemname = "editstops5!"
this.toolbaritemdownname = "editstops5!"
this.toolbaritemtext = "Modificar"
this.toolbaritemorder = 21
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_0312.destroy
call super::destroy
end on

type m_0313 from menu within m_03
end type

on clicked;TriggerEvent (ParentWindow, "m_AccDelete")

end on

on m_0313.create
call super::create
this.visible = false
this.text = "&Borrar~tCtrl+B"
this.enabled = false
this.shortcut = 322
this.microhelp = "Baja de los registros seleccionados ..."
this.toolbaritemvisible = false
this.toolbaritemname = "images\borrar.gif"
this.toolbaritemdownname = "images\borrar.gif"
this.toolbaritemtext = "Borrar"
this.toolbaritemorder = 22
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_0313.destroy
call super::destroy
end on

type m_0314 from menu within m_03
end type

on m_0314.create
call super::create
this.visible = false
this.text = "Bloquear"
this.enabled = false
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_0314.destroy
call super::destroy
end on

type m_02 from menu within m_main
m_0201 m_0201
m_0202 m_0202
m_0203 m_0203
m_0204 m_0204
m_0205 m_0205
m_0206 m_0206
m_configurartools m_configurartools
end type

on m_02.create
call super::create
this.text = "&Ventana"
this.shifttoright = true
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
this.m_0201=create m_0201
this.m_0202=create m_0202
this.m_0203=create m_0203
this.m_0204=create m_0204
this.m_0205=create m_0205
this.m_0206=create m_0206
this.m_configurartools=create m_configurartools
this.Item[UpperBound(this.Item)+1]=this.m_0201
this.Item[UpperBound(this.Item)+1]=this.m_0202
this.Item[UpperBound(this.Item)+1]=this.m_0203
this.Item[UpperBound(this.Item)+1]=this.m_0204
this.Item[UpperBound(this.Item)+1]=this.m_0205
this.Item[UpperBound(this.Item)+1]=this.m_0206
this.Item[UpperBound(this.Item)+1]=this.m_configurartools
end on

on m_02.destroy
call super::destroy
destroy(this.m_0201)
destroy(this.m_0202)
destroy(this.m_0203)
destroy(this.m_0204)
destroy(this.m_0205)
destroy(this.m_0206)
destroy(this.m_configurartools)
end on

type m_0201 from menu within m_02
end type

event clicked;ArrangeSheets(GetFrame(),Cascade!)
end event

on m_0201.create
call super::create
this.text = "&Cascada"
this.toolbaritemvisible = false
this.toolbaritemtext = "Cascada"
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_0201.destroy
call super::destroy
end on

type m_0202 from menu within m_02
end type

event clicked;ArrangeSheets(GetFrame(),Tile!)
end event

on m_0202.create
call super::create
this.text = "&Mosaico"
this.toolbaritemvisible = false
this.toolbaritemname = "tile!"
this.toolbaritemtext = "Mosaico"
this.toolbaritemorder = 2
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_0202.destroy
call super::destroy
end on

type m_0203 from menu within m_02
end type

event clicked;ArrangeSheets(GetFrame(),Layer!)

end event

on m_0203.create
call super::create
this.text = "&Paneles"
this.toolbaritemvisible = false
this.toolbaritemname = "layer!"
this.toolbaritemtext = "Paneles"
this.toolbaritemorder = 3
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_0203.destroy
call super::destroy
end on

type m_0204 from menu within m_02
end type

event clicked;ArrangeSheets(GetFrame(),Icons!)

end event

on m_0204.create
call super::create
this.text = "&Organizar Iconos"
this.toolbaritemvisible = false
this.toolbaritemname = "arrangeicons!"
this.toolbaritemtext = "Organizar Iconos"
this.toolbaritemorder = 4
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_0204.destroy
call super::destroy
end on

type m_0205 from menu within m_02
end type

on m_0205.create
call super::create
this.text = "-"
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_0205.destroy
call super::destroy
end on

type m_0206 from menu within m_02
end type

on m_0206.create
call super::create
this.text = "Barra de &Herramientas"
this.toolbaritemvisible = false
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_0206.destroy
call super::destroy
end on

type m_configurartools from menu within m_02
end type

event clicked;//nvuo_customToolbar lnv_toolbar
//
//lnv_toolbar = Create nvuo_customToolbar
//
//lnv_toolbar.of_SetIniFile(App.SrvINI.GetFile())
//lnv_toolbar.of_SetFrame(App.SrvWinManager.MDIWindow)
//lnv_toolbar.of_SetMenu(App.SrvWinManager.MDIWindow.MenuID)
//
//lnv_toolbar.of_configure()
//
//Destroy nvuo_customToolbar

end event

on m_configurartools.create
call super::create
this.text = "Configurar Barra Herramientas"
this.toolbaritemvisible = false
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_configurartools.destroy
call super::destroy
end on


forward
global type m_main from menu
end type
type m_01 from menu within m_main
end type
type m_0111 from menu within m_01
end type
type m_0112 from menu within m_01
end type
type m_0113 from menu within m_01
end type
type m_parametrosentrada from menu within m_01
end type
type m_0117 from menu within m_01
end type
type m_0118 from menu within m_01
end type
type m_finalizar from menu within m_01
end type
type m_01 from menu within m_main
m_0111 m_0111
m_0112 m_0112
m_0113 m_0113
m_parametrosentrada m_parametrosentrada
m_0117 m_0117
m_0118 m_0118
m_finalizar m_finalizar
end type
type m_03 from menu within m_main
end type
type m_0301 from menu within m_03
end type
type m_0302 from menu within m_03
end type
type m_0310 from menu within m_03
end type
type m_0311 from menu within m_03
end type
type m_0312 from menu within m_03
end type
type m_0313 from menu within m_03
end type
type m_0314 from menu within m_03
end type
type m_03 from menu within m_main
m_0301 m_0301
m_0302 m_0302
m_0310 m_0310
m_0311 m_0311
m_0312 m_0312
m_0313 m_0313
m_0314 m_0314
end type
type m_02 from menu within m_main
end type
type m_0201 from menu within m_02
end type
type m_0202 from menu within m_02
end type
type m_0203 from menu within m_02
end type
type m_0204 from menu within m_02
end type
type m_0205 from menu within m_02
end type
type m_0206 from menu within m_02
end type
type m_configurartools from menu within m_02
end type
type m_02 from menu within m_main
m_0201 m_0201
m_0202 m_0202
m_0203 m_0203
m_0204 m_0204
m_0205 m_0205
m_0206 m_0206
m_configurartools m_configurartools
end type
global type m_main from menu
m_01 m_01
m_03 m_03
m_02 m_02
end type
end forward

type estat from structure
    boolean visible
    boolean toolbaritem
    boolean enabled
end type

global type m_main from menu
m_01 m_01
m_03 m_03
m_02 m_02
end type
global m_main m_main

type variables
end variables

forward prototypes
public function window getframe ()
end prototypes

public function window getframe ();//////////////////////////////////////////////////////////
// Devuelve la ventana para...
//
Window Frame

Frame = ParentWindow

if Frame.WindowType <> MDI! and Frame.WindowType <> MDIHelp! then
	Frame = ParentWindow(Frame)
end if

return Frame

end function

on m_main.create
m_main=this
call super::create
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
this.m_01=create m_01
this.m_03=create m_03
this.m_02=create m_02
this.Item[UpperBound(this.Item)+1]=this.m_01
this.Item[UpperBound(this.Item)+1]=this.m_03
this.Item[UpperBound(this.Item)+1]=this.m_02
end on

on m_main.destroy
call super::destroy
destroy(this.m_01)
destroy(this.m_03)
destroy(this.m_02)
end on

type m_01 from menu within m_main
m_0111 m_0111
m_0112 m_0112
m_0113 m_0113
m_parametrosentrada m_parametrosentrada
m_0117 m_0117
m_0118 m_0118
m_finalizar m_finalizar
end type

on m_01.create
call super::create
this.text = "&Fichero"
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
this.m_0111=create m_0111
this.m_0112=create m_0112
this.m_0113=create m_0113
this.m_parametrosentrada=create m_parametrosentrada
this.m_0117=create m_0117
this.m_0118=create m_0118
this.m_finalizar=create m_finalizar
this.Item[UpperBound(this.Item)+1]=this.m_0111
this.Item[UpperBound(this.Item)+1]=this.m_0112
this.Item[UpperBound(this.Item)+1]=this.m_0113
this.Item[UpperBound(this.Item)+1]=this.m_parametrosentrada
this.Item[UpperBound(this.Item)+1]=this.m_0117
this.Item[UpperBound(this.Item)+1]=this.m_0118
this.Item[UpperBound(this.Item)+1]=this.m_finalizar
end on

on m_01.destroy
call super::destroy
destroy(this.m_0111)
destroy(this.m_0112)
destroy(this.m_0113)
destroy(this.m_parametrosentrada)
destroy(this.m_0117)
destroy(this.m_0118)
destroy(this.m_finalizar)
end on

type m_0111 from menu within m_01
end type

on clicked;TriggerEvent (ParentWindow, "m_FilePrint")

end on

on m_0111.create
call super::create
this.text = "&Imprimir ..."
this.microhelp = "Imprimir"
this.toolbaritemvisible = false
this.toolbaritemname = "print!"
this.toolbaritemtext = "Imprimir"
this.toolbaritemorder = 80
this.toolbaritemspace = 1
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_0111.destroy
call super::destroy
end on

type m_0112 from menu within m_01
end type

on clicked;TriggerEvent (ParentWindow, "m_FilePrintPreview")

end on

on m_0112.create
call super::create
this.text = "Pre-Visualizar ..."
this.microhelp = "Pre-visualizar la impresión ..."
this.toolbaritemvisible = false
this.toolbaritemname = "preview!"
this.toolbaritemtext = "Pre-Visualización"
this.toolbaritemorder = 81
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_0112.destroy
call super::destroy
end on

type m_0113 from menu within m_01
end type

on clicked;PrintSetup()

end on

on m_0113.create
call super::create
this.text = "Configurar impresora ..."
this.microhelp = "Configuar la impresora ..."
this.toolbaritemvisible = false
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_0113.destroy
call super::destroy
end on

type m_parametrosentrada from menu within m_01
end type

event clicked;MessageBox('Parámetros', App.is_commandline)
end event

on m_parametrosentrada.create
call super::create
this.text = "Parametros entrada"
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_parametrosentrada.destroy
call super::destroy
end on

type m_0117 from menu within m_01
end type

on m_0117.create
call super::create
this.text = "-"
this.toolbaritemvisible = false
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_0117.destroy
call super::destroy
end on

type m_0118 from menu within m_01
end type

on clicked;TriggerEvent (ParentWindow, "m_FileClose")

end on

on m_0118.create
call super::create
this.visible = false
this.text = "Cerrar~tCtrl+F4"
this.shortcut = 371
this.microhelp = "Cerrar la finestra"
this.toolbaritemvisible = false
this.toolbaritemname = "close!"
this.toolbaritemtext = "Cerrar"
this.toolbaritemorder = 998
this.toolbaritemspace = 1
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_0118.destroy
call super::destroy
end on

type m_finalizar from menu within m_01
end type

event clicked;
Close (GetFrame())


end event

on m_finalizar.create
call super::create
this.text = "Finalizar~tAlt+F4"
this.shortcut = 627
this.microhelp = "Salir de la aplicación"
this.toolbaritemname = "exit!"
this.toolbaritemtext = "Finalizar"
this.toolbaritemorder = 999
this.toolbaritemspace = 1
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_finalizar.destroy
call super::destroy
end on

type m_03 from menu within m_main
m_0301 m_0301
m_0302 m_0302
m_0310 m_0310
m_0311 m_0311
m_0312 m_0312
m_0313 m_0313
m_0314 m_0314
end type

on m_03.create
call super::create
this.text = "&Editar"
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
this.m_0301=create m_0301
this.m_0302=create m_0302
this.m_0310=create m_0310
this.m_0311=create m_0311
this.m_0312=create m_0312
this.m_0313=create m_0313
this.m_0314=create m_0314
this.Item[UpperBound(this.Item)+1]=this.m_0301
this.Item[UpperBound(this.Item)+1]=this.m_0302
this.Item[UpperBound(this.Item)+1]=this.m_0310
this.Item[UpperBound(this.Item)+1]=this.m_0311
this.Item[UpperBound(this.Item)+1]=this.m_0312
this.Item[UpperBound(this.Item)+1]=this.m_0313
this.Item[UpperBound(this.Item)+1]=this.m_0314
end on

on m_03.destroy
call super::destroy
destroy(this.m_0301)
destroy(this.m_0302)
destroy(this.m_0310)
destroy(this.m_0311)
destroy(this.m_0312)
destroy(this.m_0313)
destroy(this.m_0314)
end on

type m_0301 from menu within m_03
end type

on clicked;TriggerEvent (ParentWindow, "m_AccOk")

end on

on m_0301.create
call super::create
this.text = "&Validar"
this.microhelp = "Validar las modificaciones"
this.toolbaritemname = "images\accept.jpg"
this.toolbaritemdownname = "images\accept.jpg"
this.toolbaritemtext = "Validar"
this.toolbaritemorder = 11
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_0301.destroy
call super::destroy
end on

type m_0302 from menu within m_03
end type

on clicked;TriggerEvent (ParentWindow, "m_AccCancel")

end on

on m_0302.create
call super::create
this.visible = false
this.text = "&Cancelar~tCtrl+C"
this.shortcut = 323
this.microhelp = "Cancelar las modificaciones ..."
this.toolbaritemvisible = false
this.toolbaritemname = "images/cross.jpg"
this.toolbaritemdownname = "images/cross.jpg"
this.toolbaritemtext = "Cancelar"
this.toolbaritemorder = 12
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_0302.destroy
call super::destroy
end on

type m_0310 from menu within m_03
end type

on m_0310.create
call super::create
this.visible = false
this.text = "-"
this.enabled = false
this.toolbaritemvisible = false
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_0310.destroy
call super::destroy
end on

type m_0311 from menu within m_03
end type

on clicked;TriggerEvent (ParentWindow, "m_AccInsert")

end on

on m_0311.create
call super::create
this.visible = false
this.text = "&Alta~tCtrl+I"
this.enabled = false
this.shortcut = 329
this.microhelp = "Alta de un nuevo registro ..."
this.toolbaritemvisible = false
this.toolbaritemname = "images\new.jpg"
this.toolbaritemdownname = "images\new.jpg"
this.toolbaritemtext = "Alta"
this.toolbaritemorder = 20
this.toolbaritemspace = 1
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_0311.destroy
call super::destroy
end on

type m_0312 from menu within m_03
end type

on clicked;TriggerEvent (ParentWindow, "m_AccModify")

end on

on m_0312.create
call super::create
this.visible = false
this.text = "&Modificación~tCtrl+M"
this.enabled = false
this.shortcut = 333
this.microhelp = "Modificación del registro seleccionado ..."
this.toolbaritemvisible = false
this.toolbaritemname = "editstops5!"
this.toolbaritemdownname = "editstops5!"
this.toolbaritemtext = "Modificar"
this.toolbaritemorder = 21
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_0312.destroy
call super::destroy
end on

type m_0313 from menu within m_03
end type

on clicked;TriggerEvent (ParentWindow, "m_AccDelete")

end on

on m_0313.create
call super::create
this.visible = false
this.text = "&Borrar~tCtrl+B"
this.enabled = false
this.shortcut = 322
this.microhelp = "Baja de los registros seleccionados ..."
this.toolbaritemvisible = false
this.toolbaritemname = "images\borrar.gif"
this.toolbaritemdownname = "images\borrar.gif"
this.toolbaritemtext = "Borrar"
this.toolbaritemorder = 22
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_0313.destroy
call super::destroy
end on

type m_0314 from menu within m_03
end type

on m_0314.create
call super::create
this.visible = false
this.text = "Bloquear"
this.enabled = false
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_0314.destroy
call super::destroy
end on

type m_02 from menu within m_main
m_0201 m_0201
m_0202 m_0202
m_0203 m_0203
m_0204 m_0204
m_0205 m_0205
m_0206 m_0206
m_configurartools m_configurartools
end type

on m_02.create
call super::create
this.text = "&Ventana"
this.shifttoright = true
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
this.m_0201=create m_0201
this.m_0202=create m_0202
this.m_0203=create m_0203
this.m_0204=create m_0204
this.m_0205=create m_0205
this.m_0206=create m_0206
this.m_configurartools=create m_configurartools
this.Item[UpperBound(this.Item)+1]=this.m_0201
this.Item[UpperBound(this.Item)+1]=this.m_0202
this.Item[UpperBound(this.Item)+1]=this.m_0203
this.Item[UpperBound(this.Item)+1]=this.m_0204
this.Item[UpperBound(this.Item)+1]=this.m_0205
this.Item[UpperBound(this.Item)+1]=this.m_0206
this.Item[UpperBound(this.Item)+1]=this.m_configurartools
end on

on m_02.destroy
call super::destroy
destroy(this.m_0201)
destroy(this.m_0202)
destroy(this.m_0203)
destroy(this.m_0204)
destroy(this.m_0205)
destroy(this.m_0206)
destroy(this.m_configurartools)
end on

type m_0201 from menu within m_02
end type

event clicked;ArrangeSheets(GetFrame(),Cascade!)
end event

on m_0201.create
call super::create
this.text = "&Cascada"
this.toolbaritemvisible = false
this.toolbaritemtext = "Cascada"
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_0201.destroy
call super::destroy
end on

type m_0202 from menu within m_02
end type

event clicked;ArrangeSheets(GetFrame(),Tile!)
end event

on m_0202.create
call super::create
this.text = "&Mosaico"
this.toolbaritemvisible = false
this.toolbaritemname = "tile!"
this.toolbaritemtext = "Mosaico"
this.toolbaritemorder = 2
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_0202.destroy
call super::destroy
end on

type m_0203 from menu within m_02
end type

event clicked;ArrangeSheets(GetFrame(),Layer!)

end event

on m_0203.create
call super::create
this.text = "&Paneles"
this.toolbaritemvisible = false
this.toolbaritemname = "layer!"
this.toolbaritemtext = "Paneles"
this.toolbaritemorder = 3
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_0203.destroy
call super::destroy
end on

type m_0204 from menu within m_02
end type

event clicked;ArrangeSheets(GetFrame(),Icons!)

end event

on m_0204.create
call super::create
this.text = "&Organizar Iconos"
this.toolbaritemvisible = false
this.toolbaritemname = "arrangeicons!"
this.toolbaritemtext = "Organizar Iconos"
this.toolbaritemorder = 4
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_0204.destroy
call super::destroy
end on

type m_0205 from menu within m_02
end type

on m_0205.create
call super::create
this.text = "-"
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_0205.destroy
call super::destroy
end on

type m_0206 from menu within m_02
end type

on m_0206.create
call super::create
this.text = "Barra de &Herramientas"
this.toolbaritemvisible = false
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_0206.destroy
call super::destroy
end on

type m_configurartools from menu within m_02
end type

event clicked;//nvuo_customToolbar lnv_toolbar
//
//lnv_toolbar = Create nvuo_customToolbar
//
//lnv_toolbar.of_SetIniFile(App.SrvINI.GetFile())
//lnv_toolbar.of_SetFrame(App.SrvWinManager.MDIWindow)
//lnv_toolbar.of_SetMenu(App.SrvWinManager.MDIWindow.MenuID)
//
//lnv_toolbar.of_configure()
//
//Destroy nvuo_customToolbar

end event

on m_configurartools.create
call super::create
this.text = "Configurar Barra Herramientas"
this.toolbaritemvisible = false
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_configurartools.destroy
call super::destroy
end on


forward
global type n_cst_update from nonvisualobject
end type
end forward

global type n_cst_update from nonvisualobject
end type
global n_cst_update n_cst_update

type prototypes
FUNCTION ulong CopyFileA(ref string cfrom,ref string cto,boolean flag) LIBRARY "Kernel32.dll"
Function ulong   GetModuleFileName  (ulong ll_Handle,  Ref string ls_Path, ulong ll_Length )   Library "KERNEL32.DLL"  Alias for "GetModuleFileNameA;ANSI" 
end prototypes

type variables
//PBD 07.05.2008 Autocopia

string				is_copy = "C:\copy.bat", is_thisexe = "crm_siccod.exe", ls_newdirectories[]
long					il_retardo = 2, il_retorno_siebel_nueva_version = -1

CONSTANT 	string		PATHSEPARADOR = "\"

OLEObject 			obj_shell

end variables

forward prototypes
public function boolean of_comparefiles (string as_origen, string as_destino)
public function integer of_getfiledatesize (string as_filename, ref string as_size, ref datetime adt_date)
public function boolean of_directoryexists (string as_directory)
public function boolean of_copynewfiles ()
public function integer of_copynewfiles (string as_remote, string as_remote2, string as_local, boolean ab_recursive)
public function integer of_getficheros (string as_ruta, string as_ruta2, boolean ab_recursive, ref string as_ficheros[])
public function integer of_log (string as_texto)
end prototypes

public function boolean of_comparefiles (string as_origen, string as_destino);/*Esta función retorna TRUE si los ficheros son diferentes y deben ser copiados*/
datetime			ldt_origen, ldt_destino
string				ls_origen_size, ls_destino_size

of_getfiledatesize(as_origen, ls_origen_size, ldt_origen)
of_getfiledatesize(as_destino, ls_destino_size, ldt_destino)

//of_log("as_origen: " + as_origen + ", as_destino: " + as_destino + ", ls_origen_size: " +ls_origen_size + &
//			", ls_destino_size: " +ls_destino_size + ", ldt_origen: " +string(ldt_origen) + ", ldt_destino: " +string(ldt_destino))
IF IsNull(ldt_destino) OR IsNull(ldt_origen) OR date(ldt_destino) = 1900-01-01  OR date(ldt_origen) = 1900-01-01 THEN
	RETURN TRUE
END IF
//PBD 18.11.2010 también puede pasar que se copie mal un objeto y cambie su fecha a "futuro"
//en tal caso ya nunca se actualizaría. El fichero tiene que ser de la misma fecha exacta que la carpeta origen.
//IF ldt_origen > ldt_destino OR ls_origen_size <> ls_destino_size THEN
IF ldt_origen <> ldt_destino OR ls_origen_size <> ls_destino_size THEN
//	IF right(as_destino, 4) = '.exe' THEN
//		MessageBox('Origen/Destino', as_origen + "|" + ls_origen_size + "|" + string(ldt_origen) + "/" + as_destino + "|" + ls_destino_size + "|" + string(ldt_destino))
//	END IF
	RETURN TRUE
END IF


RETURN FALSE
end function

public function integer of_getfiledatesize (string as_filename, ref string as_size, ref datetime adt_date);String ls_path, ls_file, ls_test
DateTime ldt_ret
time		ldt_ahora
date		ld_hoy
string		ls_size
long		ll_after, ll_days
OLEObject obj_folder, obj_item


ls_path = Left( as_filename, LastPos( as_filename, "\" ) )
ls_file = Mid( as_filename, LastPos( as_filename, "\" ) + 1 )

IF FileExists( as_filename ) THEN
    obj_folder = obj_shell.NameSpace( ls_path )
    
    IF IsValid( obj_folder ) THEN
        obj_item = obj_folder.ParseName( ls_file )
        
        IF IsValid( obj_item ) THEN
			ls_test = obj_folder.GetDetailsOf( obj_item, 3 )
			ls_size = obj_folder.GetDetailsOf( obj_item, 1 )
			ldt_ret = DateTime( ls_test )
			as_size = ls_size
			adt_date = ldt_ret	
				
        END IF
    END IF
END IF


DESTROY obj_folder
DESTROY obj_item

RETURN 0
end function

public function boolean of_directoryexists (string as_directory);long				i, ll_total

IF DirectoryExists(as_directory) THEN
	RETURN TRUE
ELSE
	ll_total = UpperBound(ls_newdirectories[])
	FOR i = 1 TO ll_total
		IF as_directory = ls_newdirectories[i] THEN
			RETURN TRUE
		END IF
	NEXT
END IF

RETURN FALSE
end function

public function boolean of_copynewfiles ();boolean							lb_recursive = FALSE
String							ls_origen, ls_destino, ls_filename, ls_recursive, ls_origen2, ls_actualizar
long								ll_retorno
integer							li_pos

ls_origen = ProfileString ( App.is_ini, App.SECTIONPARM, "Origen", "\\ssccsic4\SI\crm_siccod" )
ls_origen2 = ProfileString ( App.is_ini, App.SECTIONPARM, "Origen2", "\\espmadssccsic1\tp\crm_siccod" )
ls_destino = ProfileString ( App.is_ini, App.SECTIONPARM, "Destino", "" )
ls_recursive = ProfileString ( App.is_ini, App.SECTIONPARM, "Recursivo", "" )
//para gente con problemas en la actualizacion de ficheros
ls_actualizar = ProfileString ( App.is_ini, App.SECTIONPARM, "Actualizar", "S" )
IF ls_actualizar = "N" THEN RETURN FALSE

il_retorno_siebel_nueva_version = ProfileInt ( App.is_ini, App.SECTIONPARM, "Retorno Siebel Nueva Version", il_retorno_siebel_nueva_version )

IF lower(trim(ls_recursive)) = 's' OR  lower(trim(ls_recursive)) ='si' OR &
	 	lower(trim(ls_recursive)) ='sí' OR  lower(trim(ls_recursive)) ='true' OR &
	 	lower(trim(ls_recursive)) ='1' THEN		 
	  lb_recursive = TRUE  
END IF

//Obtenemos el path del propio ejecutable
ls_filename = space (255)
GetModuleFileName (Handle (GetApplication ()), ls_filename, 255)
is_thisexe = ls_filename

//Si el ejecutable es PowerBuilder, que no haga nada
IF pos(is_thisexe, "PowerBuilder") > 0 OR pos(is_thisexe, "PB105.EXE") > 0 THEN
	DESTROY obj_shell
	RETURN TRUE
END IF

IF ls_destino = "" THEN
	li_pos = len(ls_filename) - pos(Reverse(ls_filename), PATHSEPARADOR)
	ls_destino = mid(ls_filename, 1, li_pos)
END IF

obj_shell = CREATE OLEObject
obj_shell.ConnectToNewObject( 'shell.application' )

ll_retorno = of_copynewfiles(ls_origen, ls_origen2, ls_destino, lb_recursive)

DESTROY obj_shell

IF ll_retorno = 100 THEN
	RETURN FALSE
END IF

RETURN TRUE
end function

public function integer of_copynewfiles (string as_remote, string as_remote2, string as_local, boolean ab_recursive);/*
Esta función lista todos los ficheros que hay en una ubicación remota y los copia, si son más recientes, a la ubicación local
*/
string		ls_ficheros[], ls_relativefile, ls_destinofolder
long			ll_ficheros, i, ll_copy
integer		li_file, li_pos
boolean		lb_create = FALSE, lb_copy, lb_exit = FALSE


of_getficheros(as_remote, as_remote2, ab_recursive, ls_ficheros[])

ll_ficheros = Upperbound(ls_ficheros[])

FOR i = 1 TO ll_ficheros
	ls_relativefile = Mid(ls_ficheros[i], len(as_remote) + 1)
	
	li_pos = len(ls_relativefile) - pos(Reverse(ls_relativefile), PATHSEPARADOR)
	IF li_pos < len(ls_relativefile) THEN
		ls_destinofolder = mid(ls_relativefile, 1, li_pos)
	END IF
	
	lb_copy = FALSE
	
	IF NOT FileExists(as_local + ls_relativefile) THEN
		lb_copy = TRUE
	ELSE
		IF of_comparefiles(ls_ficheros[i], as_local + ls_relativefile) = TRUE THEN
			lb_copy = TRUE
		END IF
	END IF
	
	IF lb_copy = TRUE THEN	
		
		IF lb_create = FALSE THEN
			IF FileExists(is_copy) THEN FileDelete(is_copy)
			li_file = FileOpen(is_copy, linemode!, write!, shared!)
			IF li_file < 0 THEN RETURN -1
			lb_create = TRUE
		END IF
		
		//Tratamiento excepcional para el propio exe
		IF as_local + PATHSEPARADOR +  ls_relativefile = is_thisexe THEN
			//Comento el retardo porque aunque funciona, es dificil definir el parámetro para que no
			//sea demasiado poco o demasiado tiempo
//			FileWrite(li_file, "@ping 127.0.0.1 -n " + string(il_retardo) + " -w 1000> nul")
			lb_exit = TRUE
		END IF
		IF NOT of_DirectoryExists(as_local + PATHSEPARADOR + ls_destinofolder) THEN
			ls_newdirectories[UpperBound(ls_newdirectories[]) +1 ] = as_local + ls_destinofolder
			FileWrite(li_file, "mkdir" + " ~"" + as_local + PATHSEPARADOR + ls_destinofolder + "~"")
		END IF
		FileWrite(li_file, "copy ~"" + ls_ficheros[i] + "~" ~"" + as_local + PATHSEPARADOR + ls_destinofolder + "~"/Y")
		/*		
		FileCopy devuelve un error en carpetas modo "solo lectura"
		CopyFileA(ls_ficheros[i] , as_local, TRUE)
		ll_copy = FileCopy("C:\paco\temp\c_sic_dwsrv.pbl" , as_local, TRUE) 
		*/
	END IF
		
NEXT

IF lb_exit = TRUE THEN
	FileClose(li_file)
	Run("mensaje.exe")
	RETURN 100
//	MessageBox('Aviso', 'Se ha actualizado la aplicación. Deberá volver a enviar los datos.')
END IF

IF lb_create = TRUE THEN
	FileClose(li_file)
	RUN (is_copy, MINIMIZED!)
END IF

RETURN 0
end function

public function integer of_getficheros (string as_ruta, string as_ruta2, boolean ab_recursive, ref string as_ficheros[]);Long                       ll_cnt, ll_temp
int								li_retorno
OLEObject                  obj_folder, obj_items, obj_item

li_retorno = 1

//18.11.2010 ruta auxiliar por si se perdiera la conexion a la principal
IF NOT DirectoryExists(as_ruta) AND as_ruta2 <> "" THEN
	as_ruta = as_ruta2
END IF

IF DirectoryExists(as_ruta) THEN

	IF IsValid( obj_shell ) THEN

		// Objeto carpeta.
		obj_folder = obj_shell.NameSpace(as_ruta)

		IF IsValid(obj_folder) THEN

		// Archivos.
		obj_items = obj_folder.Items

			  IF IsValid( obj_items ) THEN
				  FOR ll_cnt = 0 TO obj_items.Count
					  // Fichero/carpeta
					  obj_item = obj_items.Item( ll_cnt )

					  IF IsValid( obj_item ) THEN
						  // Si es carpeta, sacamos todos los la carperta

						  IF obj_item.IsFolder THEN
							 if ab_recursive then
								 // Recursivo.
								 of_getficheros(obj_item.Path, "",ab_recursive, as_ficheros[])
							 end if
						  ELSE
							 as_ficheros[UpperBound(as_ficheros[])+1] = obj_item.Path
						  END IF
					  END IF
				  NEXT
			  END IF
		END IF
	END IF
END IF

If IsValid(obj_folder) then DESTROY obj_folder
If IsValid(obj_items)  then DESTROY obj_items
If IsValid(obj_item)   then DESTROY obj_item

 
Return li_retorno

end function

public function integer of_log (string as_texto);integer		li_file

li_file = FileOpen("\\espmadssccinf23\compartido\log.log",linemode!,write!,shared!)
FileWrite(li_file,as_texto)
FileClose(li_file)

RETURN 0
end function

on n_cst_update.create
call super::create
TriggerEvent( this, "constructor" )
end on

on n_cst_update.destroy
TriggerEvent( this, "destructor" )
call super::destroy
end on


forward
global type w_mensaje_popup from window
end type
type st_1 from statictext within w_mensaje_popup
end type
end forward

global type w_mensaje_popup from window
integer width = 2816
integer height = 240
windowtype windowtype = popup!
long backcolor = 8421376
string icon = "AppIcon!"
boolean center = true
st_1 st_1
end type
global w_mensaje_popup w_mensaje_popup

forward prototypes
public subroutine of_settexto (string as_texto)
end prototypes

public subroutine of_settexto (string as_texto);st_1.Text = as_texto
end subroutine

on w_mensaje_popup.create
this.st_1=create st_1
this.Control[]={this.st_1}
end on

on w_mensaje_popup.destroy
destroy(this.st_1)
end on

event open;String		ls_texto

this.BackColor = RGB(21, 85, 43)
st_1.BackColor = this.BackColor

ls_texto = Message.StringParm
of_SetTexto(ls_texto)
end event

type st_1 from statictext within w_mensaje_popup
integer y = 60
integer width = 2853
integer height = 136
integer textsize = -16
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 16777215
long backcolor = 8421376
alignment alignment = center!
long bordercolor = 8421376
boolean focusrectangle = false
end type


forward
global type w_mensaje_popup from window
end type
type st_1 from statictext within w_mensaje_popup
end type
end forward

global type w_mensaje_popup from window
integer width = 2816
integer height = 240
windowtype windowtype = popup!
long backcolor = 8421376
string icon = "AppIcon!"
boolean center = true
st_1 st_1
end type
global w_mensaje_popup w_mensaje_popup

forward prototypes
public subroutine of_settexto (string as_texto)
end prototypes

public subroutine of_settexto (string as_texto);st_1.Text = as_texto
end subroutine

on w_mensaje_popup.create
this.st_1=create st_1
this.Control[]={this.st_1}
end on

on w_mensaje_popup.destroy
destroy(this.st_1)
end on

event open;String		ls_texto

this.BackColor = RGB(21, 85, 43)
st_1.BackColor = this.BackColor

ls_texto = Message.StringParm
of_SetTexto(ls_texto)
end event

type st_1 from statictext within w_mensaje_popup
integer y = 60
integer width = 2853
integer height = 136
integer textsize = -16
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 16777215
long backcolor = 8421376
alignment alignment = center!
long bordercolor = 8421376
boolean focusrectangle = false
end type


forward
global type w_mensaje_popup from window
end type
type st_1 from statictext within w_mensaje_popup
end type
end forward

global type w_mensaje_popup from window
integer width = 2816
integer height = 240
windowtype windowtype = popup!
long backcolor = 8421376
string icon = "AppIcon!"
boolean center = true
st_1 st_1
end type
global w_mensaje_popup w_mensaje_popup

forward prototypes
public subroutine of_settexto (string as_texto)
end prototypes

public subroutine of_settexto (string as_texto);st_1.Text = as_texto
end subroutine

on w_mensaje_popup.create
this.st_1=create st_1
this.Control[]={this.st_1}
end on

on w_mensaje_popup.destroy
destroy(this.st_1)
end on

event open;String		ls_texto

this.BackColor = RGB(21, 85, 43)
st_1.BackColor = this.BackColor

ls_texto = Message.StringParm
of_SetTexto(ls_texto)
end event

type st_1 from statictext within w_mensaje_popup
integer y = 60
integer width = 2853
integer height = 136
integer textsize = -16
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 16777215
long backcolor = 8421376
alignment alignment = center!
long bordercolor = 8421376
boolean focusrectangle = false
end type


forward
global type w_mensaje_popup from window
end type
type st_1 from statictext within w_mensaje_popup
end type
end forward

global type w_mensaje_popup from window
integer width = 2816
integer height = 240
windowtype windowtype = popup!
long backcolor = 8421376
string icon = "AppIcon!"
boolean center = true
st_1 st_1
end type
global w_mensaje_popup w_mensaje_popup

forward prototypes
public subroutine of_settexto (string as_texto)
end prototypes

public subroutine of_settexto (string as_texto);st_1.Text = as_texto
end subroutine

on w_mensaje_popup.create
this.st_1=create st_1
this.Control[]={this.st_1}
end on

on w_mensaje_popup.destroy
destroy(this.st_1)
end on

event open;String		ls_texto

this.BackColor = RGB(21, 85, 43)
st_1.BackColor = this.BackColor

ls_texto = Message.StringParm
of_SetTexto(ls_texto)
end event

type st_1 from statictext within w_mensaje_popup
integer y = 60
integer width = 2853
integer height = 136
integer textsize = -16
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 16777215
long backcolor = 8421376
alignment alignment = center!
long bordercolor = 8421376
boolean focusrectangle = false
end type




























































global type str_usuario from structure
  public:
    String		as_usuid
    Long		al_userid
    String		as_nombre
    String		as_mail
    String		as_perfil
    Long		al_perid
    String		as_activo
    String		as_swimpcomloc
    String		as_swvervtosdchos
end type


global type str_maquina_situacion from structure
  public:
    Long		maqid
    Long		ugeid
    Long		motidmvt
    Long		sfiid
    Long		locid
    Long		almid
    Long		huaid
    DateTime		cumfmovfi
    Date		cumfmodo
    String		cummovrea
    Long		hueid
    Long		sciid
    Long		sleid[]
end type


global type str_maquina from structure
  public:
    Long		maqid
    Long		ugeid
    Long		tmoid
    String		maqnserie
    Integer		coaid
    String		maqsersap
    String		maqnumgui
    String		maqnumhom
    Long		fypidfab
    Long		fypidpro
    Date		maqfecfab
    Integer		monid
    String		maqsegesp
    String		maqesreci
    Decimal		maqcareo
    Decimal		maqcarloc
    Decimal		maqcarter
    Decimal		maqcarrec
    Decimal		maqacudho
    Decimal		maqrulda
    Decimal		maqporpre
    String		codmaq
    Date		maqfecaut
    Date		maqfecinsp
    Date		maqfecnguia
    String		maqletser
    String		crmmaqid
    String		maqsalida
    String		maqalbaran
    Integer		hmcid
    String		maqblqtra
    String		maqblqord
    Date		fecha_ug
    Long		socid
    Integer		regimen
    Integer		motivo_regimen
    Date		fecha_instalacion
    Long		empresa_operadora
    str_maquina_situacion		situacion[]
end type


global type str_htparpermisoscto from structure
  public:
    Long		perid
    Long		copid
    Long		ugeid
    Long		socid
    Long		motid
    Long		tmaid
    Date		fecha
    Integer		cantidad
    DateTime		feccrereg
    DateTime		fecultact
    String		codusucid
    String		codusuact
end type


global type str_relacion_local_int from structure
  public:
    Long		rleid
    Long		locid
    Long		intid
    Integer		tpcid
    String		rlelikunnr
    String		rlelifnr
    Date		rlefecini
    Integer		motidini
    Date		rlefecfin
    Integer		motidfin
    String		rletipimp
    String		observbaja
    Integer		tcaid
    String		rleeoalta
    String		rleeobaja
    String		crmrleid
end type


global type str_interlocutor from structure
  public:
    Long		intid
    String		intdninif
    String		intnombre
    Long		pobsid
    String		poblacion
    Long		viaid
    String		tipo_via
    String		intnomvia
    String		intnumvia
    String		intescvia
    String		intpisvia
    String		intpuevia
    String		inttelef1
    String		inttelef2
    String		inttelefm
    String		intteleff
    String		inte_mail
    String		intpagweb
    Date		intfeccum
    Date		intfecani
    Integer		intnumhij
    String		intcaract
    String		intnomcon
    String		inttratam
    Integer		intidioma
    String		intsaprh
    String		intescli
    String		intester
    String		intespart
    String		intsapter
    String		intsapacre
    String		intentlegal
    Integer		intnacionalidad
    DateTime		intvtonicnif
    Integer		tempos21id
    String		crmintid
    Long		ugeid
    Date		riufecini
    Date		riufecfin
    Long		codempleadosap
    Decimal		saldo_recaudador
    Long		blqid
    Long		borid
end type


global type str_sapcaja from structure
  public:
    Long		scjid
    Long		ugeid
    String		codigo
    String		sociedad
    String		caja
    String		descripcion
    String		swintegrar
end type


global type str_sapaautsocug from structure
  public:
    Long		sasuid
    Long		ugeid
    Long		saautpid
    String		tipo
    Long		socid
    String		sociedad_sap
end type


global type str_retorno_ods from structure
  public:
    String		as_cadena1
    String		as_cadena_fichero
    String		as_cadena2
    String		as_cadena_directorio
end type


global type str_mensajes from structure
  public:
    String		codigo
    String		codigo_proceso
    String		proceso
    String		mensaje
    String		explicacion
    String		idioma
end type


global type str_param_mensajes_reemplazo from structure
  public:
    String		parametro
    String		texto
end type


global type str_param_traspaso_locales_ug from structure
  public:
    Boolean		comprobacion
    String		tablas_modificadas[]
    String		tablas_sin_modificar[]
    String		usuario
    Long		locid
    Long		ugeid
    Long		ugeid_destino
    Date		fecha_cambio
    Long		zonid[]
    Long		zonid_destino[]
    String		zontipo[]
    Long		almid_destino
    Boolean		rutas_cerradas
    Boolean		rutas_pr
    Boolean		rutas_in
    Boolean		rutas_re
    Boolean		rutas_rl
    Boolean		rutas_lv
    Boolean		rutas_nr
    String		cambio_pr
    String		cambio_in
    String		cambio_re
    String		cambio_rl
    String		cambio_lv
    String		cambio_nr
    Boolean		cambio_reca_pr
    Boolean		cambio_reca_in
    Boolean		cambio_reca_re
    Boolean		cambio_reca_rl
    Boolean		cambio_reca_lv
    Boolean		cambio_reca_nr
end type


global type str_parametros_admindatos from structure
  public:
    String		valor_a
    Long		valor_n
    Decimal		valor_d
    Date		valor_f
    String		campo
    String		descripcion
    String		usuario
    String		tipo_auditoria
end type


global type str_param_baja_delegacion from structure
  public:
    Boolean		comprobacion
    String		proceso
    String		procesos_modificados[]
    String		procesos_sin_modificar[]
    String		usuario
    Long		almid_destino
    Long		locid
    Long		maqid
    Long		almid
    Long		ugeid
    Date		fecha_escision
    Long		motidmvt_fisalm
    Long		motidmvt_fisfexp
    Long		sitcirmaq_alm
    Long		sitdocmaq_alm
    Long		sitcirmaq_fexpl
    Long		motidfin_relacion
end type


global type str_parcargalocales from structure
  public:
    String		id
    String		campo
    String		observacampo
    String		tipocolumna
    Integer		longcolumna
    Integer		orden
    String		tipodestino
    String		columnadestino
    String		tablafk
    String		idfk
    String		columnafk
    String		filtrofk
end type


global type str_param_unificacion_delegaciones from structure
  public:
    Boolean		comprobacion
    String		tablas_modificadas[]
    String		tablas_sin_modificar[]
    String		usuario
    Long		locid
    Long		ugeid
    Long		ugeid_destino
    Date		fecha_cambio
    Long		almid_destino
    Long		zonid[]
    Long		zonid_destino[]
    String		zontipo[]
    Boolean		rutas_cerradas
    Boolean		rutas_pr
    Boolean		rutas_in
    Boolean		rutas_re
    Boolean		rutas_rl
    Boolean		rutas_lv
    Boolean		rutas_nr
    String		cambio_pr
    String		cambio_in
    String		cambio_re
    String		cambio_rl
    String		cambio_lv
    String		cambio_nr
    Boolean		cambio_reca_pr
    Boolean		cambio_reca_in
    Boolean		cambio_reca_re
    Boolean		cambio_reca_rl
    Boolean		cambio_reca_lv
    Boolean		cambio_reca_nr
end type


global type str_htmovsaldoreca from structure
  public:
    Long		intid
    String		concepto
    Decimal		actual
    Decimal		anterior
    Date		fecha
    String		tiposituacion
    String		observaciones
end type


global type str_gtcompomaq from structure
  public:
    Long		cmaid
    Long		maqid
    Long		comid
    Date		cmafecins
    Date		cmafecret
    Long		motid
    Long		kitid
end type


global type str_error from structure
  public:
    String		error
    String		explicacion
end type


global type NullValues from structure
  public:
    Boolean		item[]
end type


global type NullValues from structure
  public:
    Boolean		item[]
end type


global type NullValues from structure
  public:
    Boolean		item[]
end type


global type NullValues from structure
  public:
    Boolean		item[]
end type


global type NullValues from structure
  public:
    Boolean		item[]
end type


global type NullValues from structure
  public:
    Boolean		item[]
end type


global type NullValues from structure
  public:
    Boolean		item[]
end type


global type NullValues from structure
  public:
    Boolean		item[]
end type


global type NullValues from structure
  public:
    Boolean		item[]
end type


global type StringSeq from structure
  public:
    String		item[]
end type


global type str_ws_envios from structure
	string		tipo
	string		campo1
	string		campo2
	string		campo3
	string		campo4
	string		campo5
	string		campo6
	string		campo7
	string		campo8
	string		campo9
	string		campo10
	string		campo11
	string		campo12
	string		campo13
	string		campo14
	string		campo15
	string		campo16
	string		campo17
	string		campo18
	string		campo19
	string		campo20
	string		campo21
end type


























































































forward
global type n_cst_string from n_cst_base
end type
end forward

global type n_cst_string from n_cst_base autoinstantiate
end type

type variables

end variables

forward prototypes
public function long of_parsetoarray (string as_source, string as_delimiter, ref string as_array[])
public function string of_padright (string as_source, long al_length)
public function boolean of_islower (string as_source)
public function boolean of_isupper (string as_source)
public function boolean of_iswhitespace (string as_source)
public function boolean of_isalpha (string as_source)
public function boolean of_isalphanum (string as_source)
public function string of_quote (string as_source)
public function boolean of_isspace (string as_source)
public function boolean of_ispunctuation (string as_source)
public function long of_lastpos (string as_source, string as_target, long al_start)
public function long of_lastpos (string as_source, string as_target)
public function string of_globalreplace (string as_source, string as_old, string as_new, boolean ab_ignorecase)
public function string of_globalreplace (string as_source, string as_old, string as_new)
public function long of_countoccurrences (string as_source, string as_target)
public function long of_countoccurrences (string as_source, string as_target, boolean ab_ignorecase)
public function string of_righttrim (string as_source)
public function string of_lefttrim (string as_source)
public function string of_lefttrim (string as_source, boolean ab_spaces)
public function string of_lefttrim (string as_source, boolean ab_spaces, boolean ab_nonprint)
public function string of_righttrim (string as_source, boolean ab_spaces)
public function string of_righttrim (string as_source, boolean ab_spaces, boolean ab_nonprint)
public function string of_trim (string as_source)
public function string of_trim (string as_source, boolean ab_spaces)
public function string of_trim (string as_source, boolean ab_spaces, boolean ab_nonprint)
public function integer of_setkeyvalue (ref string as_source, string as_keyword, string as_keyvalue, string as_separator)
public function string of_wordcap (string as_source)
public function string of_removenonprint (string as_source)
public function boolean of_isprintable (string as_source)
public function boolean of_isformat (string as_source)
public function string of_removewhitespace (string as_source)
public function boolean of_IsComparisonOperator (string as_source)
public function boolean of_IsArithmeticOperator (string as_source)
public function string of_default (string as_source, string as_default)
public function string of_gettoken (ref string as_source, string as_separator)
public function string of_getkeyvalue (string as_source, string as_keyword, string as_separator)
public function string of_decode (string as_code)
public function string replace (string as_source, string as_lookfor, string as_replacewith)
public function string of_padleft (string as_source, long al_length)
public function long of_stringtoarray (string as_origen, ref string as_destino[], integer ai_longitud)
public function long of_arraytostring (string as_source[], string as_delimiter, ref string as_valor)
public function boolean of_isempty (string as_source)
public function long of_parsetoarray (string as_source, string as_delimiter, ref long al_array[])
end prototypes

public function long of_parsetoarray (string as_source, string as_delimiter, ref string as_array[]);//////////////////////////////////////////////////////////////////////////////
//
//	of_parseToArray()
//
//	argumentos:	string as_source, valor analizado
//					string as_delimiter, separador entre valores
//					ref string as_array[], lista de valores finales
//	retorna:  	long, nº de elementos de la lista
//
//	Descripción:
//	Descompone un string en sus elementos y llena la lista recibida como 
//	referencia utilizando el separador especificado
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
long ll_l,ll_p,ll_c
long ll_start,ll_length
string ls_holder

if isNull( as_source ) or isNull( as_delimiter ) then
	long ll_null

	setNull( ll_null )
	return ll_null
end if

if trim( as_source ) = '' then
	return 0
end if

ll_l = LenA( as_delimiter )
ll_p = PosA( upper( as_source ),upper( as_delimiter ))

if ll_p = 0 then
	as_array[1] = as_source
	return 1
end if

ll_c = 0
ll_start = 1

do while ll_p > 0
	ll_length = ll_p - ll_start
	ls_holder = MidA( as_source,ll_start,ll_length )

	ll_c ++
	as_array[ll_c] = ls_holder
	
	ll_start = ll_p + ll_l

	ll_p = PosA( upper( as_source ),upper( as_delimiter ),ll_start )
loop

ls_holder = MidA( as_source,ll_start,LenA( as_source ))

if LenA( ls_holder ) > 0 then
	ll_c++
	as_array[ll_c] = ls_holder
end if

return ll_c

end function

public function string of_padright (string as_source, long al_length);//////////////////////////////////////////////////////////////////////////////
//
//	of_padRight()
//
//	argumentos:	string as_source, valor original
//					long al_length, longitud final
//	retorna:  	string
//
//	Descripción:
//	Llena un string con espacios por la derecha hasta obtener la longitud especificada
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
string ls_valor

if isNull( as_source ) or isNull( al_length ) then
	setNull( ls_valor )
	return ls_valor
end if

if al_length <= LenA( as_source ) then
	return as_source
end if

ls_valor = as_source + space( al_length - LenA( as_source ))

return ls_valor
end function

public function boolean of_islower (string as_source);//////////////////////////////////////////////////////////////////////////////
//
//	of_isLower()
//
//	argumentos:	string as_source, valor analizado
//	retorna:  	boolean
//
//	Descripción:
//	Determina si el valor recibido tiene sólo caracteres en minúsculas
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
if isNull( as_source ) then
	boolean lb_null
	SetNull( lb_null )
	return lb_null
end if

return ( as_source = lower( as_source ) )
end function

public function boolean of_isupper (string as_source);//////////////////////////////////////////////////////////////////////////////
//
//	of_isUpper()
//
//	argumentos:	string as_source, valor analitzado
//	retorna:  	boolean
//
//	Descripción:
//	Determina si el valor recibido tiene sólo caracteres en mayúsculas
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////

if isNull( as_source ) then
	boolean lb_null
	SetNull( lb_null )
	return lb_null
end if

return ( as_source = upper( as_source ))
end function

public function boolean of_iswhitespace (string as_source);//////////////////////////////////////////////////////////////////////////////
//
//	of_isWhiteSpace()
//
//	argumentos:	string as_source, valor analizado
//	retorna:  	boolean
//
//	Descripción:
//	Determina si el valor recibido tiene sólo caracteres especiales o espacios
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
long ll_c,ll_l
char lc_char[]
integer li_ascii

if isNull( as_source ) then
	boolean lb_null
	setNull( lb_null )
	return lb_null
end if

ll_l = LenA( as_source )

if ll_l=0 then
	return false
end if

lc_char = as_source

do while ll_c < ll_l
	ll_c ++
	
	li_ascii = AscA( lc_char[ll_c] )
	
	if li_ascii=8 or li_ascii=9 or li_ascii=10 or li_ascii=11 or li_ascii=12 or li_ascii=13 or li_ascii=32 then
		// el carácter es BS, Tab, NL, CR, VT, FF, SP 
		// comprobar el siguiente carácter
	else
		// el carácter no es un espacio en blanco
		return false
	end if
   loop
	
return true

end function

public function boolean of_isalpha (string as_source);//////////////////////////////////////////////////////////////////////////////
//
//	of_isAlpha()
//
//	argumentos:	string as_source, valor analizado
//	retorna:  	boolean
//
//	Descripción:
//	Determina si el valor recibido tiene sólo caracteres alfanuméricos
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
long ll_c=0
long ll_l
char lc_char[]
integer li_ascii

if isNull( as_source ) then
	boolean lb_null
	setNull( lb_null )
	return lb_null
end if

ll_l = LenA( as_source )

if ll_l = 0 then
	return false
end if

lc_char = as_source

do while ll_c < ll_l
	ll_c++
	
	li_ascii = AscA( lc_char[ll_c] )
	
	// 'A'=65, 'Z'=90, 'a'=97, 'z'=122
	if li_ascii < 65 or ( li_ascii > 90 and li_ascii < 97 ) or li_ascii > 122 then
		return false
	end if
loop
	
return true
end function

public function boolean of_isalphanum (string as_source);//////////////////////////////////////////////////////////////////////////////
//
//	of_isAlphaNum()
//
//	argumentos:	string as_source, valor analitzado
//	retorna:  	boolean
//
//	Descripción:
//	Determina si el valor recibido tiene sólo caracateres alfabéticos y numéricos
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
long ll_c,ll_l
char lc_char[]
integer li_ascii

if isNull( as_source ) then
	boolean lb_null
	SetNull( lb_null )
	return lb_null
end if

ll_l = LenA( as_source )

if ll_l = 0 then
	return false
end if

lc_char = as_source

do while ll_c < ll_l
	ll_c++
	li_ascii = AscA( lc_char[ll_c] )
	
	// '0'= 48, '9'=57, 'A'=65, 'Z'=90, 'a'=97, 'z'=122
	if li_ascii < 48 or ( li_ascii > 57 and li_ascii < 65 ) or ( li_ascii > 90 and li_ascii < 97 ) or li_ascii > 122 then
		return false
	end if
loop
	
return true

end function

public function string of_quote (string as_source);//////////////////////////////////////////////////////////////////////////////
//
//	of_quote()
//
//	argumentos:	string as_source, valor original
//	retorna:  	string
//
//	Descripción:
//	Crea el valor alfanumérico entrecomillado
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
if isNull( as_source ) then
	return as_source
end if

return '"' + as_source + '"'

end function

public function boolean of_isspace (string as_source);//////////////////////////////////////////////////////////////////////////////
//
// of_isSpace()
//
//	argumentos:	string as_source, valor analizado
//	retorna:  	boolean
//
//	Descripción:
//	Determina si el valor recibido tiene sólo espacios en blanco
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
if isNull( as_source ) then
	boolean lb_null
	setNull( lb_null )
	return lb_null
end if

if LenA( as_source )=0 then
	return false
end if

if trim( as_source ) = '' then
	return true
end if

return false

end function

public function boolean of_ispunctuation (string as_source);//////////////////////////////////////////////////////////////////////////////
//
//	of_isPunctuation()
//
//	argumentos:	string as_source, valor analizado
//	retorna:  	boolean
//
//	Descripción:
//	Determina si el valor recibido tiene sólo caracteres de puntuación
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
long ll_c,ll_l
char lc_char[]
integer li_ascii

if isNull( as_source ) then
	boolean lb_null
	SetNull( lb_null )
	return lb_null
end if

ll_l = LenA( as_source )

if ll_l = 0 then
	return false
end if

lc_char = as_source

do while ll_c < ll_l
	ll_c++
	li_ascii = AscA( lc_char[ll_c] )

	if li_ascii = 33 or li_ascii = 34 or li_ascii = 39 or li_ascii = 44 or li_ascii = 46 or li_ascii = 58 or li_ascii = 59 or li_ascii = 63 then
		//el carácter es: ! " ' , . : ; ?
		//continuar amb el proper caracter
	else
		return false
	end if
loop
	
return true

end function

public function long of_lastpos (string as_source, string as_target, long al_start);//////////////////////////////////////////////////////////////////////////////
//
//	of_lastPos()	
//
//	argumentos:	string as_source, valor analizado
//					string as_target, subvalor a localizar
//					long al_start, lugar desde el que comencamos la búsqueda (0 comenzar desde el final)
//	retorna:  	long, posició de as_target dins de as_source
//
//	Descripción:
//	Localiza la posición de una subcadena dentro comenzando desde la posición 
//	recibida como parámetro
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
long ll_c,ll_p

if isNull( as_source ) or isNull( as_target ) or isNull( al_start ) then
	setNull( ll_c )
	return ll_c
end if

if LenA( as_source ) = 0 then
	return 0
end if

if al_start=0 then  
	al_start = LenA( as_source )
end if

for ll_c = al_start to 1 step -1
	ll_p = PosA( as_source,as_target,ll_c )
	if ll_p = ll_c then 
		return ll_c
	end if
next

return 0

end function

public function long of_lastpos (string as_source, string as_target);//////////////////////////////////////////////////////////////////////////////
//
//	of_lastPos()
//
//	argumentos:	string as_source, valor de cadena
//					string as_target, subcadena a localizar
//	retorna:  	long, posición de as_target en as_source	
//
//	Descripción:
//	Localiza una subcadena (as_target) dentro de un valor recibido (as_source)
//	comenzando desde el final de la cadena.
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
if isNull( as_source ) or isNull( as_target ) then
	long ll_null
	
	setNull(ll_null)
	return ll_null
end if

return of_lastPos( as_source,as_target,LenA( as_source ))

end function

public function string of_globalreplace (string as_source, string as_old, string as_new, boolean ab_ignorecase);//////////////////////////////////////////////////////////////////////////////
//
//	of_globalReplace()
//
//	argumentos:	string as_source, valor analizado
//					string as_old, valor substituido
//					string as_new, nou valor
// 				boolean ab_ignorecase, ignorar majúsculas/minúsculas
//	retorna:  	string, resultado de la substitución
//
//	Descripción:
//	Substituye un valor (as_old) en la cadena as_source por otro (as_new)
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
long ll_s,ll_n,ll_o
string ls_source

if isNull( as_source ) or isNull( as_old ) or isNull( as_new ) or isNull( ab_ignorecase ) then
	string ls_null
	
	setNull( ls_null )
	return ls_null
end if

ll_o = LenA( as_old )
ll_n = LenA( as_new )

if ab_ignorecase then
	as_old = lower( as_old )
	ls_source = lower( as_source )
else
	ls_source = as_source
end if

ll_s = PosA( ls_source,as_old )

do while ll_s > 0
	as_source = ReplaceA( as_source,ll_s,ll_o,as_new )
	
	if ab_ignorecase then 
		ls_source = lower( as_source )
	else
		ls_source = as_source
	end if
	
	ll_s = PosA( ls_source,as_old,( ll_s + ll_n ))
loop

return as_source

end function

public function string of_globalreplace (string as_source, string as_old, string as_new);//////////////////////////////////////////////////////////////////////////////
//
//	of_globalReplace()
//
//	argumentos:	string as_source, cadena analizada
//					string as_old, valor a sustituir
//					string as_new, nuevo valor
//	retorna:  	string, resultado de la sustitución
//
//	Descripción:
//	Sustituye un valor (as_old) en la cadena as_source por otro (as_new)
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
integer li_s,li_o,li_n

if isNull( as_source ) or isNull( as_old ) or isNull( as_new ) then
	string ls_null
	
	setNull(ls_null)
	return ls_null
end if

as_source = of_globalReplace( as_source,as_old,as_new,true )

return as_source


end function

public function long of_countoccurrences (string as_source, string as_target);//////////////////////////////////////////////////////////////////////////////
//
//	of_countOccurrences()
//
//	argumentos:	string as_source, cadena analizada
//					string as_target, valor a localizar dentro de la cadena
//	retorna: 		long, nº de repeticiones de as_target dentro de as_source
//
//	Descripción:
//	Cuenta las veces que se repite as_target dentro de as_source
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
long ll_c

if isNull( as_source ) or isNull( as_target ) then
	long ll_null
	
	setNull( ll_null )
	return ll_null
end if

ll_c = of_countOccurrences( as_source,as_target,true )

return ll_c

end function

public function long of_countoccurrences (string as_source, string as_target, boolean ab_ignorecase);//////////////////////////////////////////////////////////////////////////////
//
//	of_countOccurrences()
//
//	argumentos:	string as_source, cadena analizada
//					string as_target, valor a localizar dentro de la cadena
//					boolean ab_ignorecase, considerar mayúsculas/minúsculas
//	retorna: 		long, nº de repeticiones de as_target dentro de as_source
//
//	Descripción:
//	Cuenta las veces que se repite as_target dentro de as_source
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
long ll_c,ll_p,ll_l

if isNull( as_source ) or isNull( as_target ) or isNull( ab_ignorecase ) then
	long ll_null
	
	setNull(ll_null)
	return ll_null
end if

if ab_ignorecase then
	as_source = lower( as_source )
	as_target = lower( as_target )
end if

ll_l = LenA( as_target )
ll_c = 0

ll_p = PosA( as_source,as_target )

do while ll_p > 0
	ll_c++
	ll_p = PosA( as_source,as_target,( ll_p + ll_l ))
loop

return ll_c

end function

public function string of_righttrim (string as_source);//////////////////////////////////////////////////////////////////////////////
//
//	of_rightTrim()
//
//	argumentos:	string as_source, valor original
//	retorna: 		string, valor sin espacios
//
//	Descripción:
//	elimina los posibles espacios en blanco a la derecha del valor original
//	pero no los caracteres no imprimibles
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
if isNull( as_source ) then
	string ls_null
	
	setNull(ls_null)
	return ls_null
end if

return of_rightTrim( as_source,true,false )
end function

public function string of_lefttrim (string as_source);//////////////////////////////////////////////////////////////////////////////
//
//	of_leftTrim()
//
//	argumentos:	string as_source, valor original
//	retorna: 		string, valor sin espacios
//
//	Descripción:
//	elimina los posibles espacios en blanco de la izquierda del valor original
//	pero no los caracteres no imprimibles
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
if isNull( as_source ) then
	string ls_null
	
	setNull( ls_null )
	return ls_null
end if

return of_leftTrim( as_source,true,false )
end function

public function string of_lefttrim (string as_source, boolean ab_spaces);//////////////////////////////////////////////////////////////////////////////
//
//	of_leftTrim()
//
//	argumentos:	string as_source, valor original
//					boolean ab_spaces, eliminar espacios en blanco
//	retorna: 		string, valor sin espacios
//
//	Descripción:
//	elimina sólo los espacios en blanco a la izquierda del valor original
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
if isNull( as_source ) or isNull( ab_spaces ) then
	string ls_null
	
	setNull( ls_null )
	return ls_null
end if

return of_leftTrim ( as_source,ab_spaces,false )
end function

public function string of_lefttrim (string as_source, boolean ab_spaces, boolean ab_nonprint);//////////////////////////////////////////////////////////////////////////////
//
//	of_leftTrim()
//
//	argumentos:	string as_source, valor original
//					boolean ab_spaces, eliminar espacios en blanco
//					boolean ab_nonprint, eliminar caracteres no imprimibles
//	retorna: 		string, valor sin espacios
//
//	Descripción:
//	elimina los espacios en blanco y los caracteres no imprimibles a la izquierda del 
//	valor original
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
char lc_char
boolean lb_char
boolean lb_printable

if isNull( as_source ) or isNull( ab_spaces ) or isNull( ab_nonprint ) then
	string ls_null
	
	setNull( ls_null )
	return ls_null
end if

if ab_spaces and ab_nonprint then
	do while LenA( as_source ) > 0 and not lb_char
		lc_char = as_source
		
		if of_isPrintable( lc_char ) and not of_isSpace( lc_char ) then
			lb_char = true
		else
			as_source = MidA( as_source,2 )
		end if
	loop
	
	return as_source
elseif ab_nonprint then
	do while LenA( as_source ) > 0 and not lb_printable
		lc_char = as_source
		
		if of_isPrintable( lc_char ) then
			lb_printable = true
		else
			as_source = MidA( as_source,2 )
		end if
	loop
	
	return as_source
elseif ab_spaces then
	return leftTrim( as_source )
end if

return as_source

end function

public function string of_righttrim (string as_source, boolean ab_spaces);//////////////////////////////////////////////////////////////////////////////
//
//	of_rightTrim()
//
//	argumentos:	string as_source, valor original
//					boolean ab_spaces, eliminar espacios en blanco
//	retorna: 		string, valor sin espacios
//
//	Descripción:
//	elimina sólo los espacios en blanco a la derecha del valor original
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
if isNull( as_source ) or isNull( ab_spaces ) then
	string ls_null
	
	setNull( ls_null )
	return ls_null
end if

return of_rightTrim( as_source,ab_spaces,false )
end function

public function string of_righttrim (string as_source, boolean ab_spaces, boolean ab_nonprint);//////////////////////////////////////////////////////////////////////////////
//
//	of_rightTrim()
//
//	argumentos:	string as_source, valor original
//					boolean ab_spaces, eliminar espacios en blanco
//					boolean ab_nonprint, eliminar caracteres no imprimibles
//	retorna: 		string, valor sin espacios
//
//	Descripción:
//	elimina los espacios en blanco y los caracteres no imprimibles a la izquierda del 
//	valor original
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
char lc_char
boolean lb_char
boolean lb_printable

if isNull( as_source ) or isNull( ab_spaces ) or isNull( ab_nonprint ) then
	string ls_null
	
	setNull( ls_null )
	return ls_null
end if

if ab_spaces and ab_nonprint then
	do while LenA( as_source ) > 0 and not lb_char
		lc_char = RightA( as_source,1 )
		
		if of_isPrintable( lc_char ) and not of_isSpace( lc_char ) then
			lb_char = true
		else
			as_source = LeftA( as_source,LenA( as_source ) - 1 )
		end if
	loop
	
	return as_source
	
elseif ab_nonprint then
	do while LenA( as_source ) > 0 and not lb_printable
		lc_char = RightA( as_source,1 )
		
		if of_isPrintable( lc_char ) then
			lb_printable = true
		else
			as_source = LeftA( as_source,LenA( as_source ) - 1 )
		end if
	loop
	
	return as_source
	
elseif ab_spaces then
	return rightTrim( as_source )
end if

return as_source
end function

public function string of_trim (string as_source);//////////////////////////////////////////////////////////////////////////////
//
//	of_trim()
//
//	argumentos:	string as_source, valor original
//	retorna: 		string, valor sin espacios
//
//	Descripción:
//	elimina los espacios en blanco pero no los caracteres no imprimibles a 
//	la izquierda y la derecha del valor original
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
if isNull( as_source ) then
	string ls_null
	
	setNull( ls_null )
	return ls_null
end if

return of_trim( as_source,true,false )

end function

public function string of_trim (string as_source, boolean ab_spaces);//////////////////////////////////////////////////////////////////////////////
//
//	of_trim()
//
//	argumentos:	string as_source, valor original
//					boolean ab_spaces, eliminar espacios en blanco
//	retorna: 		string, valor sin espacios
//
//	Descripción:
//	elimina los espacios en blanco a la izquierda y derecha del valor original
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
if isNull( as_source ) or isNull( ab_spaces ) then
	string ls_null
	
	setNull( ls_null )
	return ls_null
end if

return of_trim( as_source,ab_spaces,false )

end function

public function string of_trim (string as_source, boolean ab_spaces, boolean ab_nonprint);//////////////////////////////////////////////////////////////////////////////
//
//	of_rightTrim()
//
//	argumentos:	string as_source, valor original
//					boolean ab_spaces, eliminar espacios en blanco
//					boolean ab_nonprint, eliminar caracteres no imprimibles
//	retorna: 		string, valor sin espacios
//
//	Descripción:
//	elimina los espacios en blanco y los caracteres no imprimibles a izquierda y
//	derecha del valor original
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
if isNull( as_source ) or isNull( ab_spaces ) or isNull( ab_nonprint ) then
	string ls_null
	
	setNull( ls_null )
	return ls_null
end if

if ab_spaces and ab_nonprint then
	as_source = of_leftTrim( as_source,ab_spaces,ab_nonprint )
	as_source = of_rightTrim( as_source,ab_spaces,ab_nonprint )
elseif ab_nonprint then
	as_source = of_leftTrim( as_source,ab_spaces,ab_nonprint )
	as_source = of_rightTrim( as_source,ab_spaces,ab_nonprint )
elseif ab_spaces then
	as_source = trim( as_source )
end if

return as_source
end function

public function integer of_setkeyvalue (ref string as_source, string as_keyword, string as_keyvalue, string as_separator);//////////////////////////////////////////////////////////////////////////////
//
//	of_setKeyValue()
//
//
//	argumentos:	string as_source, cadena a analizar
//					string as_keyword, valor de clave
//					string as_keyvalue, valor por asignar
//					string as_separator, separador de valores
//	retorna:  	integer, valor de clave asignada
//
//	Descripción:
//	Localiza formatos tipo: as_keywork='valor' dentro de una cadena donde puede haber
//	diversos formatos separados por as_separators
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
integer li_f = -1
integer li_p,li_s,li_e
string ls_temp

if isNull( as_source ) or isNull( as_keyword ) or isNull( as_keyvalue ) or isNull( as_separator ) then
	integer li_null
	
	setNull( li_null )
	return li_null
end if

do 
	li_p = PosA( lower( as_source ),lower( as_keyword ), li_p + 1 )

	if li_p > 0 then
		ls_temp = leftTrim( RightA( as_source,LenA( as_source ) - ( li_p + LenA( as_keyword ) - 1 )))

		if LeftA( ls_temp,1 ) = '=' then
			li_e = PosA( as_source,'=',li_p + 1 )
			li_s = PosA( as_source,as_separator,li_e + 1 )
			if li_s > 0 then
				as_source = LeftA( as_source,li_e ) + as_keyvalue + as_separator + RightA( as_source,LenA( as_source ) - li_s )
			else
				as_source = LeftA( as_source,li_e ) + as_keyvalue
			end if
			
			li_f = 1
		end if
	end if
loop while li_p > 0

return li_f
end function

public function string of_wordcap (string as_source);//////////////////////////////////////////////////////////////////////////////
//
//	of_wordCap()
//	argumentos:	string as_source, cadena analizada
//
//	retorna:  	string, valor resultante
//
//	Descripción:
//	retorna la cadena recibida con la primera letra de cada palabra en mayúsculas
//	y el resto en minúsculas
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
boolean lb_next
integer li_p
long ll_l
char lc_char
char lc_string[]
string ls_valor

if isNull( as_source ) then
	string ls_null
	
	setNull( ls_null )
	return ls_null
end if

ll_l = LenA( as_source )

if ll_l = 0 then
	return as_source
end if

lc_string = lower( as_source )

lb_next = true

for li_p = 1 to ll_l
	lc_char = lc_string[li_p]
	
	if not of_isAlpha( lc_char ) then
		lb_next = true
	elseif lb_next then
		lc_string[li_p] = upper( lc_char )
		lb_next = false
	end if
next

ls_valor = lc_string

return ls_valor
end function

public function string of_removenonprint (string as_source);//////////////////////////////////////////////////////////////////////////////
//
//	of_removeNonPrint()
//
//	argumentos:	string as_source, cadena original
//	retorna:  	string, cadena resultante
//
//	Descripción:
//	Elimina de la cadena cualquier carácter no imprimible
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
long ll_i,ll_l,ll_p = 1
long ll_loop
char lc_char
string ls_source

if isNull( as_source ) then
	string ls_null
	
	setNull( ls_null )
	return ls_null
end if

ls_source = as_source
ll_l = LenA( ls_source )

for ll_l = 1 to ll_l
	lc_char = MidA( ls_source,ll_p,1 )

	if of_isPrintable( lc_char ) then
		ll_p ++
	else
		ls_source = ReplaceA( ls_source,ll_p,1,'' )
	end if
next

return ls_source

end function

public function boolean of_isprintable (string as_source);//////////////////////////////////////////////////////////////////////////////
//
//	of_isPrintable()
//
//	argumentos:	string as_source, cadena analizada
//	retorna:  	boolean
//
//	Descripción:
//	determina si la cadena está formada sólo por caracteres no imprimibles
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
char lc_char[]
integer li_ascii
long ll_l,ll_c

if isNull( as_source ) then
	boolean lb_null
	
	setNull( lb_null )
	return lb_null
end if

ll_l = LenA( as_source )

if ll_l = 0 then
	return false
end if

lc_char = as_source

do while ll_c < ll_l
	ll_c ++
	
	li_ascii = AscA( lc_char[ll_c] )
	
	if li_ascii < 32 or li_ascii > 126 then
		return false
	end if
loop
	
return true

end function

public function boolean of_isformat (string as_source);//////////////////////////////////////////////////////////////////////////////
//
//	of_isFormat()
//
//	argumentos:	string as_source, cadena analizada
//	retorna:  	boolean
//
//	Descripción:
//	determina si la cadena está compuesta de caracteres imprimibles no alfanuméricos
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
char lc_char[]
integer li_ascii
long ll_l,ll_c

if isNull( as_source ) then
	boolean lb_null
	
	setNull( lb_null )
	return lb_null
end if

ll_l = LenA( as_source )

if ll_l = 0 then
	return false
end if

lc_char = as_source

do while ll_c < ll_l
	ll_c ++
	li_ascii = AscA( lc_char[ll_c] )
	
	if ( li_ascii >= 33 and li_ascii <= 47 ) or ( li_ascii >= 58 and li_ascii <= 64 ) or ( li_ascii >= 91 and li_ascii <= 96) or ( li_ascii >= 123 and li_ascii <= 126 ) then
		// continuar
	else
		return false
	end if
loop
	
return true

end function

public function string of_removewhitespace (string as_source);//////////////////////////////////////////////////////////////////////////////
//
//	of_removeWhiteSpace()
//
//	argumentos:	string as_source, cadena original
//	retorna:  	string, valor resultante
//
//	Descripción:
//	elimina cualquier espacio en blanco de la cadena
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
boolean lb_printable
long ll_p = 1
long ll_i, ll_l
char lc_char
string ls_source

if isNull( as_source ) then
	string ls_null
	
	setNull( ls_null )
	return ls_null
end if

ls_source = as_source

ll_l = LenA( ls_source )

for ll_i = 1 to ll_l
	lc_char = MidA( ls_source,ll_p,1 )

	if not of_isWhiteSpace( lc_char ) then
		ll_p ++
	else
		ls_source = ReplaceA( ls_source,ll_p,1,'' )
	end if 
next

return ls_source

end function

public function boolean of_IsComparisonOperator (string as_source);//////////////////////////////////////////////////////////////////////////////
//
//	of_isComparisonOperator()
//
//	argumentos:	string as_source, cadena analizada
//	retorna:  	boolean
//
//	Descripción:
//	determina si la cadena está compuesta sólo de operadores de comparació
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
long ll_c,ll_l
integer li_ascii
char lc_char[]

if isNull( as_source ) then
	boolean lb_null
	
	setNull( lb_null )
	return lb_null
end if

ll_l = LenA( as_source )

if ll_l = 0 then
	return false
end if

lc_char = as_source

do while ll_c < ll_l
	ll_c ++
	
	li_ascii = AscA( lc_char[ll_c] )
	
	if li_ascii = 60 or li_ascii = 61 or li_ascii = 62 then
		// < = >
		// continuar
	else
		return false
	end if
loop
	
return true

end function

public function boolean of_IsArithmeticOperator (string as_source);//////////////////////////////////////////////////////////////////////////////
//
//	of_isArithmeticOperator()
//
//	argumentos:	string as_source, cadena analizada
//	retorna:  	boolean
//
//	Descripción:
//	determina si la cadena recibida está compuesta sólo por operadores aritméticos
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
integer li_ascii
long ll_c,ll_l
char lc_char[]

if isNull( as_source ) then
	boolean lb_null
	
	setNull( lb_null )
	return lb_null
end if

ll_l = LenA( as_source )

if ll_l = 0 then
	return false
end if

lc_char = as_source

do while ll_c < ll_l
	ll_c ++

	li_ascii = AscA( lc_char[ll_c] )
	
	if li_ascii = 40 or li_ascii = 41 or li_ascii = 43 or li_ascii = 45 or li_ascii = 42 or li_ascii = 47 or li_ascii = 94 then		/* ^ power */	
		// operador aritmético
		// continuar
	else
		return false
	end if
loop
	
return true

end function

public function string of_default (string as_source, string as_default);//////////////////////////////////////////////////////////////////////////////
//
//	of_default()
//
//	argumentos:	string as_source, cadena analizada
//					string as_default, valor por defecto
//	retorna:  	string
//
//	Descripción:
//	si la cadena recibida es nula o tiene longitud 0 le asigna el valor por defecto
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
if of_isEmpty( as_source ) then
	return as_default
end if

return as_source

end function

public function string of_gettoken (ref string as_source, string as_separator);//////////////////////////////////////////////////////////////////////////////
//
//	of_getToken()
//
//	argumentos:	ref string as_source, valor original
//					string as_separator, carácter separador
//	retorna:  	string, valor original excepto el separador
//
//	Descripción:
//	Separa el string especificado de la cadena original y retorna el resultado
//
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
integer li_p
string ls_valor

if isNull( as_source ) or isNull( as_separator ) then
	setNull( ls_valor )	
	return ls_valor
end if

li_p = PosA( as_source,as_separator )	

if li_p = 0 then	// si no es troba el separador es retornaa el valor original
	ls_valor = as_source
	as_source = ''	
else
	ls_valor = LeftA( as_source,li_p - 1 )
	as_source = RightA( as_source,LenA( as_source ) - (li_p + LenA( as_separator ) - 1) )
end if

return ls_valor
end function

public function string of_getkeyvalue (string as_source, string as_keyword, string as_separator);//////////////////////////////////////////////////////////////////////////////
//
//	of_getKeyValue()
//
//	argumentos:	string as_source, cadena a analizar
//					string as_keyword, valor de clave
//					string as_separator, separador de valores
//	retorna:  	string, valor resultante 
//
//	Descripción:
//	Localiza formatos tipo: as_keyword='valor' dentro de una cadena donde puede haber
//	diversos formatos separados por as_separators
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
boolean lb_done = false
integer li_p,li_s
string ls_keyvalue

if isNull( as_source ) or isNull( as_keyword ) or isNull( as_separator ) then
	string ls_null
	
	setNull( ls_null )
	return ls_null
end if

ls_keyvalue = ''

do while not lb_done
	li_p = PosA( lower( as_source ),lower( as_keyword ))

	if li_p > 0 then
		as_source = leftTrim( RightA( as_source,LenA( as_source ) - ( li_p + LenA( as_keyword ) - 1 )))

		if LeftA( as_source,1 ) = '=' then
			li_s = PosA( as_source,as_separator,2 )
			
			if li_s > 0 then
				ls_keyvalue = MidA( as_source,2,li_s - 2 )
			else
				ls_keyvalue = MidA( as_source,2 )
			end if
			
			ls_keyvalue = trim( ls_keyvalue )
			lb_done = true
		end if
	else
		lb_done = true
	end if
loop

return ls_keyvalue
end function

public function string of_decode (string as_code);//////////////////////////////////////////////////////////////////////////////
//
//	of_decode()
//
//	argumentos:	string as_code, cadena codificada
//
//	retorna:  	string
//
//	Descripciónó:
//	decodifica una cadena de caracteres hexadecimales
//

//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
char lc_char[]
integer li_i,li_c
long ll_digit
long ll_byte[]
string ls_byte[]
n_cst_conversio lnv_conv

li_c = of_parseToArray( as_code,',',ls_byte )

for li_i=1 to li_c
	ll_byte[li_i] = lnv_conv.of_hexatodecimal( ls_byte[li_i] )
next

as_code = ''

//mascara de posicions utilitzades
lc_char = ( lnv_conv.of_binary( ll_byte[0] ) + lnv_conv.of_binary( ll_byte[1] ) )

//mascara de OR 
ll_byte[2] = lnv_conv.of_bitwiseNOT( ll_byte[2] )

for li_i = 1 to 16
	if lc_char[li_i] = '1' then
		ll_digit = lnv_conv.of_bitwiseXOR( ll_byte[li_i],ll_byte[2] )
		as_code = CharA( lnv_conv.of_bitwiseNOT( ll_digit ) ) + as_code
	end if
next

return as_code

end function

public function string replace (string as_source, string as_lookfor, string as_replacewith);// Substituye todas las ocurrencias del string LookFor pel string ReplaceWidth
// sobre el string Source


Integer		li_Posicio = 1
Integer		li_LenLookFor

li_LenLookFor = LenA(as_LookFor)

li_Posicio = PosA(as_Source, as_LookFor, li_Posicio)

do while li_Posicio > 0
	as_Source = ReplaceA(as_Source, li_Posicio, li_LenLookFor, as_ReplaceWith)
	li_Posicio = PosA(as_Source, as_LookFor, li_Posicio + LenA(as_ReplaceWith))
loop

return as_Source

end function

public function string of_padleft (string as_source, long al_length);//////////////////////////////////////////////////////////////////////////////
//
//	of_padLeft()
//
//	argumentos:	string as_source, valor original
//					string al_length, longitud final
//	retorna:  	string
//
//	Descripción:
//	Llena un string con espacios por la izquierda hasta obtener la longitud especificada
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
string ls_valor

if isNull( as_source ) or isNull( al_length ) then
	setNull( ls_valor )
	return ls_valor
end if

if al_length <= LenA( as_source ) then
	return as_source
end if

ls_valor = space( al_length - LenA( as_source )) + as_source

return ls_valor
end function

public function long of_stringtoarray (string as_origen, ref string as_destino[], integer ai_longitud);///////////////////////////////////////////////////////////////////////////////
// Función		: of_StringToArray
//	Comentarios	: Parte un string en un array.Cada registro del array tendra una
//					  longitud de ai_Longitud (excepto el último).
//	Parámetros	: as_Origen -> string de origen
//					  as_Destino[] (ref) -> array donde guardaremos el string particionado
//					  ai_Longitud  -> longitud de cada elemento del array
//
//	Retorno		: 1, si OK
//					 -1, en caso contrario
//					  
//	Modificaciones:
//		Fecha		Autor		Comentarios
//		--------	--------	-------------------------------------------------------
//		16/11/01	ManelP	Creación del Script
///////////////////////////////////////////////////////////////////////////////

Int	i

if ai_Longitud <= 0 Then Return -1

i = 1
Do While LenA(as_Origen) > 0
	as_destino[i] = MidA(as_Origen, 1, ai_Longitud)
	as_Origen     = MidA(as_origen, ai_Longitud+1, LenA(as_Origen))
	i++
Loop

return 1

end function

public function long of_arraytostring (string as_source[], string as_delimiter, ref string as_valor);//////////////////////////////////////////////////////////////////////////////
//
//	of_arrayToString()
//
//	argumentos:	string as_source[], lista de valores 
//					strign as_delimiter, delimitador a utilizar
//					ref string as_valor,	cadena resultante recibida por referencia
//	retorna:  	long, >0 correcte, <0 error
//
//	Descripción:
//	genera una cadena resultante de la concatenación de todos los valores no vacíos
//	de la lista separados por as_delimiter
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
boolean lb_found = false
long ll_d,ll_p,ll_c,ll_u
string ls_holder

ll_u = upperBound( as_source[] )

if isNull( as_delimiter ) or not ll_u > 0 then
	return -1
end if

as_valor = ''

for ll_c = 1 to ll_u
	if as_source[ll_c] <> '' then
		if LenA( as_valor ) = 0 then
			as_valor = as_source[ll_c]
		else
			as_valor = as_valor + as_delimiter + as_source[ll_c]
		end if
	end if
next 

return 1

end function

public function boolean of_isempty (string as_source);//////////////////////////////////////////////////////////////////////////////
//
//	of_isEmpty()
//
//	argumentos:	string as_source, cadena analizada
//	retorna:  	boolean
//
//	Descripción:
//	determina si la cadena recibida es nula o tiene longitud 0
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
return ( isNull( as_source ) or LenA( trim(as_source) ) = 0 )
end function

public function long of_parsetoarray (string as_source, string as_delimiter, ref long al_array[]);//////////////////////////////////////////////////////////////////////////////
//
//	of_parseToArray()
//
//	argumentos:	string as_source, valor analizado
//					string as_delimiter, separador entre valores
//					ref long al_array[], lista de valores finales
//	retorna:  	long, nº de elementos de la lista
//
//	Descripción:
//	Descompone un string en sus elementos y llena la lista recibida como 
//	referencia utilizando el separador especificado
//
//////////////////////////////////////////////////////////////////////////////
//
//	ManelP. 05/02/2002
//
//////////////////////////////////////////////////////////////////////////////

long ll_l,ll_p,ll_c
long ll_start,ll_length
string ls_holder

if isNull( as_source ) or isNull( as_delimiter ) then
	long ll_null

	setNull( ll_null )
	return ll_null
end if

if trim( as_source ) = '' then
	return 0
end if

ll_l = LenA( as_delimiter )
ll_p = PosA( upper( as_source ),upper( as_delimiter ))

if ll_p = 0 then
	If isNumber(as_source) Then 
		al_array[1] = Long(as_source)
	Else
		al_array[1] = -1
	End If
	return 1
end if

ll_c = 0
ll_start = 1

do while ll_p > 0
	ll_length = ll_p - ll_start
	ls_holder = MidA( as_source,ll_start,ll_length )

	ll_c ++
	If isNumber(ls_holder) Then 
		al_array[ll_c] = Long(ls_holder)
	Else
		al_array[ll_c] = -1
	End If
	ll_start = ll_p + ll_l

	ll_p = PosA( upper( as_source ),upper( as_delimiter ),ll_start )
loop

ls_holder = MidA( as_source,ll_start,LenA( as_source ))

if LenA( ls_holder ) > 0 then
	ll_c++
	If isNumber(ls_holder) Then 
		al_array[ll_c] = Long(ls_holder)
	Else
		al_array[ll_c] = -1
	End If	
end if

return ll_c

end function

on n_cst_string.create
call super::create
end on

on n_cst_string.destroy
call super::destroy
end on


forward
global type n_cst_error_attr from nonvisualobject
end type
end forward

global type n_cst_error_attr from nonvisualobject autoinstantiate
end type

type variables
Long 		il_ErrNumero
String 	is_ErrTexto
String 	is_ErrInfo

// JGP. Errores 090801
string 	msgParamTexto[], msgParamInfo[]

end variables

on n_cst_error_attr.create
call super::create
TriggerEvent( this, "constructor" )
end on

on n_cst_error_attr.destroy
TriggerEvent( this, "destructor" )
call super::destroy
end on


forward
global type n_cst_base from nonvisualobject
end type
end forward

global type n_cst_base from nonvisualobject
end type
global n_cst_base n_cst_base

on n_cst_base.create
call super::create
TriggerEvent( this, "constructor" )
end on

on n_cst_base.destroy
TriggerEvent( this, "destructor" )
call super::destroy
end on


forward
global type n_cst_conversio from n_cst_base
end type
end forward

global type n_cst_conversio from n_cst_base autoinstantiate
end type

forward prototypes
public function boolean of_getbit (long al_decimal, unsignedinteger ai_bit)
public function string of_hexa (long al_decimal)
public function long of_binarytodecimal (string as_binary)
public function long of_hexatodecimal (string as_hexa)
public function long of_bitwiseand (long al_valor1, long al_valor2)
public function long of_bitwiseor (long al_valor1, long al_valor2)
public function long of_bitwisexor (long al_valor1, long al_valor2)
public function long of_bitwisenot (long al_valor)
public function integer of_integer (boolean ab_arg)
public function boolean of_boolean (integer ai_arg)
public function boolean of_boolean (string as_arg)
public function string of_string (boolean ab_arg, string as_patro, string as_delim)
public function string of_string (boolean ab_arg)
public function string of_string (ref toolbaralignment ae_arg)
public function time of_time (string as_arg)
public function integer of_toolbaralignment (string as_arg, ref toolbaralignment ae_alignment)
public function integer of_windowstate (string as_arg, ref windowstate ae_state)
public function integer of_tabposition (string as_arg, ref tabposition ae_position)
public function integer of_textalignment (string as_arg, ref alignment ae_alignment)
public function integer of_textcase (string as_arg, ref textcase ae_case)
public function string of_string (ref windowstate ae_state)
public function string of_string (ref textcase ae_case)
public function string of_string (ref alignment ae_align)
public function string of_string (ref tabposition ae_position)
public function string of_string (ref mailreturncode ae_mailreturn)
public function boolean of_boolean (any aa_arg)
public function integer of_default (long ai_initial, long ai_default)
public function boolean of_default (boolean ab_initial, boolean ab_default)
public function string of_string (ref borderstyle ae_border)
public function string of_binary (long al_decimal)
public function date of_date (string as_arg)
public function datetime of_datetime (string as_datetime)
end prototypes

public function boolean of_getbit (long al_decimal, unsignedinteger ai_bit);//////////////////////////////////////////////////////////////////////////////
//
//	of_getBit
//
//	argumentos:	long al_decimal,			valor decimal a determinar
//					unsignedinteger ai_bit,	posición del bit de derecha a izquierda a determinar
//
//	retorno:		boolean, true si el valor está ON y false si está OFF
//
//	descripción:
//	Determina si la posición de un bit dentro de un byte correspondiente a un número
//	decimal está a 1 o a 0
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	versió primera
//
//////////////////////////////////////////////////////////////////////////////

boolean lb_null

if isNull( al_decimal ) or isNull( ai_bit ) then
	setNull( lb_null )
	return lb_null
end if

//ai_bit es el n-ésimo bit desde la derecha a la izquierda
//al_decimal es un número decimal en base 10
if int( mod( al_decimal / (2 ^(ai_bit - 1)), 2)) > 0 then
	return true
end if

return false

end function

public function string of_hexa (long al_decimal);//////////////////////////////////////////////////////////////////////////////
//
//	of_binary
//
//	argumentos:	long al_decimal, número a representar en formato hexadecimal
//
//	retorno: 	string
//
//	descripción:
//	Determina la representación hexadecimal de un número decimal
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	versió primera
//
//////////////////////////////////////////////////////////////////////////////
integer li_remainder
string ls_binary=''

if isNull( al_decimal ) or al_decimal < 0 then
	string ls_null
	setNull( ls_null )

	return ls_null
end if

if al_decimal = 0 then
	return '00'
end if

do until al_decimal = 0
	li_remainder = mod( al_decimal,16 )
	al_decimal = al_decimal / 16
	
	choose case li_remainder
		case 0 to 9
			ls_binary = string( li_remainder ) + ls_binary
		case 10
			ls_binary = 'A' + ls_binary
		case 11
			ls_binary = 'B' + ls_binary
		case 12
			ls_binary = 'C' + ls_binary
		case 13
			ls_binary = 'D' + ls_binary
		case 14
			ls_binary = 'E' + ls_binary
		case 15
			ls_binary = 'F' + ls_binary
	end choose
loop

if mod( LenA( ls_binary ),2 ) > 0 then
	ls_binary = '0' + ls_binary
end if

return ls_binary
end function

public function long of_binarytodecimal (string as_binary);//////////////////////////////////////////////////////////////////////////////
//
//	of_binarytodecimal
//
//	argumentos:	string as_binary, representación binaria del número decimal a determinar
//
//	retorna: 		long	<0: si hay algún argumento inválido
//
//	descripción:
//	Determina el valor numérico de una representación binaria
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	versió primera
//
//////////////////////////////////////////////////////////////////////////////
char lc_char[]
integer li_c
long ll_l
long ll_decimal=0

if isNull( as_binary ) or LenA( as_binary ) <=0 then
	long ll_null
	setNull( ll_null )	

	return ll_null
end if

ll_l = LenA( as_binary )

lc_char = as_binary

for li_c = 1 to ll_l
	if lc_char[li_c] <> '1' and lc_char[li_c] <> '0' then
		return -1
	end if

	ll_decimal = ll_decimal + ( long( lc_char[li_c] ) * (2 ^ (ll_l - li_c)) )
next

return ll_decimal
end function

public function long of_hexatodecimal (string as_hexa);//////////////////////////////////////////////////////////////////////////////
//
//	of_hexatodecimal
//
//	argumentos:	string as_hexa, representación hexadecimal del número decimal a determinar
//
//	retorna: 		long	<0: si hay algún argumento inválido
//
//	descripción:
//	Determina el valor numérico de una representación binaria
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	versió primera
//
//////////////////////////////////////////////////////////////////////////////
char lc_char[]
integer li_c
long ll_l
long ll_decimal=0

if isNull( as_hexa ) or LenA( as_hexa ) <=0 then
	long ll_null
	setNull( ll_null )	

	return ll_null
end if

ll_l = LenA( as_hexa )

lc_char = as_hexa

for li_c = 1 to ll_l
	choose case lc_char[li_c]
		case '0' to '9'
			ll_decimal = ll_decimal + ( long( lc_char[li_c] ) * (16 ^ (ll_l - li_c)) )
		case 'A'
			ll_decimal = ll_decimal + ( 10 * (16 ^ (ll_l - li_c)) )
		case 'B'
			ll_decimal = ll_decimal + ( 11 * (16 ^ (ll_l - li_c)) )
		case 'C'
			ll_decimal = ll_decimal + ( 12 * (16 ^ (ll_l - li_c)) )
		case 'D'
			ll_decimal = ll_decimal + ( 13 * (16 ^ (ll_l - li_c)) )
		case 'E'
			ll_decimal = ll_decimal + ( 14 * (16 ^ (ll_l - li_c)) )
		case 'F'
			ll_decimal = ll_decimal + ( 15 * (16 ^ (ll_l - li_c)) )
	end choose
next

return ll_decimal
end function

public function long of_bitwiseand (long al_valor1, long al_valor2);//////////////////////////////////////////////////////////////////////////////
//
//	of_bitwiseAND
//
//	argumentos:	long al_valor1, primer valor de la operación
//					long al_valor2, segundo valor de la operación
//
//	retorna: 		long
//
//	descripción:
//	Realiza una operación de AND (&) entre los bits de los dos valores recibidos y 
//	retorna el valor resultante
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	versió primera
//
//////////////////////////////////////////////////////////////////////////////
boolean lb_valor1[32],lb_valor2[32]
integer li_c
long ll_result

if isNull( al_valor1 ) or isNull( al_valor2 ) then
	setNull(ll_result)
	return ll_result
end if

for li_c = 1 to 32
	lb_valor1[li_c] = of_getBit( al_valor1,li_c )
	lb_valor2[li_c] = of_getBit( al_valor2,li_c )
next

for li_c = 1 to 32
	if lb_valor1[li_c] and lb_valor2[li_c] then
		ll_result = ll_result + (2^(li_c - 1))
	end if
next

return ll_result

end function

public function long of_bitwiseor (long al_valor1, long al_valor2);//////////////////////////////////////////////////////////////////////////////
//
//	of_bitwiseOR
//
//	argumentos:	long al_valor1, valor a utilizar
//					long al_valor2, valor a utilizar
//
//	retorna:		long
//
//	descripción:
//	Realiza una operación de OR (|) entre los bits de los dos valores recibidos y 
//	retorna el valor resultante
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	versió primera
//
//////////////////////////////////////////////////////////////////////////////
integer li_c
long ll_result
boolean lb_valor1[32], lb_valor2[32]

if isNull( al_valor1 ) or isNull( al_valor2 ) then
	setNull( ll_result )
	return ll_result
end if

for li_c = 1 to 32
	lb_valor1[li_c] = of_getBit( al_valor1,li_c )
	lb_valor2[li_c] = of_getBit( al_valor2,li_c )
next

for li_c = 1 to 32
	if lb_valor1[li_c] or lb_valor2[li_c] then
		ll_result = ll_result + ( 2^(li_c - 1) )
	end if
next

return ll_result

end function

public function long of_bitwisexor (long al_valor1, long al_valor2);//////////////////////////////////////////////////////////////////////////////
//
//	of_bitwiseXOR
//
//	argumentos:	al_valor1, valor a utilizar
//					al_valor2, segundo valor a utilizar
//
//	retorna: 	long
//
//	descripción:   
//	Realiza una operación de OR exclusiva entre los bits de los dos valores recibidos y 
//	retorna el valor resultante
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	versió primera
//
//////////////////////////////////////////////////////////////////////////////
integer li_c
long ll_result
boolean lb_valor1[32],lb_valor2[32]

if isNull( al_valor1 ) or isNull( al_valor2 ) then
	setNull( ll_result )
	return ll_result
end if

for li_c = 1 to 32
	lb_valor1[li_c] = of_getBit( al_valor1,li_c )
	lb_valor2[li_c] = of_getBit( al_valor2,li_c )
next

for li_c = 1 to 32
	if ( lb_valor1[li_c] and not lb_valor2[li_c] ) or ( not lb_valor1[li_c] and lb_valor2[li_c] ) then
		ll_result = ll_result + ( 2 ^ (li_c - 1) )
	end if
next

return ll_result

end function

public function long of_bitwisenot (long al_valor);//////////////////////////////////////////////////////////////////////////////
//
//	of_bitwiseNOT
//
//	argumentos:	long al_valor, valor a utilizar
//
//	retorna: 	long
//
//	descripción:
//	Realiza una operación de NOT al valor recibido y retorna el valor resultante
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	versió primera
//
//////////////////////////////////////////////////////////////////////////////
integer li_i,li_c
long ll_null
string ls_valor, ls_result

if isNull( al_valor ) then
	setNull( ll_null )
	return ll_null
end if

ls_valor = of_binary( al_valor )
li_c = LenA( ls_valor )

// cambia 0 -> 1 i 1 -> 0
for li_i = 1 to li_c
	if MidA( ls_valor,li_i,1 ) = '0' then
		ls_result = ls_result + '1'
	else
		ls_result = ls_result + '0'
	end if
next
	
return of_binaryToDecimal( ls_result )	

end function

public function integer of_integer (boolean ab_arg);//////////////////////////////////////////////////////////////////////////////
//
//	of_integer
//
//	argumentos:	boolean ab_arg, valor a convertir
//
//	retorna: 	integer
//
//	descripción:
//	Convierte una boleana en un integer (1=true, 0=false)
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió 
//
//////////////////////////////////////////////////////////////////////////////
if isNull( ab_arg ) then
	integer li_null
	
	setNull( li_null )
	return li_null
end if

if ab_arg then
	return 1
end if

return 0

end function

public function boolean of_boolean (integer ai_arg);//////////////////////////////////////////////////////////////////////////////
//
//	of_boolean
//
//	argumentos:	integer ai_arg, valor a convertir
//
//	retorna: 	boolean
//
//	descripción:
//	Convierte un valor entero a una boleana (1=true, 0=false)
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió 
//
//////////////////////////////////////////////////////////////////////////////

if isNull( ai_arg ) or ai_arg > 1 or ai_arg < 0 then
	boolean lb_null
	
	setNull( lb_null )
	return lb_null
end if

if ai_arg = 1 then
	return true
end if

return false

end function

public function boolean of_boolean (string as_arg);//////////////////////////////////////////////////////////////////////////////
//
//	of_boolean
//
//	argumentos:	string as_arg, valor a convertir
//
//	retorna: 	boolean
//
//	descripción:
//	Convierte una cadena a una boleana
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió 
//
//////////////////////////////////////////////////////////////////////////////
boolean lb_null

setNull( lb_null )

if isNull( as_arg ) then
	return lb_null
end if

as_arg = upper( as_arg )

choose case as_arg
	case 'TRUE', 'T', 'VERDADERO', 'V', 'CERT', 'C', 'YES', 'Y', 'SI', 'S', '1'
		return true
	case 'FALSE', 'F', 'FALSO', 'FALS', 'NO', 'N', '0'
		return false
end choose

return lb_null


end function

public function string of_string (boolean ab_arg, string as_patro, string as_delim);//////////////////////////////////////////////////////////////////////////////
//
//	of_string
//
//	argumentos:	boolean ab_arg, valor a convertir
//					string as_patro, patrón de conversión
//					string as_delim, delimitador de valores del patrón
//
//	retorna: 	string
//
//	descripción:
//	Convierte una boleana en una cadena según el patrón utilizado
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió 
//
//////////////////////////////////////////////////////////////////////////////
integer li_pos
string ls_true,ls_false
string ls_void
	
if isNull( ab_arg ) or isNull( as_patro ) or isNull( as_delim ) then
	return ls_void
end if

li_pos = PosA( as_patro,as_delim )

if li_pos = 0 then
	return ls_void
end if

ls_true = MidA( as_patro,1,li_pos - 1 )
ls_false = MidA( as_patro, li_pos + 1 )

as_patro = upper( as_patro )

if ab_arg then 
	return ls_true
end if

return ls_false

end function

public function string of_string (boolean ab_arg);//////////////////////////////////////////////////////////////////////////////
//
//	of_string
//
//	argumentos:	boolean ab_arg, valor a convertir
//
//	retorna: 	string
//
//	descripción:
//	Convierte una boleana a una cadena del tipo 'true:false'
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió 
//
//////////////////////////////////////////////////////////////////////////////
return of_string( ab_arg,'true:false',':' )


end function

public function string of_string (ref toolbaralignment ae_arg);//////////////////////////////////////////////////////////////////////////////
//
//	of_string
//
//	argumentos:	toolbaralignment ae_arg, valor a convertir
//
//	retorna: 	string
//
//	descripción:
//	Convierte un argumento de tipo toolbaralignment a una cadena 
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió 
//
//////////////////////////////////////////////////////////////////////////////
string ls_align
	
choose case ae_arg
	case alignattop!
		ls_align = 'top'

	case alignatbottom!
		ls_align = 'bottom'

	case alignatright!
		ls_align = 'right'

	case alignatleft!
		ls_align = 'left'

	case floating!
		ls_align = 'floating'
	
end choose

return ls_align

end function

public function time of_time (string as_arg);//////////////////////////////////////////////////////////////////////////////
//
//	of_time
//
//	argumentos:	string as_arg, valor a convertir
//
//	retorna: 	time
//
//	descripción:
//	Convierte un string a un valor time
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió 
//
//////////////////////////////////////////////////////////////////////////////
long ll_c
string ls_datetime[]
time ltm_rc
n_cst_string lnv_string

if isNull( as_arg ) then
	return ltm_rc
end if

ll_c = lnv_string.of_parseToArray( as_arg,' ',ls_datetime )

if ll_c <= 0 or ll_c > 2 then
	return ltm_rc
end if

if ll_c = 1 then
	return time( as_arg )
end if

if ll_c = 2 then
	return time( ls_datetime[2] )
end if

return ltm_rc

end function

public function integer of_toolbaralignment (string as_arg, ref toolbaralignment ae_alignment);//////////////////////////////////////////////////////////////////////////////
//
//	of_toolbaralignment
//
//	argumentos:	string as_arg, valor a convertir
//					toolbaralignment ae_toolalign, argument donde dejamos el resultado
//
//	retorna: 	integer (0 valor recibido nulo, <0 error de argumento, >0 correcto)
//
//	descripción:
//	Convierte un string a un valor tipo toolbaralignment
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió 
//
//////////////////////////////////////////////////////////////////////////////
as_arg = lower( trim( as_arg ) )

if isNull( as_arg ) then
	return 0
end if

choose case as_arg
	case 'top','1','cabecera'
		ae_alignment = alignattop!
	
	case 'bottom','2','pie'
		ae_alignment = alignatbottom!
		
	case 'left','3','izquierza'
		ae_alignment = alignatleft!
		
	case 'right','4','derecha'
		ae_alignment = alignatright!
		
	case 'floating','0','flotante'
		ae_alignment = floating!

	case else
		return -1
		
end choose
	
return 1
end function

public function integer of_windowstate (string as_arg, ref windowstate ae_state);//////////////////////////////////////////////////////////////////////////////
//
//	of_windowstate
//
//	argumentos:	string as_arg, valor a convertir
//					windowstate ae_state, argumento donde dejamos el resultado
//
//	retorna: 	integer (0 valor recibido nulo, <0 error de argumento, >0 correcto)
//
//	descripción:
//	Convierte un string a un valor tipo windowstate
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió 
//
//////////////////////////////////////////////////////////////////////////////
as_arg = lower( trim( as_arg ) )

if isNull( as_arg ) then
	return 0
end if

choose case as_arg
	case "maximized","maximizar","max","2"
		ae_state = maximized!
	
	case "minimized","minimizar","min","1"
		ae_state = minimized!
	
	case "normal","0"
		ae_state = normal!
	
	case else
		return -1

end choose

return 1

end function

public function integer of_tabposition (string as_arg, ref tabposition ae_position);//////////////////////////////////////////////////////////////////////////////
//
//	of_tabposition
//
//	argumentos:	string as_arg, valor a convertir
//					tabposition ae_postion, argumento donde dejamos el resultado
//
//	retorna: 	integer (0 valor recibido nulo, <0 error de argumento, >0 correcto)
//
//	descripción:
//	Convierte un string a un valor tipo tabposition
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió 
//
//////////////////////////////////////////////////////////////////////////////
as_arg = lower( trim( as_arg ) )

if isNull( as_arg ) then
	return 0


end if


choose case as_arg
	case 'top','1','arriba'
		ae_position = tabsOnTop!
	case 'bottom','2','abajo'
		ae_position = tabsOnBottom!
	case 'topbottom','12','arribaabajo'
		ae_position = tabsOnTopAndBottom! 
	case 'bottomtop','21','abajoarriba'
		ae_position = tabsOnBottomAndTop!
	case 'left','3','izquierda'
		ae_position = tabsOnLeft!
	case 'right','4','derecha'
		ae_position = tabsOnRight!
	case 'letright','34','izquierdaderecha'
		ae_position = tabsOnLeftAndRight! 
	case 'rightleft','43','derechaizquierda'
		ae_position = tabsOnRightAndLeft!
	case else
		return -1
end choose

return 1


end function

public function integer of_textalignment (string as_arg, ref alignment ae_alignment);//////////////////////////////////////////////////////////////////////////////
//
//	of_textalignment
//
//	argumentos:	string as_arg, valor a convertir
//					alignment ae_state, argumento donde dejamos el resultado
//
//	retorna: 	integer (0 valor recibido nulo, <0 error de argumento, >0 correcto)
//
//	descripción:
//	Convierte un string a un valor tipo textalignment
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió 
//
//////////////////////////////////////////////////////////////////////////////
as_arg = lower( trim( as_arg ) )

if isNull( as_arg ) then
	return 0
end if

choose case as_arg
	case 'left','3','izquierza'
		ae_alignment = left!
		
	case 'justify','1','justificar'
		ae_alignment = justify!
		
	case 'right','4','derecha'
		ae_alignment = right!
		
	case 'center','0','centrado'
		ae_alignment = center!
		
	case else
		return -1
		
end choose

return 1

end function

public function integer of_textcase (string as_arg, ref textcase ae_case);//////////////////////////////////////////////////////////////////////////////
//
//	of_textcase
//
//	argumentos:	string as_arg, valor a convertir
//					textcase ae_case, argumento donde dejamos el resultado
//
//	retorna: 	integer (0 valor recibido nulo, <0 error de argumento, >0 correcto)
//
//	descripción:
//	Convierte un string a un valor tipo textcase
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió 
//
//////////////////////////////////////////////////////////////////////////////
as_arg = lower( trim( as_arg ) )

if isNull( as_arg ) then
	return 0
end if

choose case as_arg
	case 'upper','2','mayusculas'
		ae_case = upper!
		
	case 'lower','1','minusculas'
		ae_case = lower!
		
	case 'any','0','normal'
		ae_case = anycase!
		
	case else
		return -1
		
end choose

return 1

end function

public function string of_string (ref windowstate ae_state);//////////////////////////////////////////////////////////////////////////////
//
//	of_string
//
//	argumentos:	ref windowstate ae_state, estado de la window
//
//	retorna: 	string
//
//	descripción:
//	Convierte un tipo windowstate a un string
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió 
//
//////////////////////////////////////////////////////////////////////////////
string ls_state

choose case ae_state
	case normal!
		ls_state = 'normal'

	case maximized!
		ls_state = 'maximized'

	case minimized!
		ls_state = 'minimized'

end choose

return ls_state

end function

public function string of_string (ref textcase ae_case);//////////////////////////////////////////////////////////////////////////////
//
//	of_string
//
//	argumentos:	ref textcase ae_case, tipo de letra
//
//	retorna: 	string
//
//	descripción:
//	Convierte un tipo textcase a un string
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió 

//
//////////////////////////////////////////////////////////////////////////////
string ls_case

choose case ae_case
	case upper!
		ls_case = 'upper'
		
	case lower!
		ls_case = 'lower'
		
	case anycase!
		ls_case = 'any'
		
end choose

return ls_case

end function

public function string of_string (ref alignment ae_align);//////////////////////////////////////////////////////////////////////////////
//
//	of_string
//
//	argumentos:	ref alignment ae_align, alineación del texto
//
//	retorna: 	string
//
//	descripción:
//	Convierte un argumento de tipo alignment a una cadena 
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió 
//
//////////////////////////////////////////////////////////////////////////////
string ls_align
	
choose case ae_align
	case left!
		ls_align = 'left'
		
	case justify!
		ls_align = 'justify'
		
	case right!
		ls_align = 'right'
			
end choose

return ls_align

end function

public function string of_string (ref tabposition ae_position);//////////////////////////////////////////////////////////////////////////////
//
//	of_string
//
//	argumentos:	ref tabposition ae_position, posición de las pestañas de un tab
//
//	retorna: 	string
//
//	descripción:
//	Convierte un tipo windowstate a un string
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió 
//
//////////////////////////////////////////////////////////////////////////////
string ls_position

choose case ae_position
	case tabsOnTop!
		ls_position = 'top'

	case tabsOnBottom!
		ls_position = 'bottom'

	case tabsOnTopAndBottom! 
		ls_position = 'topbottom'

	case tabsOnBottomAndTop!
		ls_position = 'bottomtop'
		
	case tabsOnLeft!
		ls_position = 'left'

	case tabsOnRight!
		ls_position = 'right'

	case tabsOnLeftAndRight! 
		ls_position = 'letright'

	case tabsOnRightAndLeft!
		ls_position = 'rightleft'

end choose

return ls_position

end function

public function string of_string (ref mailreturncode ae_mailreturn);//////////////////////////////////////////////////////////////////////////////
//
//	of_string
//
//	argumentos:	ref mailreturncode ae_mailreturn, código de retorno de una mailSession
//
//	retorna: 	string
//
//	descripción:
//	Convierte un tipo mailreturncode a un string
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió 
//
//////////////////////////////////////////////////////////////////////////////
string ls_mailRC

choose case ae_mailreturn
	case mailReturnAccessDenied!
		ls_mailRC='Aceso denegado'
	case mailReturnAttachmentNotFound!
		ls_mailRC = 'Archivo vinculado al mensaje no localizado'
	case mailReturnAttachmentOpenFailure!
		ls_mailRC = 'No pudo abrirse el archivo vinculado al mensaje'
	case mailReturnAttachmentWriteFailure!
		ls_mailRC = 'No pudo grabarse el archvio vinculado al mensaje'
	case mailReturnDiskFull!
		ls_mailRC = 'Disco lleno'
	case mailReturnFailure!
		ls_mailRC = 'Fallo'
	case mailReturnInsufficientMemory!
		ls_mailRC = 'Memoria insuficiente'
	case mailReturnInvalidMessage!
		ls_mailRC = 'Mensaje no válido'
	case mailReturnLoginFailure!
		ls_mailRC = 'Usuario de login o contraseña no válido'
	case mailReturnMessageInUse!
		ls_mailRC = 'Mensaje en uso'
	case mailReturnNoMessages!
		ls_mailRC = 'No hay mensajes en la cola'
	case mailReturnSuccess!
		ls_mailRC = 'OK'
	case mailReturnTextTooLarge!
		ls_mailRC = 'Texto demasiado largo'
	case mailReturnTooManyFiles!
		ls_mailRC = 'Demasiados archivos'
	case mailReturnTooManyRecipients!
		ls_mailRC = 'Demasiados receptores del mensaje'
	case mailReturnTooManySessions!
		ls_mailRC = 'Demasiadas sesiones abiertas'
	case mailReturnUnknownRecipient!
		ls_mailRC = 'Receptor desconocido'
	case mailReturnUserAbort!
		ls_mailRC = 'Proceso cancelado por el usuario'
end choose

return ls_mailRC

end function

public function boolean of_boolean (any aa_arg);//////////////////////////////////////////////////////////////////////////////
//
//	of_boolean
//
//	argumentos:	any as_arg, valor a convertir
//
//	retorna: 	boolean
//
//	descripción:
//	Convierte un valor de tipo cadena o numérico a una boleana
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió 
//
//////////////////////////////////////////////////////////////////////////////
boolean lb_null

setNull( lb_null )

if isNull( aa_arg ) then
	return lb_null
end if

choose case className( aa_arg )
	case 'string'
		string ls_arg

		ls_arg = aa_arg
		return of_boolean( ls_arg )
	case 'integer','long'
		long ll_arg 
		
		ll_arg = aa_arg
		return of_boolean( ll_arg )
end choose

return lb_null


end function

public function integer of_default (long ai_initial, long ai_default);//////////////////////////////////////////////////////////////////////////////
//
//	of_default()
//
//	argumentos:	long ai_initial, valor inicial
//					long ai_default, valor por defecto
//	retorna:  	long
//
//	Descripción:
//	si el valor recibido es nulo le asigna el valor por defecto
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
if isNull( ai_initial ) then
	return ai_default
end if

return ai_initial

end function

public function boolean of_default (boolean ab_initial, boolean ab_default);//////////////////////////////////////////////////////////////////////////////
//
//	of_default()
//
//	argumentos:	long ai_initial, valor inicial
//					long ai_default, valor por defecto
//	retorna:  	long
//
//	Descripción:
//	si el valor recibido es nulo le asigna el valor por defecto
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
if isNull( ab_initial ) then
	return ab_default
end if

return ab_initial

end function

public function string of_string (ref borderstyle ae_border);//////////////////////////////////////////////////////////////////////////////
//
//	of_string
//
//	argumentos:	ref border ae_border, tipo de caja
//	retorna: 	string
//
//	descripción:
//	Convierte un argumento de tipo border a una cadena 
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió 
//
//////////////////////////////////////////////////////////////////////////////
string ls_rc

choose case ae_border
	case styleShadowBox!
		ls_rc = 'shadowBox'

	case styleBox!
		ls_rc = 'Box'

	case styleLowered!
		ls_rc = 'Lowered'
		
	case styleRaised!
		ls_rc = 'Raised'

end choose

return ls_rc

end function

public function string of_binary (long al_decimal);//////////////////////////////////////////////////////////////////////////////
//
//	of_binary
//
//	argumentos:	long al_decimal, número a representar en formato binario
//
//	retorna: 	string
//
//	descripción:
//	Determina la representación binaria de un número decimal
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	versió primera
//
//////////////////////////////////////////////////////////////////////////////
integer li_remainder
string ls_binary=''

if isNull( al_decimal ) or al_decimal < 0 then
	string ls_null
	setNull( ls_null )

	return ls_null
end if

if al_decimal = 0 then
	return '0'
end if

do until al_decimal = 0
	li_remainder = mod( al_decimal,2 )
	al_decimal = al_decimal /2
	
	ls_binary = string( li_remainder ) + ls_binary
loop

return ls_binary
end function

public function date of_date (string as_arg);//////////////////////////////////////////////////////////////////////////////
//
//	of_date
//
//	argumentos:	string as_arg, valor a convertir
//	retorna: 	date
//
//	descripción:
//	Convierte un string a un valor date
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió 
//
//////////////////////////////////////////////////////////////////////////////
date ld_rc
long ll_c
string ls_datetime[]
n_cst_string lnv_string

if isNull( as_arg ) then
	return ld_rc
end if

ll_c = lnv_string.of_parseToArray( as_arg,' ',ls_datetime )

if ll_c <= 0 or ll_c > 2 then
	return ld_rc
end if

if ll_c = 1 then
	return date( as_arg )
end if

if ll_c = 2 then
	return date( ls_datetime[1] )
end if

return ld_rc
end function

public function datetime of_datetime (string as_datetime);//////////////////////////////////////////////////////////////////////////////
//
//	of_dateTime
//
//	argumentos:	string as_arg, valor a convertir
//	retorna: 	date
//
//	descripción:
//	Convierte un string a un valor datetime
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió 
//
//////////////////////////////////////////////////////////////////////////////
datetime ldt_void
time lt_void
long ll_c
string ls_datetime[]
n_cst_string lnv_string

if lnv_string.of_isEmpty( as_datetime ) then
	return ldt_void
end if

choose case lnv_string.of_parseToArray( as_datetime,' ',ls_datetime )
	case 1
		return datetime( date( ls_datetime[1] ),lt_void )
	case 2
		return datetime( date( ls_datetime[1] ),time( ls_datetime[2] ) )
	case 3
		return datetime( date( ls_datetime[1]),time( ls_datetime[2] + ' ' + ls_datetime[3] ) )
end choose
		
return ldt_void
end function

on n_cst_conversio.create
call super::create
TriggerEvent( this, "constructor" )
end on

on n_cst_conversio.destroy
TriggerEvent( this, "destructor" )
call super::destroy
end on


forward
global type uo_appsrv_base from nonvisualobject
end type
end forward

global type uo_appsrv_base from nonvisualobject
event srvenabled ( ref boolean isenabled,  ref boolean dispenabled )
end type
global uo_appsrv_base uo_appsrv_base

type variables
// Variables para el control del estado del servidor
Boolean		Enabled = TRUE

end variables

forward prototypes
public function boolean isenabled ()
public subroutine srvenable (boolean penabled)
end prototypes

event srvenabled;// Por si queremos modificar el tipo Enabled (TRUE/FALSE) en función de algún tipo de estado, etc, etc,
// o al menos, para enterarnos que se ha modificado.

end event

public function boolean isenabled ();return this.Enabled

end function

public subroutine srvenable (boolean penabled);Boolean		DispEnabled

Enabled = pEnabled
DispEnabled = pEnabled

// Llamamos al evento del servidor por si quiere gestionar él mismo la acción.
this.Event srvEnabled(Enabled, DispEnabled)

//Integer
//for r=1 to UpperBound(Disparadors)
//	Disparadors[r].Enabled(DispEnabled)
//next

end subroutine

on uo_appsrv_base.create
TriggerEvent( this, "constructor" )
end on

on uo_appsrv_base.destroy
TriggerEvent( this, "destructor" )
end on


forward
global type w_msgbox_crm from window
end type
type p_information from picture within w_msgbox_crm
end type
type p_exclamation from picture within w_msgbox_crm
end type
type p_question from picture within w_msgbox_crm
end type
type cb_2 from commandbutton within w_msgbox_crm
end type
type cb_1 from commandbutton within w_msgbox_crm
end type
type cb_3 from commandbutton within w_msgbox_crm
end type
type cb_imprimir from commandbutton within w_msgbox_crm
end type
type cb_comentarios from commandbutton within w_msgbox_crm
end type
type mle_comentarios from multilineedit within w_msgbox_crm
end type
type gb_1 from groupbox within w_msgbox_crm
end type
type mle_titol from multilineedit within w_msgbox_crm
end type
type p_stopsign from picture within w_msgbox_crm
end type
type mle_text from multilineedit within w_msgbox_crm
end type
end forward

global type w_msgbox_crm from window
integer width = 2149
integer height = 820
boolean titlebar = true
string title = "SICCOD"
boolean controlmenu = true
windowtype windowtype = response!
long backcolor = 67108864
string icon = "codere.ico"
boolean center = true
event uepreopen ( )
event uegetparametros ( )
p_information p_information
p_exclamation p_exclamation
p_question p_question
cb_2 cb_2
cb_1 cb_1
cb_3 cb_3
cb_imprimir cb_imprimir
cb_comentarios cb_comentarios
mle_comentarios mle_comentarios
gb_1 gb_1
mle_titol mle_titol
p_stopsign p_stopsign
mle_text mle_text
end type
global w_msgbox_crm w_msgbox_crm

type variables
uo_appsrv_msgbox_attr	Parametres

Boolean						ib_Comentarios

end variables

forward prototypes
public function integer of_SetImprimir ()
public function integer of_setbotones ()
public function integer of_setdefaultbutton ()
public function integer of_seticono ()
public function integer of_settextos ()
public function integer of_setcomentarios ()
end prototypes

event uepreopen();// Construimos el mensaje
of_SetTextos()
of_SetIcono()
of_SetBotones()
of_SetDefaultButton()
of_SetImprimir()
of_SetComentarios()


end event

event uegetparametros();// Lectura de los parámetros de entrada ...
Parametres = Message.PowerObjectParm
end event

public function integer of_SetImprimir ();If Parametres.msgPrint Then
	cb_Imprimir.Enabled = True
Else
	cb_Imprimir.Enabled = False
End If

Return 1
end function

public function integer of_setbotones ();choose case Parametres.msgButtonStyle
	case Ok!
		cb_2.Visible = TRUE
		cb_2.tag = "1"
		cb_2.Text = "&Aceptar"
		
	case OkCancel!, YesNo!
		cb_1.Visible = TRUE
		cb_1.tag = "1"
		cb_1.Text = "&Sí"
		
		cb_3.Visible = TRUE
		cb_3.tag = "2"
		cb_3.Text = "&No"
	
	case YesNoCancel!
		cb_1.Visible = TRUE
		cb_1.tag = "1"
		cb_1.Text = "&Sí"
		
		cb_2.Visible = TRUE
		cb_2.tag = "2"
		cb_2.Text = "&No"
		
		cb_3.Visible = TRUE
		cb_3.tag = "3"
		cb_3.Text = "&Cancelar"
		
	case RetryCancel!
	case AbortRetryIgnore!
end choose


Return 1
end function

public function integer of_setdefaultbutton ();choose case Parametres.msgButtonStyle
	case Ok!
		cb_2.Default = True
		
	case OkCancel!, YesNo!
		If Parametres.msgDefault = 1 Then cb_1.Default = True
		If Parametres.msgDefault = 2 Then cb_2.Default = True
		
	case YesNoCancel!
		If Parametres.msgDefault = 1 Then cb_1.Default = True
		If Parametres.msgDefault = 2 Then cb_2.Default = True
		If Parametres.msgDefault = 3 Then cb_3.Default = True
		
	case RetryCancel!
	case AbortRetryIgnore!
end choose

If cb_1.Default Then cb_1.SetFocus()
If cb_2.Default Then cb_2.SetFocus()
If cb_3.Default Then cb_3.SetFocus()

Return 1

end function

public function integer of_seticono ();choose case Parametres.msgIcon
	case Information!
		p_information.Visible = TRUE
	case Question!
		p_question.Visible    = TRUE
	case StopSign!
		p_StopSign.Visible    = TRUE
	case Exclamation!
		p_Exclamation.Visible = TRUE
	case None!
end choose

Return 1
end function

public function integer of_settextos ();INTEGER	li_tab
STRING	ls_texto, ls_newText, ls_info
n_cst_string	lnv_string


// Servicio de multiidioma no activo
//PBD 05.10.2007 Comento esto para que mantenga siempre el título de la aplicación
//s This.Title     = Parametres.msgWinText
// Ponemos el título en la ventana
mle_titol.text = Parametres.msgTitol

// JGP Errores 090801 Modificado para tratar el array de textos
// Cambiar variables por valores en el TEXTO
ls_texto  = Parametres.msgText
IF UpperBound(Parametres.msgParamTexto[]) > 0 THEN
	ls_newText = ls_texto
	FOR li_tab = 1 TO UpperBound(Parametres.msgParamTexto[])
		ls_newText = lnv_String.Replace(ls_newText,'%'+TRIM(STRING(li_tab)),Parametres.msgParamTexto[li_tab])
	NEXT
ELSE
	ls_newText = ls_texto
END IF
// Ponemos el texto en pantalla
mle_text.text = ls_newText

// Cambiar variables por valores en el INFO
ls_info  = Parametres.msgInfo
IF UpperBound(Parametres.msgParamInfo[]) > 0 THEN
	ls_newText = ls_info
	FOR li_tab = 1 TO UpperBound(Parametres.msgParamInfo[])
		ls_newText = lnv_String.Replace(ls_newText,'%'+TRIM(STRING(li_tab)),Parametres.msgParamInfo[li_tab])
	NEXT
ELSE
	ls_newText = ls_info
END IF
// Ponemos el texto en pantalla
mle_comentarios.text = ls_newText
	

Return 1
end function

public function integer of_setcomentarios ();If Parametres.msgUserInput Then
	This.Resize ( This.Width, 1300)
	ib_Comentarios = True	
	cb_comentarios.Text = "Comentarios <<"
Else
	This.Resize ( This.Width, 800)
	ib_Comentarios = False
	cb_comentarios.Text = "Comentarios >>"
End If

// JGP Errores 090801
If NOT IsNull(Parametres.msgUserText) and IsNull(Parametres.msgInfo) Then 
	mle_comentarios.Text = Parametres.msgUserText
End If

Return 1
end function

on w_msgbox_crm.create
this.p_information=create p_information
this.p_exclamation=create p_exclamation
this.p_question=create p_question
this.cb_2=create cb_2
this.cb_1=create cb_1
this.cb_3=create cb_3
this.cb_imprimir=create cb_imprimir
this.cb_comentarios=create cb_comentarios
this.mle_comentarios=create mle_comentarios
this.gb_1=create gb_1
this.mle_titol=create mle_titol
this.p_stopsign=create p_stopsign
this.mle_text=create mle_text
this.Control[]={this.p_information,&
this.p_exclamation,&
this.p_question,&
this.cb_2,&
this.cb_1,&
this.cb_3,&
this.cb_imprimir,&
this.cb_comentarios,&
this.mle_comentarios,&
this.gb_1,&
this.mle_titol,&
this.p_stopsign,&
this.mle_text}
end on

on w_msgbox_crm.destroy
destroy(this.p_information)
destroy(this.p_exclamation)
destroy(this.p_question)
destroy(this.cb_2)
destroy(this.cb_1)
destroy(this.cb_3)
destroy(this.cb_imprimir)
destroy(this.cb_comentarios)
destroy(this.mle_comentarios)
destroy(this.gb_1)
destroy(this.mle_titol)
destroy(this.p_stopsign)
destroy(this.mle_text)
end on

event open;
This.Title = app.appName

This.Event ueGetParametros()

Event uepreopen()
end event

type p_information from picture within w_msgbox_crm
boolean visible = false
integer x = 50
integer y = 96
integer width = 174
integer height = 152
boolean bringtotop = true
boolean originalsize = true
string picturename = "Imatges\Information.bmp"
boolean focusrectangle = false
end type

type p_exclamation from picture within w_msgbox_crm
boolean visible = false
integer x = 50
integer y = 96
integer width = 174
integer height = 152
boolean bringtotop = true
boolean originalsize = true
string picturename = "Imatges\Exclamation.bmp"
boolean focusrectangle = false
end type

type p_question from picture within w_msgbox_crm
boolean visible = false
integer x = 50
integer y = 96
integer width = 146
integer height = 128
boolean bringtotop = true
boolean originalsize = true
string picturename = "Imatges\Question.bmp"
boolean focusrectangle = false
end type

type cb_2 from commandbutton within w_msgbox_crm
boolean visible = false
integer x = 832
integer y = 520
integer width = 306
integer height = 108
integer taborder = 20
boolean bringtotop = true
integer textsize = -8
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
string text = "2"
end type

event clicked;Parametres.msgReturnCode = Integer(This.Tag)
CloseWithReturn(Parent,Parametres)
end event

type cb_1 from commandbutton within w_msgbox_crm
boolean visible = false
integer x = 357
integer y = 520
integer width = 306
integer height = 108
integer taborder = 10
boolean bringtotop = true
integer textsize = -8
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
string text = "1"
end type

event clicked;Parametres.msgReturnCode = Integer(This.Tag)
CloseWithReturn(Parent,Parametres)
end event

type cb_3 from commandbutton within w_msgbox_crm
boolean visible = false
integer x = 1289
integer y = 520
integer width = 306
integer height = 108
integer taborder = 30
boolean bringtotop = true
integer textsize = -8
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
string text = "3"
end type

event clicked;Parametres.msgReturnCode = Integer(This.Tag)
CloseWithReturn(Parent,Parametres)
end event

type cb_imprimir from commandbutton within w_msgbox_crm
integer x = 1701
integer y = 64
integer width = 407
integer height = 108
integer taborder = 40
boolean bringtotop = true
integer textsize = -8
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
string text = "Imprimir"
end type

event clicked;Long		PrintJob

PrintJob = PrintOpen()
Parent.Print(PrintJob,1,1)
PrintClose(PrintJob)
end event

type cb_comentarios from commandbutton within w_msgbox_crm
integer x = 1701
integer y = 208
integer width = 407
integer height = 108
integer taborder = 50
boolean bringtotop = true
integer textsize = -8
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
string text = "Comentarios >>"
end type

event clicked;If ib_Comentarios Then
	Parent.Resize ( Parent.Width, 800)
	cb_comentarios.Text = "Comentarios >>"
	ib_Comentarios = False
	//Parametres.msgUserText = mle_comentarios.Text

Else
	Parent.Resize ( Parent.Width, 1300)
	cb_comentarios.Text = "Comentarios <<"
	ib_Comentarios = True
	//mle_comentarios.Text = Parametres.MsgUserText	
End If

end event

type mle_comentarios from multilineedit within w_msgbox_crm
integer x = 27
integer y = 740
integer width = 2057
integer height = 384
integer taborder = 60
boolean bringtotop = true
integer textsize = -8
integer weight = 400
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "MS Sans Serif"
long textcolor = 33554432
boolean displayonly = true
borderstyle borderstyle = stylelowered!
end type

type gb_1 from groupbox within w_msgbox_crm
integer x = 27
integer y = 676
integer width = 2057
integer height = 36
integer textsize = -8
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "MS Sans Serif"
long textcolor = 33554432
long backcolor = 67108864
end type

type mle_titol from multilineedit within w_msgbox_crm
integer x = 261
integer y = 40
integer width = 1390
integer height = 140
boolean bringtotop = true
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
long textcolor = 33554432
long backcolor = 67108864
boolean border = false
boolean displayonly = true
end type

type p_stopsign from picture within w_msgbox_crm
boolean visible = false
integer x = 50
integer y = 96
integer width = 174
integer height = 152
boolean originalsize = true
string picturename = "Imatges\Stopsign.bmp"
boolean focusrectangle = false
end type

type mle_text from multilineedit within w_msgbox_crm
integer x = 261
integer y = 192
integer width = 1390
integer height = 316
integer textsize = -8
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
long textcolor = 33554432
long backcolor = 67108864
boolean border = false
boolean displayonly = true
end type


forward
global type uo_appsrv_base_attr from nonvisualobject
end type
end forward

global type uo_appsrv_base_attr from nonvisualobject
event srvenabled ( ref boolean isenabled,  ref boolean dispenabled )
end type
global uo_appsrv_base_attr uo_appsrv_base_attr

type variables
// Variables para el control del estado del servidor
Boolean		Enabled = TRUE

end variables

forward prototypes
public function boolean isenabled ()
public subroutine srvenable (boolean penabled)
end prototypes

event srvenabled;// Por si queremos modificar el tipo Enabled (TRUE/FALSE) en función de algún tipo de estado, etc, etc,
// o al menos, para enterarnos que se ha modificado.

end event

public function boolean isenabled ();return this.Enabled

end function

public subroutine srvenable (boolean penabled);Boolean		DispEnabled

Enabled = pEnabled
DispEnabled = pEnabled

// Llamamos al evento del servidor por si quiere gestionar el mismo la acción.
this.Event srvEnabled(Enabled, DispEnabled)

//Integer
//for r=1 to UpperBound(Disparadors)
//	Disparadors[r].Enabled(DispEnabled)
//next

end subroutine

on uo_appsrv_base_attr.create
call super::create
TriggerEvent( this, "constructor" )
end on

on uo_appsrv_base_attr.destroy
TriggerEvent( this, "destructor" )
call super::destroy
end on


forward
global type uo_appsrv_msgbox from uo_appsrv_base
end type
end forward

global type uo_appsrv_msgbox from uo_appsrv_base
end type
global uo_appsrv_msgbox uo_appsrv_msgbox

type variables
// Valores por defecto del MsgBox
uo_appsrv_msgbox_attr	Defaults
uo_appsrv_msgbox_attr	Parms

// Window para mostrar los mensajes ...
String			WinMsg = "w_MsgBox"

// Parámetros (variables) en los mensajes
STRING	is_Param[], is_ParamVacio[]

String	is_ParamTexto[], is_ParamInfo[]

end variables

forward prototypes
public function integer messagebox (string msgtext)
public function integer messagebox (string msgtitle, string msgtext)
public function integer messageboxparm (any aa_parm01)
public function integer messagebox (string msgtitle, string msgtext, icon msgicon, button msgbutton, integer msgdefault, boolean msgprint, boolean msguserinput, string msgusertext, integer msgseveritat)
public function integer of_setparmtexto (string as_paramtexto[])
public subroutine initdefaults (ref uo_appsrv_msgbox_attr parametres)
public function integer messagebox (uo_appsrv_msgbox_attr parametres)
public function integer messagebox (string msgtitle, string msgtext, icon msgicon)
public function integer messagebox (string msgtitle, string msgtext, string msginfo, icon msgicon)
public function integer messagebox (string msgtitle, string msgtext, string msginfo)
public function integer messagebox (string msgtitle, string msgtext, icon msgicon, button msgbutton)
public function integer messagebox (string msgtitle, string msgtext, string msginfo, icon msgicon, button msgbutton)
public function integer messagebox (string msgtitle, string msgtext, icon msgicon, button msgbutton, integer msgdefault)
public function integer messagebox (string msgtitle, string msgtext, string msginfo, icon msgicon, button msgbutton, integer msgdefault)
public function integer messagebox (string msgtitle, string msgtext, icon msgicon, button msgbutton, integer msgdefault, boolean msgprint, boolean msguserinput, string msgusertext)
public function integer messagebox (string msgtitle, string msgtext, string msginfo, icon msgicon, button msgbutton, integer msgdefault, boolean msgprint, boolean msguserinput, string msgusertext)
public function integer messagebox (string msgwintitle, string msgtitle, string msgtext, icon msgicon, button msgbutton, integer msgdefault, boolean msgprint, boolean msguserinput, string msgusertext, integer msgseveritat)
public function integer messagebox (string msgwintitle, string msgtitle, string msgtext, string msginfo, icon msgicon, button msgbutton, integer msgdefault, boolean msgprint, boolean msguserinput, string msgusertext, integer msgseveritat)
public function integer of_setparminfo (string as_paraminfo[])
end prototypes

public function integer messagebox (string msgtext);// Muestra un MessageBox
return 1

end function

public function integer messagebox (string msgtitle, string msgtext);// Muestra el mensaje de error.
uo_appsrv_msgbox_attr		Parametres

Parametres.msgWinText		= Defaults.msgWinText
Parametres.msgTitol			= msgTitle
Parametres.msgText			= msgText
Parametres.msgIcon			= Defaults.msgIcon
Parametres.msgButtonStyle	= Defaults.msgButtonStyle
Parametres.msgDefault		= Defaults.msgDefault
Parametres.msgPrint			= Defaults.msgPrint
Parametres.msgUserInput	   = Defaults.msgUserInput
Parametres.msgUserText		= Defaults.msgUserText
Parametres.msgSeveritat		= Defaults.msgSeveritat

return this.MessageBox(Parametres)

end function

public function integer messageboxparm (any aa_parm01);is_Param[1] = STRING(aa_parm01)

RETURN 1
end function

public function integer messagebox (string msgtitle, string msgtext, icon msgicon, button msgbutton, integer msgdefault, boolean msgprint, boolean msguserinput, string msgusertext, integer msgseveritat);// Mostra el missatge d'error.
uo_appsrv_msgbox_attr		Parametres

Parametres.msgWinText		= Defaults.msgWinText
Parametres.msgTitol			= msgTitle
Parametres.msgText			= msgText
Parametres.msgIcon			= msgIcon
Parametres.msgButtonStyle	= msgButton
Parametres.msgDefault		= msgDefault
Parametres.msgPrint			= msgPrint
Parametres.msgUserInput	   = msgUserInput
Parametres.msgUserText		= msgUserText
Parametres.msgSeveritat		= msgSeveritat

return this.MessageBox(Parametres)

end function

public function integer of_setparmtexto (string as_paramtexto[]);// Recogemos los valores del texto
is_ParamTexto = as_ParamTexto

Return 1

end function

public subroutine initdefaults (ref uo_appsrv_msgbox_attr parametres);// Inicializamos con los valores por defecto.
Parametres.msgWinText		= Defaults.msgWinText
Parametres.msgIcon			= Defaults.msgIcon
Parametres.msgButtonStyle	= Defaults.msgButtonStyle
Parametres.msgSeveritat		= Defaults.msgSeveritat
Parametres.msgPrint			= Defaults.msgPrint
Parametres.msgUserInput	   = Defaults.msgUserInput
Parametres.msgUserText		= Defaults.msgUserText


end subroutine

public function integer messagebox (uo_appsrv_msgbox_attr parametres);// Muestra el mensaje de error.
//wc_base		WinBox
w_msgbox_crm	WinBox
INTEGER		li_tab
STRING		ls_newText
//uo_String	lnv_string

Parms.msgWinText			= Parametres.msgWinText
Parms.msgTitol				= Parametres.msgTitol
Parms.msgText				= Parametres.msgText
Parms.msginfo				= Parametres.msginfo
Parms.msgIcon				= Parametres.msgIcon
Parms.msgButtonStyle  	= Parametres.msgButtonStyle
Parms.msgDefault			= Parametres.msgDefault
Parms.msgPrint				= Parametres.msgPrint
Parms.msgUserInput		= Parametres.msgUserInput
Parms.msgUserText		   = Parametres.msgUserText
Parms.msgSeveritat		= Parametres.msgSeveritat
Parms.msgParams[]			= is_Param[]

// JGP. Errores 090801
Parms.msgParamTexto[]   = is_ParamTexto[]
Parms.msgParamInfo[]		= is_ParamInfo[]

OpenWithParm(WinBox, Parms, WinMsg)

//VC: 02/09/2004
//En caso de que la ventana de MessageBox haya sido cerrada 
//sin que el usuario haya seleccionado Yes o No, etc
//el retorno debe ser -1 (no 1, como estaba anteriormente), pues por defecto 
//siempre se realizará la opción del botón 1 = 1 return.
if not isValid(Message.PowerObjectParm) then return -1

Parms = Message.PowerObjectParm

// Inicializar parámetros
is_Param[] = is_ParamVacio[]

return Parms.msgReturnCode


// Eso es una chapuza. Dentro del objeto que contiene los atributos hay una función
// que se llama ofMessageBox y que es realmente quien muestra el mensaje.
// Si no customizamos la Window del MessageBox y únicamente traducimos o simplemente
// mostramos el mensaje, lo que pasa es que desde este objeto no podemos mostrar
// mensaje ya que la función ya está definida y entra en un bucle infinito hasta que PB falla.
// Para evitarlo defino la función dentro de otro objeto.
// return Parametres.ofMessageBox(Parametres.msgTitol, Parametres.msgText, Parametres.msgIcon, Parametres.msgButtonStyle, Parametres.msgDefault)

end function

public function integer messagebox (string msgtitle, string msgtext, icon msgicon);// Muestra el mensaje de error.
uo_appsrv_msgbox_attr		Parametres

Parametres.msgWinText		= Defaults.msgWinText
Parametres.msgTitol			= msgTitle
Parametres.msgText			= msgText
Parametres.msgIcon			= msgIcon
Parametres.msgButtonStyle	= Defaults.msgButtonStyle
Parametres.msgDefault		= Defaults.msgDefault
Parametres.msgPrint			= Defaults.msgPrint
Parametres.msgUserInput	= Defaults.msgUserInput
Parametres.msgUserText		= Defaults.msgUserText
Parametres.msgSeveritat		= Defaults.msgSeveritat

return this.MessageBox(Parametres)

end function

public function integer messagebox (string msgtitle, string msgtext, string msginfo, icon msgicon);// Muestra el mensaje de error.
uo_appsrv_msgbox_attr		Parametres

Parametres.msgWinText		= Defaults.msgWinText
Parametres.msgTitol			= msgTitle
Parametres.msgText			= msgText
Parametres.msginfo			= msginfo
Parametres.msgIcon			= msgIcon
Parametres.msgButtonStyle	= Defaults.msgButtonStyle
Parametres.msgDefault		= Defaults.msgDefault
Parametres.msgPrint			= Defaults.msgPrint
Parametres.msgUserInput		= Defaults.msgUserInput
Parametres.msgUserText		= Defaults.msgUserText
Parametres.msgSeveritat		= Defaults.msgSeveritat

return this.MessageBox(Parametres)

end function

public function integer messagebox (string msgtitle, string msgtext, string msginfo);// JGP Errores 090801
// Función nueva en la fecha
// Muestra el mensaje de error.
uo_appsrv_msgbox_attr		Parametres

Parametres.msgWinText		= Defaults.msgWinText
Parametres.msgTitol			= msgTitle
Parametres.msgText			= msgText
Parametres.msginfo			= msgInfo
Parametres.msgIcon			= Defaults.msgIcon
Parametres.msgButtonStyle	= Defaults.msgButtonStyle
Parametres.msgDefault		= Defaults.msgDefault
Parametres.msgPrint			= Defaults.msgPrint
Parametres.msgUserInput	   = Defaults.msgUserInput
Parametres.msgUserText		= Defaults.msgUserText
Parametres.msgSeveritat		= Defaults.msgSeveritat

return this.MessageBox(Parametres)

end function

public function integer messagebox (string msgtitle, string msgtext, icon msgicon, button msgbutton);// Muestra el mensaje de error.
uo_appsrv_msgbox_attr		Parametres

Parametres.msgWinText		= Defaults.msgWinText
Parametres.msgTitol			= msgTitle
Parametres.msgText			= msgText
Parametres.msgIcon			= msgIcon
Parametres.msgButtonStyle	= msgButton
Parametres.msgDefault		= Defaults.msgDefault
Parametres.msgPrint			= Defaults.msgPrint
Parametres.msgUserInput	= Defaults.msgUserInput
Parametres.msgUserText		= Defaults.msgUserText
Parametres.msgSeveritat		= Defaults.msgSeveritat

return this.MessageBox(Parametres)

end function

public function integer messagebox (string msgtitle, string msgtext, string msginfo, icon msgicon, button msgbutton);	// Muestra el mensaje de error.
uo_appsrv_msgbox_attr		Parametres

Parametres.msgWinText		= Defaults.msgWinText
Parametres.msgTitol			= msgTitle
Parametres.msgText			= msgText
Parametres.msginfo			= msginfo
Parametres.msgIcon			= msgIcon
Parametres.msgButtonStyle	= msgButton
Parametres.msgDefault		= Defaults.msgDefault
Parametres.msgPrint			= Defaults.msgPrint
Parametres.msgUserInput	= Defaults.msgUserInput
Parametres.msgUserText		= Defaults.msgUserText
Parametres.msgSeveritat		= Defaults.msgSeveritat

return this.MessageBox(Parametres)
end function

public function integer messagebox (string msgtitle, string msgtext, icon msgicon, button msgbutton, integer msgdefault);// Mostra el missatge d'error.
uo_appsrv_msgbox_attr		Parametres

Parametres.msgWinText		= Defaults.msgWinText
Parametres.msgTitol			= msgTitle
Parametres.msgText			= msgText
Parametres.msgIcon			= msgIcon
Parametres.msgButtonStyle	= msgButton
Parametres.msgDefault		= msgDefault
Parametres.msgPrint			= Defaults.msgPrint
Parametres.msgUserInput	   = Defaults.msgUserInput
Parametres.msgUserText		= Defaults.msgUserText
Parametres.msgSeveritat		= Defaults.msgSeveritat

return this.MessageBox(Parametres)

end function

public function integer messagebox (string msgtitle, string msgtext, string msginfo, icon msgicon, button msgbutton, integer msgdefault);// Mostra el missatge d'error.
uo_appsrv_msgbox_attr		Parametres

Parametres.msgWinText		= Defaults.msgWinText
Parametres.msgTitol			= msgTitle
Parametres.msgText			= msgText
Parametres.msginfo			= msginfo
Parametres.msgIcon			= msgIcon
Parametres.msgButtonStyle	= msgButton
Parametres.msgDefault		= msgDefault
Parametres.msgPrint			= Defaults.msgPrint
Parametres.msgUserInput	   = Defaults.msgUserInput
Parametres.msgUserText		= Defaults.msgUserText
Parametres.msgSeveritat		= Defaults.msgSeveritat

return this.MessageBox(Parametres)

end function

public function integer messagebox (string msgtitle, string msgtext, icon msgicon, button msgbutton, integer msgdefault, boolean msgprint, boolean msguserinput, string msgusertext);// Mostra el missatge d'error.
uo_appsrv_msgbox_attr		Parametres

Parametres.msgWinText		= Defaults.msgWinText
Parametres.msgTitol			= msgTitle
Parametres.msgText			= msgText
Parametres.msgIcon			= msgIcon
Parametres.msgButtonStyle	= msgButton
Parametres.msgDefault		= msgDefault
Parametres.msgPrint			= msgPrint
Parametres.msgUserInput	   = msgUserInput
Parametres.msgUserText		= msgUserText
Parametres.msgSeveritat		= Defaults.msgSeveritat

return this.MessageBox(Parametres)

end function

public function integer messagebox (string msgtitle, string msgtext, string msginfo, icon msgicon, button msgbutton, integer msgdefault, boolean msgprint, boolean msguserinput, string msgusertext);// Mostra el missatge d'error.
uo_appsrv_msgbox_attr		Parametres

Parametres.msgWinText		= Defaults.msgWinText
Parametres.msgTitol			= msgTitle
Parametres.msgText			= msgText
Parametres.msginfo			= msginfo
Parametres.msgIcon			= msgIcon
Parametres.msgButtonStyle	= msgButton
Parametres.msgDefault		= msgDefault
Parametres.msgPrint			= msgPrint
Parametres.msgUserInput	   = msgUserInput
Parametres.msgUserText		= msgUserText
Parametres.msgSeveritat		= Defaults.msgSeveritat

return this.MessageBox(Parametres)

end function

public function integer messagebox (string msgwintitle, string msgtitle, string msgtext, icon msgicon, button msgbutton, integer msgdefault, boolean msgprint, boolean msguserinput, string msgusertext, integer msgseveritat); // Mostra el missatge d'error.
uo_appsrv_msgbox_attr		Parametres

Parametres.msgWinText		= msgWinTitle
Parametres.msgTitol			= msgTitle
Parametres.msgText			= msgText
Parametres.msgIcon			= msgIcon
Parametres.msgButtonStyle	= msgButton
Parametres.msgDefault		= msgDefault
Parametres.msgPrint			= msgPrint
Parametres.msgUserInput 	= msgUserInput
Parametres.msgUserText		= msgUserText
Parametres.msgSeveritat		= msgSeveritat

return this.MessageBox(Parametres)

end function

public function integer messagebox (string msgwintitle, string msgtitle, string msgtext, string msginfo, icon msgicon, button msgbutton, integer msgdefault, boolean msgprint, boolean msguserinput, string msgusertext, integer msgseveritat); // Mostra el missatge d'error.
uo_appsrv_msgbox_attr		Parametres

Parametres.msgWinText		= msgWinTitle
Parametres.msgTitol			= msgTitle
Parametres.msgText			= msgText
Parametres.msginfo			= msginfo
Parametres.msgIcon			= msgIcon
Parametres.msgButtonStyle	= msgButton
Parametres.msgDefault		= msgDefault
Parametres.msgPrint			= msgPrint
Parametres.msgUserInput 	= msgUserInput
Parametres.msgUserText		= msgUserText
Parametres.msgSeveritat		= msgSeveritat

return this.MessageBox(Parametres)

end function

public function integer of_setparminfo (string as_paraminfo[]);// Recogemos los valores del texto
is_ParamInfo = as_ParamInfo

Return 1

end function

on uo_appsrv_msgbox.create
call super::create
end on

on uo_appsrv_msgbox.destroy
call super::destroy
end on

event constructor;
//App.srvSplash.of_SetTextoIniServicio("Iniciando servicio de MessageBox ...")

WinMsg = "w_msgbox_crm"

end event


forward
global type uo_appsrv_msgbox_attr from uo_appsrv_base_attr
end type
end forward

global type uo_appsrv_msgbox_attr from uo_appsrv_base_attr autoinstantiate
end type

type variables
// Atributos del MsgBox
Public:
String			msgWinText
String			msgTitol
String			msgText
Icon				msgIcon 
Button			msgButtonStyle 
Integer			msgDefault

// Otros atributos
Integer			msgSeveritat 
Boolean			msgPrint 
Boolean			msgUserInput 
String			msgUserText  

// Otros atributos del servicio (no se utilitzan)
DateTime			msgDateTime
String			msgUser

// Valores de retorno
Integer			msgReturnCode
Integer			msgButtonClicked

// Variables contenidas en el Mensaje
STRING			msgParams[]

// JGP. Errores 090801
String			msgParamTexto[], msgParamInfo[]
String 			msgInfo

end variables

on uo_appsrv_msgbox_attr.create
call super::create
end on

on uo_appsrv_msgbox_attr.destroy
call super::destroy
end on


forward
global type uo_appsrv_error from error
end type
end forward

global type uo_appsrv_error from error
event systemerror ( )
event type integer dberror ( string errtext )
event dwerror pbm_dwndberror
end type
global uo_appsrv_error uo_appsrv_error

type variables
// Ventana para mostrar los errores
// String		wSystemError = "w_SystemError_Autoresize"
String		wSystemError = "w_SystemError"
String		wDBError

// Ficheros con la descripción de los errores de Base de Datos.
String		ErrorINIFile = ""

// Indicador de si se tiene que mostrar la fila del error ...
Boolean		ShowErrorLine = TRUE

end variables

forward prototypes
public subroutine dberror (transaction ptrans, string errortext)
public function integer embsqlerror (string ptexte, string psqltipus, string paccio, transaction ptrans)
public function integer embsqlerror (string pTexte, string pSqltipus, string pAccio)
public function integer embsqlerror (string ptexte, string psqltipus)
public function integer embsqlerror (string ptexte)
public subroutine systemerror ()
public subroutine systemerror (string winerror)
public subroutine dberror (string errortext)
end prototypes

event systemerror;this.SystemError()

end event

event dberror;this.DBError(SQLCA, ErrText)
return 0

end event

event dwerror;// Tratamiento de errores de las Datawindows ...
String		MsgError = ""
String		TipusError, ErrorLineNumber = ""
Integer		Accio, iBeep, ReturnCode
Boolean		ValidacioOk

//If IsValid(App.SrvMIdioma) Then
//	if ShowErrorLine then 	
//		ErrorLineNumber = App.SrvMIdioma.traduir("En la fila") + " " + string(Row, "###,###")
//	End IF
//Else
	if ShowErrorLine then 	
		ErrorLineNumber = "En la fila" + " " + string(Row, "###,###")
	End IF
//End IF

if not isNull(this.ErrorINIFile) then
	MsgError = Profilestring(this.ErrorINIFile, string(SQLDBCode), "Msg", "-1")
//	If IsValid(App.SrvMIdioma) Then
//		// Leemos el Mensaje del Ficheri Error.iniLlegim el Missatge del Fitxer Error.ini
//		MsgError = App.SrvMIdioma.traduir(Profilestring(this.ErrorINIFile, string(SQLDBCode), "Msg", "-1"))
//
//		// Lleemos el tipo de error
//		TipusError = App.SrvMIdioma.traduir(Profilestring(this.ErrorINIFile, string(SQLDBCode), "Tipus", "-1"))
//	End IF	
	// Leemos la acción a ejecutar cuando se produzca el error de Error.ini
	Accio = ProfileInt(this.ErrorINIFile, string(SQLDBCode), "Accio", -1)
	
	// Leemos la duración del "beep" de Error.ini
	iBeep = ProfileInt(this.ErrorINIFile, string(SQLDBCode), "Beep", -1)

	Beep(iBeep)

	choose case Accio
		case 0		//	Continue
			if TipusError="" then
				// Do Not Display
				ReturnCode = 0
			else
				Messagebox(App.MsgBoxTitle, TipusError + "~r" + MsgError + "~r" + ErrorLineNumber)
				ValidacioOk=FALSE
				ReturnCode = 1
			end if
		case 1		//	Halt Close
			if TipusError="" then
				// Do Not Display
				ReturnCode = 0
			else
				Messagebox(App.MsgBoxTitle, TipusError + "~r" + MsgError + "~r" + ErrorLineNumber, StopSign!)
				ReturnCode = 1
			end if
		case else	// No existe
			// Do Not Display
			ReturnCode = 0
	end choose
else
	MessageBox(App.MsgBoxTitle, "(" + string(SQLDBCode) + ") " + SQLErrText + "~r" + ErrorLineNumber, StopSign!)
	ReturnCode = 1
end if

return ReturnCode

/// ?¿?¿?¿?¿?¿?¿?¿?¿?¿?¿ Hay que introducir el código para que inserte los errores SQL dentro del fichero de LOG
//string 	ls_filelog
//int		li_File
// 
//ls_FileLog = ProfileString(App.srvINI.INIFile,"parametres","fitxerlog","")
//li_File = FileOpen(ls_FileLog, LineMode!, Write!, LockWrite!, Append!)
//If li_File > 0 Then
//	iF FileWrite(li_File,"****************************************************************************") <=  0 tHEN
//		mEsSAGEbOX("","filewrite")
//	eND if
//	FileWrite(li_file,"Apl. "+App.AppName+" - "+String(Today(),"dd/mm/yyyy") + " - "+&
//				String(Now(),"hh:mm:ss"))	
//	If Len(Trim(p_ErrText)) > 0 Then
//		FileWrite(li_file,String(p_NumError)+" "+p_ErrText)
//	End IF
//	If Len(Trim(ls_MsgError)) > 0 Then
//		FileWrite(li_file,String(p_NumError)+" "+ls_MsgError)
//	End IF
//	If Len(Trim(error.Text)) > 0 Then
//		FileWrite(li_file,String(error.number)+" "+error.Text)
//		FileWrite(li_file,error.windowmenu)
//		FileWrite(li_file,error.object)
//		FileWrite(li_file,error.ObjectEvent)
//	End IF		
//	FileWrite(li_File,"****************************************************************************")
//	FileClose(li_File)
//End If
//
//If li_return = -1 Then
//	Halt Close 
//End IF
//Return li_Return

return 0

end event

public subroutine dberror (transaction ptrans, string errortext);// Determinamos el tipo de archivo en que se ha producido y lo mostramos ...
String		MsgString

if isNull(wDBError) or Trim(wDBError) = "" then
	if isValid(App.srvMsgBox) then
		MsgString = ""
		MsgString = "(" + string(pTrans.SQLCode) + ") " + pTrans.SQLErrText + "."

		App.srvMsgBox.MessageBox(ErrorText, MsgString, StopSign!, Ok!)
	else
		MsgString = ""
		MsgString = ErrorText + ": ~r~n(" + &
						string(pTrans.SQLCode) + ") " + pTrans.SQLErrText + "."
	
		MessageBox(App.MsgBoxTitle, MsgString, StopSign!, Ok!)
	end if
else
	Window		DBError

	Open(DBError, wDBError)
end if

end subroutine

public function integer embsqlerror (string ptexte, string psqltipus, string paccio, transaction ptrans);///////////////////////////////////////////////////////////////////
//
// 
String	ls_txt,ls_obs

ls_obs = "Errada "+"pSqltipus "+pSqlTipus+" pAccio "+pAccio+" Taula "+pTexte+&
			" DBMS "+pTrans.DBMS+ " SRV "+pTrans.serverName+" Codi "+String(pTrans.Sqlcode)
Choose Case MidA(Upper(pSqlTipus),1,1)
	Case "S"
		Choose Case MidA(Upper(pAccio),1,1)
			Case "S"
				Choose Case pTrans.Sqlcode
					Case 0
						Return pTrans.SqlCode
					Case 100
						ls_txt = "No existe el registro en el archivo de"
//						if isValid(App.srvMIdioma) then
//							App.srvMIdioma.traduir(ls_txt)
//							App.srvMIdioma.traduir(pTexte)
//						end if
						ls_txt = ls_txt + " " + pTexte
						MessageBox(App.MsgBoxTitle,ls_txt,StopSign!)
					Case Else
				End Choose
			Case "I"
			Case "U"
			Case Else
		End Choose
	Case "I"
		If pTrans.SqlCode <> 0 Then
			MessageBox(App.MsgBoxTitle,ls_txt,StopSign!)
		Else
			Return pTrans.Sqlcode
		End If	
	Case "U"
		If pTrans.SqlCode <> 0 Then
			MessageBox(App.MsgBoxTitle,ls_txt,StopSign!)
		Else
			Return pTrans.Sqlcode
		End If	
	Case "D"
		If pTrans.SqlCode <> 0 Then
			MessageBox(App.MsgBoxTitle,ls_txt,StopSign!)
		Else
			Return pTrans.Sqlcode
		End If	
	Case "E"
		If pTrans.SqlCode <> 0 Then
			MessageBox(App.MsgBoxTitle,ls_txt,StopSign!)
		Else
			Return pTrans.Sqlcode
		End If	
	Case Else	
End Choose
//If IsValid(App.srvLog) Then
//	App.srvLog.WriteLog(pTrans.SqlErrText,ls_obs)
//End IF
Return pTrans.Sqlcode
end function

public function integer embsqlerror (string pTexte, string pSqltipus, string pAccio);Return This.embSqlError(pTexte,pSqlTipus,pAccio,Sqlca)
end function

public function integer embsqlerror (string ptexte, string psqltipus);String	pAccio
Choose Case pSqlTipus
	Case ""
	Case Else
		pAccio = pSqlTipus
End Choose
Return This.embSqlError(pTexte,pSqlTipus,pAccio,Sqlca)
end function

public function integer embsqlerror (string ptexte);Return This.embSqlError(pTexte,"SELECT")
end function

public subroutine systemerror ();this.SystemError(wSystemError)

end subroutine

public subroutine systemerror (string winerror);// Determinamos el tipo de error que se ha producido y lo mostramos ...
String		MsgString

wSystemError = WinError

if isNull(wSystemError) or Trim(wSystemError) = "" then
	MsgString = "Se ha producido un error en la aplicación: ~r~n(" + &
						string(this.number) + ") " + this.text + &
						"~r~nWindow/Menu/Object = " + this.windowmenu + &
						"~r~nError Object/Control = " + this.object + &
						"~r~nScript = " + this.objectevent + &
						"~r~nLine in Script = " + string(this.line) + "~r~n" + &
						"~r~nQuiere continuar la ejecución de la aplicación?"

	if isValid(App.srvMsgBox) then
		if App.srvMsgBox.MessageBox("Error de ejecución", MsgString, Question!, YesNo!) = 2 then HALT CLOSE
	else
		if MessageBox(App.AppName, MsgString, Question!, YesNo!) = 2 then HALT CLOSE
	end if
else
	Window		SystemError
	Open(SystemError, wSystemError)
end if

end subroutine

public subroutine dberror (string errortext);// Determinamos el tipo de error que se ha producido y lo mostramos ...
this.DBError(SQLCA, ErrorText)

end subroutine

on uo_appsrv_error.create
call super::create
TriggerEvent( this, "constructor" )
end on

on uo_appsrv_error.destroy
TriggerEvent( this, "destructor" )
call super::destroy
end on

event constructor;// Inicializamos las variables.
wSystemError = "w_systemerror"
SetNull(wDBError)
SetNull(ErrorINIFile)

end event


forward
global type w_systemerror from window
end type
type cb_email from commandbutton within w_systemerror
end type
type cb_imprimir from commandbutton within w_systemerror
end type
type cb_abortar from commandbutton within w_systemerror
end type
type cb_continuar from commandbutton within w_systemerror
end type
type dw_1 from datawindow within w_systemerror
end type
end forward

global type w_systemerror from window
integer width = 2345
integer height = 980
windowtype windowtype = response!
long backcolor = 79741120
boolean center = true
event uepreopen ( )
cb_email cb_email
cb_imprimir cb_imprimir
cb_abortar cb_abortar
cb_continuar cb_continuar
dw_1 dw_1
end type
global w_systemerror w_systemerror

type variables
// Objeto que controla el log de los errores de la aplicacion
n_cst_do_logerroraplic		inv_LogError
end variables

event uepreopen;///////////////////////////////////////////////////////////////////////////////
// Objeto		: w_systemerror
//
//	Evento		: uepreopen
//
//	Comentarios	: Carga los valores del error
//			  
//
//	Modificaciones:
//		Autor		PBD			Comentarios
//		--------	--------		----------------------------------------------------
//		???		??????		Creación
//		PBD 		07/02/05		Tratamiento especial de (posible) caída de BBDD
///////////////////////////////////////////////////////////////////////////////
Long		Row
long		ll_error

/*
/*PBD 05.02.07*/
ll_error = Error.Number

IF ll_error = 94 AND pos(error.text,"CORBA_UNKNOWN") > 0 THEN /*Se ha perdido la conexión con la BBDD*/
	error.text = "Se ha perdido la conexión con la base de datos.("+error.text+")"
	/*Sólo permitimos cerrar la aplicación*/
	cb_continuar.Enabled = FALSE
	cb_imprimir.Enabled = FALSE
	cb_email.Enabled = FALSE
END IF
/*En el error 94, mantenemos esta parte por si está caída réplica pero
accede a sic2 a guardar el error o no es exactamente una caída de BBDD*/
/*FIN PBD 05.02.07*/
*/

// Guardamos en la BBDD el error producido
App.inv_Connect.of_CreateInstanceDatos(inv_LogError, "n_cst_do_logerroraplic")
inv_LogError.of_InsertarErrorAplicacion(App.AppName,App.Version,"CL",&
	Error.Number,Error.Line,Error.Text,Error.Object,Error.ObjectEvent,&
	Error.WindowMenu,App.srvUsers.Codi)
App.inv_Connect.of_DestroyInstanceDatos(inv_LogError)	

// Mostramos el error del sistema
Row = dw_1.InsertRow(0)

dw_1.SetItem(Row, "errornum", String(Error.Number) )
dw_1.SetItem(Row, "message",  Error.Text )
dw_1.SetItem(Row, "where",    Error.WindowMenu )
dw_1.SetItem(Row, "object",   Error.Object )
dw_1.SetItem(Row, "event",    Error.ObjectEvent )
dw_1.SetItem(Row, "line",     String(Error.Line) )



end event

on w_systemerror.create
this.cb_email=create cb_email
this.cb_imprimir=create cb_imprimir
this.cb_abortar=create cb_abortar
this.cb_continuar=create cb_continuar
this.dw_1=create dw_1
this.Control[]={this.cb_email,&
this.cb_imprimir,&
this.cb_abortar,&
this.cb_continuar,&
this.dw_1}
end on

on w_systemerror.destroy
destroy(this.cb_email)
destroy(this.cb_imprimir)
destroy(this.cb_abortar)
destroy(this.cb_continuar)
destroy(this.dw_1)
end on

event open;This.Event uePreOpen()
//This.Event Post ueInitServicios()
//This.Event Post ueInitDisparadores()
//This.Event Post uePostOpen()
end event

type cb_email from commandbutton within w_systemerror
integer x = 1806
integer y = 824
integer width = 352
integer height = 100
integer taborder = 70
integer textsize = -8
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
string text = "&Enviar E-Mail"
end type

event clicked;

Long					Row
String				ls_Asunto, ls_Mensaje, ls_MailTo[]
n_cst_mail			lnv_Mail

ls_Asunto   = "Mensaje de Error de la Aplicación - " + string(today()) + " - " + string(now(),"HH:MM:SS") 

Row = dw_1.GetRow()
ls_Mensaje  = "Error Número  : " + dw_1.GetItemString(Row, "errornum") + '~r~n'
ls_Mensaje += "Mensaje Error : " + dw_1.GetItemString(Row, "message")  + '~r~n'
ls_Mensaje += "Window/Menu   : " + dw_1.GetItemString(Row, "where")    + '~r~n'
ls_Mensaje += "Objeto        : " + dw_1.GetItemString(Row, "object")   + '~r~n'
ls_Mensaje += "Evento        : " + dw_1.GetItemString(Row, "event")    + '~r~n'
ls_Mensaje += "Linea Número  : " + dw_1.GetItemString(Row, "line")

ls_Mailto[1] = "Manel Pérez"
ls_Mailto[2] = "Manel2"

lnv_Mail.of_EnviarCorreu(ls_Asunto, ls_Mensaje, ls_MailTo)

end event

type cb_imprimir from commandbutton within w_systemerror
integer x = 1216
integer y = 824
integer width = 352
integer height = 100
integer taborder = 70
integer textsize = -8
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
string text = "&Imprimir"
end type

event clicked;// Imprimimos el error...
String 		FName, Line
String 		Path
Integer		FN, PRT

Path="C:\Temp"
FName = Path + "system.err"
FN  = FileOpen(FName, LineMode!, Write!, LockReadWrite!, Replace!)
PRT = PrintOpen("System Error")
if FN = -1 then 
	if isValid(App.srvMsgBox) then
		App.srvMsgBox.MessageBox("Error en la impresión:", "No se puede abrir el fichero de impresión " + FName)
	else
		MessageBox(App.MsgBoxTitle, "No se puede abrir el fichero de impresión " + FName)
	end if
	return
end if

FileWrite(FN,"Mensaje de Error de la Aplicación - "+string(today())+" - "+string(now(),"HH:MM:SS"))
print(prt,"Mensaje de Error de la Aplicación - "+string(today())+" - "+string(now(),"HH:MM:SS"))
filewrite(fn," ")
print(prt," ")
line = "Error Número  : " + dw_1.GetItemString(1, 1)
filewrite(fn,line)
print(prt,line)
line = "Mensaje Error : " + dw_1.GetItemString(1, 2)
filewrite(fn,line)
print(prt,line)
line = "Window/Menu   : " + dw_1.GetItemString(1, 3)
filewrite(fn,line)
print(prt,line)
line = "Objeto        : " + dw_1.GetItemString(1, 4)
filewrite(fn,line)
print(prt,line)
line = "Evento        : " + dw_1.GetItemString(1, 5)
filewrite(fn,line)
print(prt,line)
line = "Linea Número  : " + dw_1.GetItemString(1, 6)
filewrite(fn,line)
print(prt,line)
fileclose(fn)
printclose(prt)
return

end event

type cb_abortar from commandbutton within w_systemerror
integer x = 626
integer y = 824
integer width = 352
integer height = 100
integer taborder = 60
integer textsize = -8
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
string text = "&Abortar"
end type

event clicked;crm_siccod.il_codretorno = crm_siccod.II_ERROR_NO_CONTROLADO
Halt Close
end event

type cb_continuar from commandbutton within w_systemerror
integer x = 37
integer y = 824
integer width = 352
integer height = 100
integer taborder = 50
integer textsize = -8
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
string text = "&Continuar"
end type

event clicked;Close(Parent)
end event

type dw_1 from datawindow within w_systemerror
integer x = 14
integer y = 4
integer width = 2309
integer height = 784
string dataobject = "d_system_error"
boolean border = false
end type


release 7;
datawindow(units=0 timer_interval=0 color=16777215 processing=0 HTMLDW=no print.documentname="" print.orientation = 0 print.margin.left = 0 print.margin.right = 0 print.margin.top = 0 print.margin.bottom = 0 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no )
header(height=120 color="128" )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=616 color="536870912" )
table(column=(type=char(10) updatewhereclause=no name=errornum dbname="enum" )
 column=(type=char(255) updatewhereclause=no name=message dbname="Message" )
 column=(type=char(255) updatewhereclause=no name=where dbname="where" )
 column=(type=char(255) updatewhereclause=no name=object dbname="Object" )
 column=(type=char(255) updatewhereclause=no name=event dbname="event" )
 column=(type=char(255) updatewhereclause=no name=line dbname="line" )
 )
text(band=detail alignment="1" text="Descripción:" border="0" color="128" x="37" y="108" height="60" width="379"  name=message_t  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="1" text="Window/Menu:" border="0" color="128" x="32" y="300" height="60" width="384"  name=where_t  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="1" text="Objecto:" border="0" color="128" x="37" y="380" height="60" width="379"  name=object_t  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="1" text="Evento:" border="0" color="128" x="37" y="460" height="60" width="379"  name=event_t  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="1" text="Linea Número :" border="0" color="128" x="37" y="540" height="60" width="379"  name=line_t  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=1 alignment="0" tabsequence=32766 border="0" color="0" x="439" y="32" height="60" width="1742" format="[general]"  name=errornum edit.limit=0 edit.case=any edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=2 alignment="0" tabsequence=32766 border="0" color="0" x="439" y="108" height="172" width="1742" format="[general]"  name=message edit.limit=0 edit.case=any edit.autoselect=yes edit.autovscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=3 alignment="0" tabsequence=32766 border="0" color="0" x="439" y="300" height="60" width="1742" format="[general]"  name=where edit.limit=0 edit.case=any edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=4 alignment="0" tabsequence=32766 border="0" color="0" x="439" y="380" height="60" width="1742" format="[general]"  name=object edit.limit=0 edit.case=any edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=5 alignment="0" tabsequence=32766 border="0" color="0" x="439" y="460" height="60" width="1742" format="[general]"  name=event edit.limit=0 edit.case=any edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=6 alignment="0" tabsequence=32766 border="0" color="0" x="439" y="540" height="60" width="1742" format="[general]"  name=line edit.limit=0 edit.case=any edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="1" text="Número Error:" border="0" color="128" x="37" y="28" height="60" width="379"  name=enum_t  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header alignment="2" text="Error de Aplicación" border="0" color="16777215" x="37" y="24" height="88" width="2144"  name=t_title  font.face="Tahoma" font.height="-12" font.weight="700"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" )

forward
global type n_cst_mail from nonvisualobject
end type
end forward

global type n_cst_mail from nonvisualobject autoinstantiate
end type

type variables
protectedwrite string errorText

end variables

forward prototypes
public function integer of_enviarcorreu (string as_assumpte, string as_text)
public function integer of_enviarcorreu (string as_assumpte, string as_text, string as_receptor[], string as_copia[])
public function integer of_enviarcorreu (string as_assumpte, string as_text, string as_receptor[])
public function integer of_enviararxiu (string as_assumpte, string as_text, string as_arxiu[])
public function integer of_enviararxiu (string as_assumpte, string as_text, string as_arxiu[], string as_receptor[], string as_copia[])
public function integer of_enviararxiu (string as_assumpte, string as_text, string as_arxiu[], string as_receptor[])
public function integer of_enviarcorreu (string as_assumpte, string as_text, string as_arxiu[], string as_receptor[], string as_copia[])
end prototypes

public function integer of_enviarcorreu (string as_assumpte, string as_text);//////////////////////////////////////////////////////////////////////////////
//
//	of_enviarCorreu()
//
//	argumentos:	string as_assumpte, asunto del correo
//					string as_text, texto del correo
//	retorna:  		integer, >0 correcto, =0 argument inválido, <0 error
//
//	descripción:
//	enviar un texto por correo electrónico.
//	Se abre el diálogo estándar de enviar correo
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
string ls_void[]

return of_enviarcorreu( as_assumpte,as_text,ls_void,ls_void,ls_void )

end function

public function integer of_enviarcorreu (string as_assumpte, string as_text, string as_receptor[], string as_copia[]);//////////////////////////////////////////////////////////////////////////////
//
//	of_enviarCorreu()
//
//	arguments:	string as_assumpte, asunto del correo
//					string as_text, texto del correo
//					string as_receptor[], lista de receptores
//					string as_copia[], lista de recepores de copia
//	retorn:  		integer, >0 correcto, =0 argumento inválido, <0 error
//
//	descripción:
//	enviar un correo por correo electrónico a una lista de receptores
//	con copia para otra lista de receptores
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
string ls_void[]

return of_enviarcorreu( as_assumpte,as_text,ls_void,as_receptor,as_copia )

end function

public function integer of_enviarcorreu (string as_assumpte, string as_text, string as_receptor[]);//////////////////////////////////////////////////////////////////////////////
//
//	of_enviarCorreu()
//
//	arguments:	string as_assumpte, asunto del correo
//					string as_text, texto del correo
//					string as_receptor[], lista de receptores
//	retorn:  		integer, >0 correcto, =0 argumento inválido, <0 error
//
//	descripción:
//	enviar un texto por correo electrónico a una lista de receptores
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
string ls_void[]

return of_enviarcorreu( as_assumpte,as_text,ls_void,as_receptor,ls_void )

end function

public function integer of_enviararxiu (string as_assumpte, string as_text, string as_arxiu[]);//////////////////////////////////////////////////////////////////////////////
//
//	of_enviarCorreu()
//
//	arguments:	string as_assumpte, asunto del correo
//					string as_text, texto del correo
//					string as_arxiu[], lista de archivos a adjuntar
//	retorn:  		integer, >0 correcto, =0 argumento inválido, <0 error
//
//	descripción:
//	enviar un correo con texto y una lista de archivos adjuntos
//	Se abre el diálogo estándar para pedir receptores y copia
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
string ls_void[]

return of_enviarcorreu( as_assumpte,as_text,as_arxiu,ls_void,ls_void )

end function

public function integer of_enviararxiu (string as_assumpte, string as_text, string as_arxiu[], string as_receptor[], string as_copia[]);//////////////////////////////////////////////////////////////////////////////
//
//	of_enviarCorreu()
//
//	arguments:	string as_assumpte, asunto del correo
//					string as_text, texto del correo
//					string as_arxiu[], lista de archivos a adjuntar
//					string as_receptor[], lista de receptores
//					string as_copia[], lista de receptores de copia
//	retorn:  		integer, >0 correcto, =0 argumento inválido, <0 error
//
//	descripción:
//	enviar un correo con una lista de archivos adjuntos a la lista de
//	receptores con copia para la segunda lista
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
return of_enviarcorreu( as_assumpte,as_text,as_arxiu,as_receptor,as_copia )

end function

public function integer of_enviararxiu (string as_assumpte, string as_text, string as_arxiu[], string as_receptor[]);//////////////////////////////////////////////////////////////////////////////
//
//	of_enviarCorreu()
//
//	arguments:	string as_assumpte, asumpto del correo
//					string as_text, texto del correo
//					string as_arxiu[], lista de archivos a adjuntar
//					string as_receptor[], lista de receptores
//	retorn:  		integer, >0 correcto, =0 argumento inválido, <0 error
//
//	descripción:
//	enviar un correo con texto y una lista de archivos adjuntos a una
//	lista de receptores
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
string ls_void[]

return of_enviarcorreu( as_assumpte,as_text,as_arxiu,as_receptor,ls_void )

end function

public function integer of_enviarcorreu (string as_assumpte, string as_text, string as_arxiu[], string as_receptor[], string as_copia[]);//////////////////////////////////////////////////////////////////////////////
//
//	of_enviarCorreu()
//
//	arguments:	string as_assumpte, asunto del correo
//					string as_text, texto del correo
//					string as_arxiu[], lista de archivos a adjuntar
//					string as_receptor[], lista de receptores
//					string as_copia[], lista de receptores de copia
//	retorn:  		integer, >0 correcto, =0 argumento inválido, <0 error
//
//	descripción :
//	enviar un correo con posibilidad de archivos adjuntos y listas de
//	receptores y copias
//
//////////////////////////////////////////////////////////////////////////////
//
//	mjl	oct.98	primera versió
//
//////////////////////////////////////////////////////////////////////////////
mailSession mSes
mailMessage mMsg
mailReturnCode mRet
mailFileDescription mAttach[]
mailRecipient mRecip[]
integer li_i,li_c,li_u
string ls_error
integer li_rc

mSes = create mailSession

mRet = mSes.mailLogon(MailNewSession!)

if mRet = mailReturnSuccess! then
	mMsg.subject  = as_assumpte
	mMsg.noteText = as_text

	li_u = upperBound( as_arxiu )
	
	if li_u > 0 then
		for li_i=1 to li_u
			mAttach[li_i].filetype = mailAttach!
			mAttach[li_i].filename = as_arxiu[li_i]
			mAttach[li_i].pathname = as_arxiu[li_i]
			mAttach[li_i].position = -1
		next
		
		mMsg.AttachmentFile = mAttach
	end if
	
	if upperBound( as_receptor ) + upperBound( as_copia ) > 0 then
		li_c = 1
		li_u = upperBound( as_receptor )
		
		for li_i = 1 to li_u
			mRecip[li_c].name = as_receptor[li_i]
			mRecip[li_c].recipientType = mailTo!
			
			if mSes.mailResolveRecipient( mRecip[li_c] ) = mailReturnSuccess! then
				li_c ++
			else
				mRet = mailReturnFailure!
				ls_error = ls_error + as_receptor[li_i] + '~r~n'
			end if
		next
		
		li_u = upperBound( as_copia )

		for li_i = 1 to li_u
			mRecip[li_c].name = as_copia[li_i]
			mRecip[li_c].recipientType = mailCC!
			
			if mSes.mailResolveRecipient( mRecip[li_c] ) = mailReturnSuccess! then
				li_c ++
			else
				mRet = mailReturnFailure!
				ls_error = ls_error + as_copia[li_i] + '~r~n'
			end if
		next

		if mRet =  mailReturnSuccess! then
			mMsg.recipient = mRecip
		else
			messageBox( 'Correo electrónico','No se ha podido resolver la dirección de correo electrónico para los siguientes receptores:~r~n' + ls_error, Information! )
			mRet = mSes.mailAddress( mMsg )
		end if			
	else
		mRet = mSes.mailAddress( mMsg )
	end if
	
	if mRet = mailReturnSuccess! then
		mRet = mSes.mailSend(mMsg)
	end if
end if

if mRet <> mailReturnSuccess! then
	li_rc = -1
	
	choose case mRet
		case mailReturnAccessDenied!
			errorText = 'Acceso denegado'
		case mailReturnAttachmentNotFound!
			errorText = 'Archivo adjuntado no localizado'
		case mailReturnAttachmentOpenFailure!
			errorText = 'Fallo en la apertura del archivo adjuntado'
		case mailReturnAttachmentWriteFailure!
			errorText = 'Fallo en la escritura del archivo adjuntado'
		case mailReturnDiskFull!
			errorText = 'Disco lleno'
		case mailReturnFailure!
			errorText = 'Fallo'
		case mailReturnInsufficientMemory!
			errorText = 'Memoria insuficiente'
		case mailReturnInvalidMessage!
			errorText = 'Mensaje inválido'
		case mailReturnLoginFailure!
			errorText = 'Fallo en conexión'
		case mailReturnMessageInUse!
			errorText = 'Mensaje en uso'
		case mailReturnNoMessages!
			errorText = 'No hay mensajes a enviar'
		case mailReturnTextTooLarge!
			errorText = 'Texto demasiado largo'
		case mailReturnTooManyFiles!
			errorText = 'Demasiados archivos'
		case mailReturnTooManyRecipients!
			errorText = 'Demasiados receptores del mensaje'
		case mailReturnTooManySessions!
			errorText = 'Demasiadas sesiones abiertas'
		case mailReturnUnknownRecipient!
			errorText = 'Receptor(es) desconocido(s)'
		case mailReturnUserAbort!
			errorText = 'Proceso abortado por el usuario'
	
		case else
			errorText = 'Error general'
	end choose
else
	li_rc = 1
end if

mSes.mailLogoff()

destroy mSes

return li_rc
end function

on n_cst_mail.create
call super::create
end on

on n_cst_mail.destroy
call super::destroy
end on


release 7;
datawindow(units=0 timer_interval=0 color=16777215 processing=0 HTMLDW=no print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=92 color="536870912" )
table(column=(type=char(20) updatewhereclause=no name=entorno dbname="entorno" )
 column=(type=char(20) updatewhereclause=no name=password dbname="password" )
 column=(type=char(20) updatewhereclause=no name=port dbname="port" )
 column=(type=char(20) updatewhereclause=no name=server dbname="server" )
 column=(type=char(20) updatewhereclause=no name=user dbname="user" )
 )
column(band=detail id=1 alignment="0" tabsequence=32766 border="0" color="0" x="114" y="8" height="64" width="818" format="[general]"  name=entorno edit.limit=0 edit.case=any edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=5 alignment="0" tabsequence=32766 border="0" color="0" x="2770" y="132" height="76" width="549" format="[general]"  name=user edit.limit=0 edit.case=any edit.autoselect=yes edit.autohscroll=yes  font.face="Arial" font.height="-10" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=4 alignment="0" tabsequence=32766 border="0" color="0" x="2217" y="132" height="76" width="549" format="[general]"  name=server edit.limit=0 edit.case=any edit.autoselect=yes edit.autohscroll=yes  font.face="Arial" font.height="-10" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=3 alignment="0" tabsequence=32766 border="0" color="0" x="1664" y="132" height="76" width="549" format="[general]"  name=port edit.limit=0 edit.case=any edit.autoselect=yes edit.autohscroll=yes  font.face="Arial" font.height="-10" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=2 alignment="0" tabsequence=32766 border="0" color="0" x="1111" y="132" height="76" width="549" format="[general]"  name=password edit.limit=0 edit.case=any edit.autoselect=yes edit.autohscroll=yes  font.face="Arial" font.height="-10" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
bitmap(band=detail filename="Imatges\ent_dib.bmp" x="23" y="8" height="64" width="55" border="0"  name=p_1 )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" )

forward
global type w_multiserver from window
end type
type cb_cancelar from commandbutton within w_multiserver
end type
type cb_aceptar from commandbutton within w_multiserver
end type
type dw_multiserver from datawindow within w_multiserver
end type
end forward

global type w_multiserver from window
integer x = 1102
integer y = 400
integer width = 1367
integer height = 632
string title = "Entorno de Conexión"
windowtype windowtype = response!
long backcolor = 67108864
boolean center = true
cb_cancelar cb_cancelar
cb_aceptar cb_aceptar
dw_multiserver dw_multiserver
end type
global w_multiserver w_multiserver

type variables
// Número de la fila seleccionada
int ii_filaselec = 0

// Recoge la operación de Aceptar o Cancelar
Boolean ib_ok = False
end variables

on w_multiserver.create
this.cb_cancelar=create cb_cancelar
this.cb_aceptar=create cb_aceptar
this.dw_multiserver=create dw_multiserver
this.Control[]={this.cb_cancelar,&
this.cb_aceptar,&
this.dw_multiserver}
end on

on w_multiserver.destroy
destroy(this.cb_cancelar)
destroy(this.cb_aceptar)
destroy(this.dw_multiserver)
end on

event uepreopen;////////////////////////////////////////////////////////////
//	
//	Evento:	uepreopen
//
//	Return:  None
//
//
//	Objetivo: Prepara los datos a presentar en pantalla
//
//	Control de cambios:
//
//	Modificación				Fecha				Autor
//-----------------------------------------------------
//	Si sólo hay un perfil que salte directamente	a él							
//									08.07.2004		PBD
//
//////////////////////////////////////////////////////////////

// Inicializar el datawindow dw_multiserver.


if dw_multiserver.RowCount() > 0 then 
	dw_multiserver.SetRow(1)
	dw_multiserver.SelectRow(1,True)
	ii_filaselec = 1
end if

//PBD 2004.07.08
IF dw_multiserver.RowCount()=1 THEN
	THIS.visible = FALSE
	cb_aceptar.Post Event Clicked()
END IF
//FIN PBD 2004.07.08

end event

event open;////////////////////////////////////////////////////////////
//	
//	Evento:	Open
//
//	Return:  None
//
//
//	Objetivo: Prepara los datos a presentar en pantalla
//
//	Control de cambios:
//
//	Modificación				Fecha				Autor
//-----------------------------------------------------
//	Si sólo hay un perfil que salte directamente	a él							
//									08.07.2004		PBD
//
//////////////////////////////////////////////////////////////
string			ls_mensaje, ls_entorno
integer		li_entorno, li_pos

ls_mensaje = Message.Stringparm

do while ls_mensaje <> ""
	li_pos = pos(ls_mensaje, "|")
	IF li_pos > 0 THEN
		ls_entorno = mid(ls_mensaje, 1, li_pos -1)
		li_entorno = dw_multiserver.InsertRow(0)
		dw_multiserver.SetItem(li_entorno, "entorno", ls_entorno)
		ls_mensaje = mid(ls_mensaje, li_pos +1)
	ELSE
		ls_mensaje = ""
	END IF
loop

if dw_multiserver.RowCount() > 0 then 
	dw_multiserver.SetRow(1)
	dw_multiserver.SelectRow(1,True)
	ii_filaselec = 1
end if
SetFocus()
end event

type cb_cancelar from commandbutton within w_multiserver
integer x = 969
integer y = 140
integer width = 343
integer height = 92
integer taborder = 30
integer textsize = -8
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
string text = "&Cancelar"
end type

event clicked;ib_ok = False

Close(Parent)
end event

type cb_aceptar from commandbutton within w_multiserver
integer x = 969
integer y = 32
integer width = 343
integer height = 92
integer taborder = 20
integer textsize = -8
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
string text = "&Aceptar"
boolean default = true
end type

event clicked;//*------------------------------------------------------------------------*//
//	Evento: 			Clicked!.
//	Comentarios:	Obtiene los valores del entorno sellecionado.
//	Parámetros: 	Nada.
//					  
//	Retorno	: 		(Int) 1 Ok.		
//										  
//	Modificaciones:
//		Fecha			Autor			Comentarios
//		-----------	--------		-----------------------------------------
//		26/12/01		RJL			Creación	
//*-----------------------------------------------------------------------*//
string			ls_entorno
if dw_multiserver.RowCount() < 1 then 
	ib_ok = False
else
	ib_ok = True
end if

if ib_ok = FALSE THEN ii_filaselec = 0

CloseWithReturn(PARENT, ii_filaselec)
	

end event

type dw_multiserver from datawindow within w_multiserver
integer x = 41
integer y = 32
integer width = 873
integer height = 480
integer taborder = 10
string title = "none"
string dataobject = "d_multiserver"
boolean vscrollbar = true
boolean livescroll = true
borderstyle borderstyle = stylelowered!
end type

event rowfocuschanging;// Deselecciona la fila "marcada".
This.SelectRow(currentrow, False)

// Selecciona la fila "clickeda".
This.SelectRow(newrow, True)

// Actualizando el valor de la fila seleccionada.
ii_filaselec = newrow
end event

event doubleclicked;cb_aceptar.event clicked()
end event









































































































forward
global type w_mnt_response_shared from w_mnt_response
end type
end forward

global type w_mnt_response_shared from w_mnt_response
end type
global w_mnt_response_shared w_mnt_response_shared

on w_mnt_response_shared.create
call super::create
end on

on w_mnt_response_shared.destroy
call super::destroy
end on


forward
global type m_informe from m_main
end type
type m_opciones from menu within m_informe
end type
type m_imprimir from menu within m_opciones
end type
type m_opciones from menu within m_informe
m_imprimir m_imprimir
end type
global type m_informe from m_main
m_opciones m_opciones
end type
end forward

global type m_informe from m_main
m_opciones m_opciones
end type
global m_informe m_informe

on m_informe.create
m_informe=this
call super::create
this.m_opciones=create m_opciones
this.Item[UpperBound(this.Item)+1]=this.m_opciones
end on

on m_informe.destroy
call super::destroy
destroy(this.m_opciones)
end on

type m_01 from m_main`m_01 within m_informe
end type

on m_01.create
call super::create
end on

on m_01.destroy
call super::destroy
end on

type m_0111 from m_main`m_0111 within m_01
end type

on m_0111.create
call super::create
end on

on m_0111.destroy
call super::destroy
end on

type m_0112 from m_main`m_0112 within m_01
end type

on m_0112.create
call super::create
end on

on m_0112.destroy
call super::destroy
end on

type m_0113 from m_main`m_0113 within m_01
end type

on m_0113.create
call super::create
end on

on m_0113.destroy
call super::destroy
end on

type m_parametrosentrada from m_main`m_parametrosentrada within m_01
end type

on m_parametrosentrada.create
call super::create
end on

on m_parametrosentrada.destroy
call super::destroy
end on

type m_0117 from m_main`m_0117 within m_01
end type

on m_0117.create
call super::create
end on

on m_0117.destroy
call super::destroy
end on

type m_0118 from m_main`m_0118 within m_01
end type

on m_0118.create
call super::create
end on

on m_0118.destroy
call super::destroy
end on

type m_finalizar from m_main`m_finalizar within m_01
end type

on m_finalizar.create
call super::create
end on

on m_finalizar.destroy
call super::destroy
end on

type m_03 from m_main`m_03 within m_informe
end type

on m_03.create
call super::create
end on

on m_03.destroy
call super::destroy
end on

type m_0301 from m_main`m_0301 within m_03
end type

on m_0301.create
call super::create
end on

on m_0301.destroy
call super::destroy
end on

type m_0302 from m_main`m_0302 within m_03
end type

on m_0302.create
call super::create
end on

on m_0302.destroy
call super::destroy
end on

type m_0310 from m_main`m_0310 within m_03
end type

on m_0310.create
call super::create
end on

on m_0310.destroy
call super::destroy
end on

type m_0311 from m_main`m_0311 within m_03
end type

on m_0311.create
call super::create
end on

on m_0311.destroy
call super::destroy
end on

type m_0312 from m_main`m_0312 within m_03
end type

on m_0312.create
call super::create
end on

on m_0312.destroy
call super::destroy
end on

type m_0313 from m_main`m_0313 within m_03
end type

on m_0313.create
call super::create
end on

on m_0313.destroy
call super::destroy
end on

type m_0314 from m_main`m_0314 within m_03
end type

on m_0314.create
call super::create
end on

on m_0314.destroy
call super::destroy
end on

type m_02 from m_main`m_02 within m_informe
end type

on m_02.create
call super::create
end on

on m_02.destroy
call super::destroy
end on

type m_0201 from m_main`m_0201 within m_02
end type

on m_0201.create
call super::create
end on

on m_0201.destroy
call super::destroy
end on

type m_0202 from m_main`m_0202 within m_02
end type

on m_0202.create
call super::create
end on

on m_0202.destroy
call super::destroy
end on

type m_0203 from m_main`m_0203 within m_02
end type

on m_0203.create
call super::create
end on

on m_0203.destroy
call super::destroy
end on

type m_0204 from m_main`m_0204 within m_02
end type

on m_0204.create
call super::create
end on

on m_0204.destroy
call super::destroy
end on

type m_0205 from m_main`m_0205 within m_02
end type

on m_0205.create
call super::create
end on

on m_0205.destroy
call super::destroy
end on

type m_0206 from m_main`m_0206 within m_02
end type

on m_0206.create
call super::create
end on

on m_0206.destroy
call super::destroy
end on

type m_configurartools from m_main`m_configurartools within m_02
end type

on m_configurartools.create
call super::create
end on

on m_configurartools.destroy
call super::destroy
end on

type m_opciones from menu within m_informe
m_imprimir m_imprimir
end type

on m_opciones.create
call super::create
this.text = "Opciones"
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
this.m_imprimir=create m_imprimir
this.Item[UpperBound(this.Item)+1]=this.m_imprimir
end on

on m_opciones.destroy
call super::destroy
destroy(this.m_imprimir)
end on

type m_imprimir from menu within m_opciones
end type

on m_imprimir.create
call super::create
this.text = "Imprimir"
this.menustyle = contemporarymenu!
this.menutextcolor = 134217735
this.menubackcolor = 16777215
this.menuhighlightcolor = 33488896
this.textsize = 8
this.weight = 700
this.facename = "Tahoma"
this.titlebackcolor = 33521792
this.bitmapbackcolor = 134217731
this.menubitmaps = true
this.titlegradient = true
this.toolbarstyle = contemporarytoolbar!
this.toolbartextcolor = 134217746
this.toolbarbackcolor = 15780518
this.toolbarhighlightcolor = 33488896
this.toolbargradient = true
this.bitmapgradient = true
end on

on m_imprimir.destroy
call super::destroy
end on


forward
global type w_mnt_response from window
end type
type uo_mnt from u_cst_datawindow within w_mnt_response
end type
end forward

global type w_mnt_response from window
integer width = 2533
integer height = 1408
boolean titlebar = true
boolean controlmenu = true
boolean minbox = true
boolean maxbox = true
boolean resizable = true
long backcolor = 67108864
string icon = "AppIcon!"
boolean center = true
uo_mnt uo_mnt
end type
global w_mnt_response w_mnt_response

on w_mnt_response.create
this.uo_mnt=create uo_mnt
this.Control[]={this.uo_mnt}
end on

on w_mnt_response.destroy
destroy(this.uo_mnt)
end on

type uo_mnt from u_cst_datawindow within w_mnt_response
integer x = 329
integer y = 132
integer taborder = 40
end type

on uo_mnt.destroy
call u_cst_datawindow::destroy
end on


forward
global type n_cst_winsrv_mantenim from nonvisualobject
end type
end forward

global type n_cst_winsrv_mantenim from nonvisualobject
end type
global n_cst_winsrv_mantenim n_cst_winsrv_mantenim

type variables

integer		ii_estado

//Estado inicial ->Con los botones del mantenimiento por defecto
CONSTANT integer II_ESTADOINI = 1
//Estado alta ->Se permite alta y borrado(si existen)
CONSTANT integer II_ESTADOALT = 2
//Estado modificación->Se permite modificar(si existe)
CONSTANT integer II_ESTADOMOD = 3
//Estado consulta->Nada habilitado
CONSTANT integer II_ESTADOCON = 4
//Estado en modificación->Se produce una modificación en el mantenimiento
CONSTANT integer II_ESTADOMOD2 = 5
//Estado pulsa modificación->Pulsa el botón de modificación
CONSTANT integer II_ESTADOMOD3 = 6

Protected:
m_main		im_menu
menu			im_otromenu

//Guardamos la situación de las opciones de menú
//según permisos del usuario

str_perfilobjetos		istr_categorias[]	//PBD 03.10.2005
str_perfilobjetos		istr_objetos[]
boolean					ib_enabled,ib_visible	//para los estados de objetos
//Guardamos los estados de los objetos en ventanas
//response

end variables

forward prototypes
public function integer of_getsysopcion (string as_ventana, long al_perfil, long al_usuario, ref datastore ads_opciones)
public function integer of_buscarmenuitem (ref menu am_menu, string as_itemname)
public function integer of_asignarmenuitem (menu am_menuitem, ref m_main am_menu)
public function boolean of_buscaritemmenulevel (ref menu am_menu, menu am_menuitem)
public function boolean of_buscaritemmenu (ref menu am_menu, menu am_menuitem)
public function integer of_menuestado (integer ai_estado, ref m_main am_menu)
public function boolean of_stateitemmenu (menu am_menu, menu am_menuitem, ref boolean ab_visible, ref boolean ab_enabled)
public function boolean of_stateitemmenulevel (menu am_menu, menu am_menuitem, ref boolean ab_visible, ref boolean ab_enabled)
public function integer of_getpermisostran (string as_codtran, long al_perfil, long al_usuario, ref datastore ads_opciones)
public function integer of_permuser (integer ai_perfil, integer ai_userid, ref datastore ads_permisos)
public function boolean of_setenabled (menu am_menu, ref menu am_menuitem)
public function boolean of_buscaritemtaglevel (ref menu am_menu, string as_tag)
public function boolean of_buscarobjeto (ref window aw_ventana, string as_nombreobjeto)
public function boolean of_buscarobjeto (ref dragobject adg_objeto, string as_nombreobjeto)
public function boolean of_buscarobjeto (ref datawindow adw_objeto, string as_nombreobjeto)
public function boolean of_buscarobjeto (ref datawindowchild adw_objeto, string as_nombreobjeto)
public function integer of_dragobjectenabled (ref dragobject adg_objeto, boolean ab_enabled)
public function integer of_addobjectstruct (ref string as_objeto, boolean ab_visible, boolean ab_enabled)
public function integer of_referenciaresponse (window aw_ventana, ref w_mnt_response aw_response, ref w_mnt_response_shared aw_response_shared)
public function boolean of_tiposiguales (dragobject adg_objeto, string as_tipoobjeto)
public function boolean of_buscarobjeto (ref window aw_ventana, string as_tipoobjeto, string as_nombreobjeto)
public function boolean of_buscarobjeto (ref dragobject adg_objeto, string as_tipoobjeto, string as_nombreobjeto)
public function integer of_permisosmenu (m_main am_menu, datastore ads_permisos)
public function integer of_permisosthismenu (m_main am_menu, datastore ads_permisos)
public function integer of_permisosotrosmenu (menu am_menu, datastore ads_permisos)
public function integer of_permisosthisotrosmenu (menu am_menu, datastore ads_permisos)
public function integer of_setmenuref (ref menu am_menu)
public function integer of_setmenu (menu am_menu)
public function integer of_permisosresponse (datastore ads_permisos, window aw_ventana)
public function integer of_getcategoria (string as_categoria, ref boolean ab_enabled, ref boolean ab_visible)
public function boolean of_buscaritemtag (ref menu am_menu, string as_tag, ref integer ai_nivel)
public function boolean of_stateobjeto (string as_objeto, ref boolean ab_visible, ref boolean ab_enabled)
public function boolean of_setenabled (dragobject adg_objeto)
public function boolean of_isvalidmenu ()
end prototypes

public function integer of_getsysopcion (string as_ventana, long al_perfil, long al_usuario, ref datastore ads_opciones);///////////////////////////////////////////////////////////////////////////////
// Función		: of_getsysopcion
//
//	Comentarios	: Carga los permisos para botones/opciones de menú del usuario
//
//	Parámetros	:  string			as_ventana
//						long				al_perfil
//						long				al_usuario
//					  	datastore		ads_opciones		Reference
//					  
//	Retorno		: -1, Error en la carga
//					   0  Todo correcto
//
//	Modificaciones:
//		Fecha		Autor			Comentarios
//		--------	--------		----------------------------------------------------
//		PBD 		01/02/05		Creación
///////////////////////////////////////////////////////////////////////////////
integer						li_ret

blob							lblb_datos
n_cst_so_permventana		luo_so_permventana
datastore					lds_permisos

App.inv_Connect.of_CreateInstanceSistema(luo_so_permventana,	"n_cst_so_permventana")

li_ret = luo_so_permventana.of_permventanauser(as_ventana,al_perfil,al_usuario,lblb_Datos)

lds_permisos = Create datastore
lds_permisos.Dataobject = "d_so_syspermventana"

if li_ret >0 then
	// Cargamos la DW
   li_ret = lds_permisos.SetFullState (lblb_Datos)
	ads_opciones = lds_permisos
	li_ret = 0
ELSE
	li_ret = -1
END IF
App.inv_Connect.of_DestroyInstanceSistema(luo_so_permventana)

RETURN li_ret
end function

public function integer of_buscarmenuitem (ref menu am_menu, string as_itemname);///////////////////////////////////////////////////////////////////////////////
// Función		: of_buscarmenuitem
//
//	Comentarios	: Localiza un determinado item de menú por el nombre
//
//				*********NO OPERATIVA***********
//
//	Parámetros	:  menu				am_menu			Reference
//						string			as_itemname
//					  
//	Retorno		: -1, Error
//					   0  Todo correcto
//
//	Modificaciones:
//		Fecha		Autor			Comentarios
//		--------	--------		----------------------------------------------------
//		PBD 		01/02/05		Creación
///////////////////////////////////////////////////////////////////////////////
string		ls_prenombre, ls_nombremenu,ls_postnombre
integer		li_pos
long			ll_total ,i

li_pos = PosA(as_itemname,".")
IF li_pos > 0 THEN
	ls_prenombre = MidA(as_itemname,1,li_pos -1)
	ls_postnombre = MidA(as_itemname,li_pos +1)
ELSE
	ls_prenombre = as_itemname
	ls_postnombre = ""
END IF

ll_total = UpperBound(am_menu.Item[])
FOR i = 1 TO ll_total
	ls_nombremenu = am_menu.Item[i].ClassName()
	IF lower(ls_nombremenu) = ls_prenombre THEN
		ll_total = UpperBound(am_menu.Item[i].Item[])
		IF ls_postnombre = "" OR ll_total = 0 THEN
			am_menu = am_menu.Item[i]
			EXIT
		ELSE							/*Cambiamos el for, reiniciando i, actualizando ll_total y
										el nombre de menú a buscar junto con
										el parámetro de referencia am_menu*/
			am_menu = am_menu.Item[i]
			i = 1
			
			li_pos = PosA(ls_postnombre,".")
			IF li_pos > 0 THEN
				ls_prenombre = /* ls_prenombre + "."+*/ MidA(ls_postnombre,1,li_pos -1)
				ls_postnombre = MidA(ls_postnombre,li_pos +1)
			ELSE
				ls_prenombre = ls_postnombre
				ls_postnombre = ""
			END IF
					
		END IF
	END IF
	
NEXT

RETURN 0

end function

public function integer of_asignarmenuitem (menu am_menuitem, ref m_main am_menu);///////////////////////////////////////////////////////////////////////////////
// Función		: of_asignarmenuitem
//
//	Comentarios	: Asigna un item de menú a un menú dado
//
//	Parámetros	:  menu				am_menuitem			Reference
//						m_main			am_menu
//					  
//	Retorno		: -1, Error
//					   0  Todo correcto
//
//	Modificaciones:
//		Autor		Fecha			Comentarios
//		--------	--------		----------------------------------------------------
//		PBD 		01/02/05		Creación
///////////////////////////////////////////////////////////////////////////////
string		ls_prenombre, ls_nombremenu,ls_postnombre,ls_itemname
integer		li_pos
long			ll_total ,i
m_main		lm_menu

lm_menu = am_menu

ls_itemname = am_menuitem.ClassName()

li_pos = PosA(ls_itemname,".")
IF li_pos > 0 THEN
	ls_prenombre = MidA(ls_itemname,1,li_pos)
	ls_postnombre = MidA(ls_itemname,li_pos +1)
ELSE
	ls_prenombre = ls_itemname
	ls_postnombre = ""
END IF

ll_total = UpperBound(lm_menu.Item[])
FOR i = 1 TO ll_total
	ls_nombremenu = lm_menu.Item[i].ClassName()
	IF lower(ls_nombremenu) = ls_prenombre THEN
		ll_total = UpperBound(lm_menu.Item[i].Item[])
		IF ls_postnombre = "" OR ll_total = 0 THEN
			lm_menu = lm_menu.Item[i]
			EXIT
		ELSE							/*Cambiamos el for, reiniciando i, actualizando ll_total y
										el nombre de menú a buscar junto con
										el parámetro de referencia lm_menu*/
			i = 0
			lm_menu = lm_menu.Item[i]
			
			li_pos = PosA(ls_postnombre,".")
			IF li_pos > 0 THEN
				ls_prenombre = ls_prenombre + "."+ MidA(ls_postnombre,1,li_pos)
				ls_postnombre = MidA(ls_postnombre,li_pos +1)
			ELSE
				ls_prenombre = ls_prenombre
				ls_postnombre = ""
			END IF
					
		END IF
	END IF
	
NEXT

RETURN 0

end function

public function boolean of_buscaritemmenulevel (ref menu am_menu, menu am_menuitem);///////////////////////////////////////////////////////////////////////////////
// Función		: of_buscaritemmenulevel
//
//	Comentarios	: Localiza un determinado item de menú en un mismo nivel
//
//	Parámetros	:  menu				am_menu			Reference
//						menu				am_menuitem
//					  
//	Retorno		:  TRUE 		Si lo encuentra
//					   FALSE 	Si no
//
//	Modificaciones:
//		Fecha		Autor			Comentarios
//		--------	--------		----------------------------------------------------
//		PBD 		01/02/05		Creación
///////////////////////////////////////////////////////////////////////////////
string		ls_claseitem, ls_nombremenu
long			ll_total ,i
boolean		lb_retorno = FALSE

ls_claseitem = am_menuitem.ClassName()
ll_total = UpperBound(am_menu.Item[])
FOR i = 1 TO ll_total
	ls_nombremenu = am_menu.Item[i].ClassName()
	IF ls_nombremenu = ls_claseitem THEN
		am_menu.Item[i] = am_menuitem
		lb_retorno = TRUE
		EXIT
	END IF
NEXT		

RETURN lb_retorno

end function

public function boolean of_buscaritemmenu (ref menu am_menu, menu am_menuitem);///////////////////////////////////////////////////////////////////////////////
// Función		: of_buscaritemmenu
//
//	Comentarios	: Localiza un determinado item de menú
//
//	Parámetros	:  menu				am_menu			Reference
//						menu				am_menuitem
//					  
//	Retorno		:  TRUE 		Si lo encuentra
//					   FALSE 	Si no
//
//	Modificaciones:
//		Fecha		Autor			Comentarios
//		--------	--------		----------------------------------------------------
//		PBD 		01/02/05		Creación
///////////////////////////////////////////////////////////////////////////////
string		ls_claseitem, ls_nombremenu
long			ll_total ,i
boolean		lb_retorno = FALSE,lb_encontrado

lb_encontrado = of_buscaritemmenulevel(am_menu,am_menuitem)

IF lb_encontrado = FALSE THEN
	ll_total = Upperbound(am_menu.Item[])
	FOR i = 1 TO ll_total
		lb_encontrado = of_buscaritemmenu(am_menu.Item[i],am_menuitem)
		IF lb_encontrado = TRUE THEN EXIT
	NEXT
END IF
RETURN lb_encontrado
end function

public function integer of_menuestado (integer ai_estado, ref m_main am_menu);///////////////////////////////////////////////////////////////////////////////
// Función		: of_menuestado
//
//	Comentarios	: En función del estado, habilita/inhabilita opciones de menú
//
//	Parámetros	:  integer				ai_estado
//						m_main				am_menu		Reference
//					  
//	Retorno		: -1, Error
//					   0  Todo correcto
//
//	Modificaciones:
//		Fecha		Autor			Comentarios
//		--------	--------		----------------------------------------------------
//		PBD 		01/02/05		Creación
///////////////////////////////////////////////////////////////////////////////
boolean		lb_modif,lb_alta,lb_borrar,lb_ok,lb_cancel
boolean		lb_vis_alta,lb_vis_borrar,lb_vis_modif
CHOOSE CASE ai_estado

//Estado inicial ->Con los botones del mantenimiento por defecto
	CASE II_ESTADOINI
		
		IF im_menu.m_03.m_0312.Enabled = TRUE THEN
			lb_modif = TRUE
			lb_vis_modif = TRUE
		END IF
		
		lb_ok = FALSE
		lb_cancel = FALSE
		
		lb_alta = FALSE
		lb_borrar = FALSE
		
//Estado alta ->Se permite alta y borrado
//(El usuario selecciona una fila)
	CASE II_ESTADOALT
		
		IF im_menu.m_03.m_0312.Enabled = TRUE THEN
			lb_modif = TRUE
			lb_vis_modif = TRUE
		END IF
		
		lb_ok = FALSE
		lb_cancel = FALSE
		
		IF im_menu.m_03.m_0311.Enabled = TRUE THEN
			lb_alta = TRUE
			lb_vis_alta = TRUE
		END IF
		
		IF im_menu.m_03.m_0313.Enabled = TRUE THEN
			lb_borrar = TRUE
			lb_vis_borrar = TRUE
		END IF	
		
//Estado modificación->Se permite modificar(si existe)
//(El usuario selecciona una fila que sólo puede modificar)
	CASE II_ESTADOMOD
		
		lb_ok  = TRUE
		lb_cancel = TRUE
		
		lb_borrar = FALSE 
		lb_alta = FALSE
		
		IF im_menu.m_03.m_0312.Enabled = TRUE THEN
			lb_modif = TRUE
		END IF
		
//Estado consulta->Nada habilitado

	CASE II_ESTADOCON		
		
		lb_ok  = FALSE
		lb_cancel = FALSE
		
		lb_borrar = FALSE 
		lb_alta = FALSE
		lb_modif = FALSE
		
//Estado en modificación->Se produce una modificación en el mantenimiento
//(Se modifica un dw)
	CASE II_ESTADOMOD2
	
		lb_ok  = TRUE
		lb_cancel = TRUE
		
		lb_borrar = FALSE 
		lb_alta = FALSE
		lb_modif = FALSE

//Estado pulsa modificación->Pulsa el botón de modificación
//(Se modifica un dw)
	CASE II_ESTADOMOD3
	
		lb_ok  = FALSE
		lb_cancel = TRUE
		
		lb_borrar = FALSE 
		lb_alta = FALSE
		lb_modif = FALSE
				
END CHOOSE

am_menu.m_03.m_0312.Enabled = lb_modif 
am_menu.m_03.m_0301.Enabled = lb_ok
am_menu.m_03.m_0302.Enabled = lb_cancel
am_menu.m_03.m_0311.Enabled = lb_alta
am_menu.m_03.m_0313.Enabled = lb_borrar


am_menu.m_03.m_0312.ToolBarItemVisible = lb_vis_modif
am_menu.m_03.m_0311.ToolBarItemVisible = lb_vis_alta
am_menu.m_03.m_0313.ToolBarItemVisible = lb_vis_borrar

ii_estado = ai_estado
RETURN 0
end function

public function boolean of_stateitemmenu (menu am_menu, menu am_menuitem, ref boolean ab_visible, ref boolean ab_enabled);///////////////////////////////////////////////////////////////////////////////
// Función		: of_stateitemmenu
//
//	Comentarios	: Localiza un determinado item de menú en im_menu y
//					 devuelve el estado de dicho item
//
//	Parámetros	: 	menu				am_menu
//						menu				am_menuitem
//						boolean			ab_visible		Reference
//						boolean			ab_enabled		Reference
//					  
//	Retorno		:  TRUE 		Si lo encuentra
//					   FALSE 	Si no
//
//	Modificaciones:
//		Fecha		Autor			Comentarios
//		--------	--------		----------------------------------------------------
//		PBD 		01/02/05		Creación
///////////////////////////////////////////////////////////////////////////////
string		ls_claseitem, ls_nombremenu
long			ll_total ,i
boolean		lb_retorno = FALSE,lb_encontrado

lb_encontrado = of_stateitemmenulevel(am_menu,am_menuitem,ab_visible,ab_enabled)

IF lb_encontrado = FALSE THEN
	ll_total = Upperbound(am_menu.Item[])
	FOR i = 1 TO ll_total
		lb_encontrado = of_stateitemmenu(am_menu.Item[i],am_menuitem,ab_visible,ab_enabled)
		IF lb_encontrado = TRUE THEN EXIT
	NEXT
END IF
RETURN lb_encontrado
end function

public function boolean of_stateitemmenulevel (menu am_menu, menu am_menuitem, ref boolean ab_visible, ref boolean ab_enabled);///////////////////////////////////////////////////////////////////////////////
// Función		: of_stateitemmenulevel
//
//	Comentarios	: Localiza un determinado item de menú en un mismo nivel
//					y devuelve su estado
//
//	Parámetros	:  menu				am_menu
//						menu				am_menuitem
//						boolean			ab_visible		Reference
//						boolean			ab_enabled		Reference
//
//					  
//	Retorno		:  TRUE 		Si lo encuentra
//					   FALSE 	Si no
//
//	Modificaciones:
//		Fecha		Autor			Comentarios
//		--------	--------		----------------------------------------------------
//		PBD 		01/02/05		Creación
///////////////////////////////////////////////////////////////////////////////
string		ls_claseitem, ls_nombremenu
long			ll_total ,i
boolean		lb_retorno = FALSE

ls_claseitem = am_menuitem.ClassName()
ll_total = UpperBound(am_menu.Item[])
FOR i = 1 TO ll_total
	ls_nombremenu = am_menu.Item[i].ClassName()
	IF ls_nombremenu = ls_claseitem THEN
		IF RightA(am_menu.Item[i].tag,1)="." THEN	//Solo informamos de items
																//modificados por permisos
			ab_visible = am_menu.Item[i].Visible
			ab_enabled = am_menu.Item[i].Enabled
		ELSE
			ab_visible = TRUE
			ab_enabled = TRUE
		END IF
		lb_retorno = TRUE
		EXIT
	END IF
NEXT		

RETURN lb_retorno

end function

public function integer of_getpermisostran (string as_codtran, long al_perfil, long al_usuario, ref datastore ads_opciones);///////////////////////////////////////////////////////////////////////////////
// Función		: of_getpermisostran
//
//	Comentarios	: Carga los permisos para botones/opciones de menú del usuario
//
//	Parámetros	:  string			as_ventana
//						long				al_perfil
//						long				al_usuario
//					  	datastore		ads_opciones		Reference
//					  
//	Retorno		: -1, Error en la carga
//					   0  Todo correcto
//
//	Modificaciones:
//		Fecha		Autor			Comentarios
//		--------	--------		----------------------------------------------------
//		PBD 		01/02/05		Creación
///////////////////////////////////////////////////////////////////////////////
/*Primero recuperamos las opciones correspondientes a la transacción a)
Después las que tengan a la ventana como ventanapadre*/

integer						li_ret, i
long							ll_total
string						ls_ventana
string						ls_ventanasconstantes[] = {"wc_mnt_ficha","wc_mnt_lista"}
boolean						lb_constante = FALSE

blob							lblb_datos
datastore					lds_permisos



lds_permisos = Create datastore
lds_permisos.Dataobject = "d_so_syspermventana"

/*****************************a):TRANSACCION**************************/
app.SrvUsers.ids_permisos.Setfilter("codtran='"+lower(as_codtran)+"'")
app.SrvUsers.ids_permisos.Filter()


li_ret = app.SrvUsers.ids_permisos.RowsCopy(1,app.SrvUsers.ids_permisos.RowCount(),&
			Primary!,lds_permisos,1,Primary!)

integer	ll
ll = lds_permisos.RowCount()


app.SrvUsers.ids_permisos.Setfilter("")
app.SrvUsers.ids_permisos.Filter()

/*****************************b):VENTANAPADRE**************************/
IF lds_permisos.RowCount() > 0 THEN
	ls_ventana = trim(lds_permisos.GetItemString(1,"nombrew"))
	IF (NOT IsNull(ls_ventana)) AND trim(ls_ventana) <> "" THEN
		FOR i = 1 TO UpperBound(ls_ventanasconstantes[])
			IF ls_ventana = ls_ventanasconstantes[i] THEN
				lb_constante = TRUE
				EXIT
			END IF
		NEXT
	
		IF lb_constante = FALSE THEN
			app.SrvUsers.ids_permisos.Setfilter("nombrewpadre='"+lower(ls_ventana)+"' and objeto = 'consulta'")
			app.SrvUsers.ids_permisos.Filter()
			long	ll_aux
			ll_aux = app.srvUsers.ids_permisos.RowCount()
			
			li_ret = app.SrvUsers.ids_permisos.RowsCopy(1,app.SrvUsers.ids_permisos.RowCount(),&
				Primary!,lds_permisos,lds_permisos.RowCount()+1,Primary!)
	
			app.SrvUsers.ids_permisos.Setfilter("")
			app.SrvUsers.ids_permisos.Filter()
		END IF
	END IF
END IF

ads_opciones = lds_permisos

RETURN li_ret
end function

public function integer of_permuser (integer ai_perfil, integer ai_userid, ref datastore ads_permisos);///////////////////////////////////////////////////////////////////////////////
// Función		: of_permuser
//
//	Comentarios	: Obtiene los permisos del usuario
//
//	Parámetros	:  integer				ai_perfil
//						integer				ai_userid
//						datastore			ads_permisos	Reference
//					  
//	Retorno		:   0  	Ok
//						-1		Error
//
//	Modificaciones:
//		Fecha		Autor			Comentarios
//		--------	--------		----------------------------------------------------
//		PBD 		02/03/05		Creación
///////////////////////////////////////////////////////////////////////////////
integer		li_ret
blob			lblb_datos

n_cst_so_permventana		luo_so_permventana

App.inv_Connect.of_CreateInstanceSistema(luo_so_permventana,	"n_cst_so_permventana")

li_ret = luo_so_permventana.of_permuser(ai_perfil,ai_userid,lblb_Datos)

if li_ret >0 then

	app.SrvUsers.ids_permisos.dataobject = "d_so_syspermventana"
	ads_permisos.SetFullState (lblb_Datos)	
	li_ret = 0
 
else
	li_Ret = -1
end if 

App.inv_Connect.of_DestroyInstanceSistema(luo_so_permventana)

RETURN li_ret
end function

public function boolean of_setenabled (menu am_menu, ref menu am_menuitem);///////////////////////////////////////////////////////////////////////////////
// Función		: of_setenabled
//
//	Comentarios	: Localiza un determinado item de menú en im_menu y
//					 si está activo, lo habilita en el menú de referencia
//
//	Parámetros	: 	menu				am_menu
//						menu				am_menuitem
//					  
//	Retorno		:  TRUE 		Si lo encuentra
//					   FALSE 	Si no
//
//	Modificaciones:
//		Fecha		Autor			Comentarios
//		--------	--------		----------------------------------------------------
//		PBD 		01/02/05		Creación
//		PBD		20/06/05		Si no lo encuentra, que lo habilite	(CAMB 2)
///////////////////////////////////////////////////////////////////////////////
string		ls_claseitem, ls_nombremenu
long			ll_total ,i
boolean		lb_retorno = FALSE,lb_encontrado,lb_enabled,lb_visible

lb_encontrado = of_stateitemmenu(am_menu,am_menuitem,lb_visible,lb_enabled)

IF lb_encontrado = TRUE THEN
	IF lb_visible = TRUE AND lb_enabled = TRUE THEN
		am_menuitem.Enabled = TRUE
	END IF
	
	IF lb_visible = FALSE THEN	am_menuitem.Visible = FALSE
	IF lb_enabled = FALSE THEN	am_menuitem.Enabled = FALSE

ELSE
	/*(CAMB 2)*/
	am_menuitem.Enabled = TRUE
END IF
RETURN lb_encontrado
end function

public function boolean of_buscaritemtaglevel (ref menu am_menu, string as_tag);///////////////////////////////////////////////////////////////////////////////
// Función		: of_buscaritemtaglevel
//
//	Comentarios	: Localiza en un nivel un determinado item de menú por su tag
//
//	Parámetros	:  menu				am_menu			Reference
//						string			as_tag
//					  
//	Retorno		:  TRUE 		Si lo encuentra
//					   FALSE 	Si no
//
//	Modificaciones:
//		Fecha		Autor			Comentarios
//		--------	--------		----------------------------------------------------
//		PBD 		01/02/05		Creación
///////////////////////////////////////////////////////////////////////////////
string		ls_claseitem, ls_tag
long			ll_total ,i
boolean		lb_retorno = FALSE

ll_total = UpperBound(am_menu.Item[])
FOR i = 1 TO ll_total
	ls_tag = trim(lower(am_menu.Item[i].tag))
	IF ls_tag = as_tag THEN
		am_menu = am_menu.Item[i]
		lb_retorno = TRUE
		EXIT
	END IF
NEXT		

RETURN lb_retorno

end function

public function boolean of_buscarobjeto (ref window aw_ventana, string as_nombreobjeto);///////////////////////////////////////////////////////////////////////////////
// Función		: of_buscarobjeto
//
//	Comentarios	: Localiza un determinado objeto en una ventana
//
//					Busca en una ventana por nombre de objeto
//
//	Parámetros	:  window				aw_ventana			Reference
//						string				as_nombreobjeto
//					  
//	Retorno		:  TRUE 		Si lo encuentra
//					   FALSE 	Si no
//
//	Modificaciones:
//		Fecha		Autor			Comentarios
//		--------	--------		----------------------------------------------------
//		PBD 		03/03/05		Creación
///////////////////////////////////////////////////////////////////////////////
string			ls_objeto, ls_nombremenu
long				ll_total ,i
boolean			lb_retorno = FALSE,lb_encontrado
dragobject		ldg_objeto

ll_total = UpperBound(aw_ventana.Control[])


FOR i = 1 TO ll_total
	ldg_objeto = aw_ventana.Control[i]
	ls_objeto = ldg_objeto.ClassName()
	IF ls_objeto = as_nombreobjeto THEN 
		lb_encontrado = TRUE
		
		of_dragobjectEnabled(ldg_objeto,ib_enabled)
		ldg_objeto.Visible = ib_visible
		of_addobjectstruct(ls_objeto,ib_visible,ib_enabled)
		EXIT
	ELSE
		lb_encontrado = of_buscarobjeto(ldg_objeto,as_nombreobjeto)
		
		IF lb_encontrado = TRUE THEN EXIT
		
	END IF
NEXT
ib_enabled = FALSE
ib_visible = FALSE

RETURN lb_encontrado
end function

public function boolean of_buscarobjeto (ref dragobject adg_objeto, string as_nombreobjeto);///////////////////////////////////////////////////////////////////////////////
// Función		: of_buscarobjeto
//
//	Comentarios	: Localiza un determinado objeto por el nombre
//
//	Parámetros	:  dragobject				adg_objeto			Reference
//						string					as_nombreobjeto
//		
//						Busca en datawindows y objetos de usuario por el nombre de objeto
//
//	Retorno		:  TRUE 		Si lo encuentra
//					   FALSE 	Si no
//
//	Modificaciones:
//		Fecha		Autor			Comentarios
//		--------	--------		----------------------------------------------------
//		PBD 		01/02/05		Creación
///////////////////////////////////////////////////////////////////////////////
string			ls_objeto, ls_nombremenu
long				ll_total ,i
boolean			lb_retorno = FALSE,lb_encontrado ,lb_cualificado

userobject		luo_objeto
tab				ltb_objeto
datawindow		ldw_objeto
dragobject		ldg_objeto


/*Vemos si es un nombre cualificado*/
IF PosA(as_nombreobjeto,".") > 0 THEN lb_cualificado = TRUE


CHOOSE CASE adg_objeto.TypeOf()
	CASE datawindow!
		ldw_objeto = adg_objeto
		of_buscarobjeto(ldw_objeto,as_nombreobjeto)
	CASE tab!
		ltb_objeto = adg_objeto
		ll_total = UpperBound(ltb_objeto.Control[])
		
		FOR i = 1 TO ll_total
			ldg_objeto = ltb_objeto.Control[i]
			
			ls_objeto = ldg_objeto.ClassName()
			IF lb_cualificado = TRUE THEN	ls_objeto = adg_objeto.ClassName()+"."+ls_objeto
			
			IF ls_objeto = as_nombreobjeto THEN
				of_dragobjectEnabled(ldg_objeto,ib_enabled)
				ldg_objeto.Visible = ib_visible
				
				of_addobjectstruct(ls_objeto,ib_visible,ib_enabled)
				lb_encontrado = TRUE
				EXIT
			ELSE
				lb_encontrado = of_buscarobjeto(ldg_objeto,as_nombreobjeto)
				IF lb_encontrado = TRUE THEN
					EXIT
				END IF
			END IF
		NEXT
	CASE userobject!
		luo_objeto = adg_objeto
		ll_total = UpperBound(luo_objeto.Control[])
		
		FOR i = 1 TO ll_total
			ldg_objeto = luo_objeto.Control[i]
			
			ls_objeto = ldg_objeto.ClassName()
			IF lb_cualificado = TRUE THEN	ls_objeto = adg_objeto.ClassName()+"."+ls_objeto
			
			IF ls_objeto = as_nombreobjeto THEN
				of_dragobjectEnabled(ldg_objeto,ib_enabled)
				ldg_objeto.Visible = ib_visible
				
				of_addobjectstruct(ls_objeto,ib_visible,ib_enabled)
				lb_encontrado = TRUE
				EXIT
			ELSE
				lb_encontrado = of_buscarobjeto(ldg_objeto,as_nombreobjeto)
				IF lb_encontrado = TRUE THEN
					EXIT
				END IF
			END IF
		NEXT
	CASE ELSE
		//No hay controles dentro de otros objetos
		lb_encontrado = FALSE
END CHOOSE


RETURN lb_encontrado
end function

public function boolean of_buscarobjeto (ref datawindow adw_objeto, string as_nombreobjeto);///////////////////////////////////////////////////////////////////////////////
// Función		: of_buscarobjeto
//
//	Comentarios	: Localiza un determinado objeto por el nombre
//
//						Busca en un datawindow por el nombre del objeto.
//
//	Parámetros	:  datawindow				adw_objeto			Reference
//						string					as_nombreobjeto
//					  
//	Retorno		:  TRUE 		Si lo encuentra
//					   FALSE 	Si no
//
//	Modificaciones:
//		Fecha		Autor			Comentarios
//		--------	--------		----------------------------------------------------
//		PBD 		01/02/05		Creación
///////////////////////////////////////////////////////////////////////////////
string			ls_objeto, ls_objetos,ls_nombremenu
long				ll_total ,i
boolean			lb_retorno = FALSE,lb_encontrado
string			ls_visible,ls_enabled,ls_tipo

dwObject				ldw_object
datawindowchild	ldw_child


ls_objetos = adw_objeto.Describe("Datawindow.Objects")+"~t"

DO WHILE ls_objetos <> ""
	ls_objeto = MidA(ls_objetos,1,PosA(ls_objetos,"~t") -1)
	ls_objetos = MidA(ls_objetos,PosA(ls_objetos,"~t") +1 )
	
	IF ls_objeto = as_nombreobjeto THEN
		lb_encontrado = TRUE	
		
		ls_tipo = adw_objeto.Describe(ls_objeto+".Type")
		IF ls_tipo = 'button' THEN
			IF ib_enabled = TRUE THEN ls_enabled = 'No' ELSE ls_enabled = 'Yes'
			adw_objeto.Modify(ls_objeto+".SuppressEventProcessing='"+ls_enabled+"'")
		ELSE
			IF ib_enabled = TRUE THEN ls_enabled = '0' ELSE ls_enabled = '1'
			adw_objeto.Modify(ls_objeto+".Protect ="+ls_enabled)
		END IF
		IF ib_visible = TRUE THEN ls_enabled = '1' ELSE ls_enabled = '0'
		adw_objeto.Modify(ls_objeto+".Visible ="+ls_visible)
		
		of_addobjectstruct(ls_objeto,ib_visible,ib_enabled)
		EXIT
	ELSE
		RETURN FALSE
		// esta parte habrá que arreglarla, de ser necesaria
		ldw_object = adw_objeto.Object.ls_objeto
		IF ldw_object.TypeOf() = Datawindow! THEN
			
			ldw_object.GetChild(ls_objeto,ldw_child)
			
			lb_encontrado = of_buscarobjeto(ldw_child,as_nombreobjeto)

			IF lb_encontrado = TRUE THEN
				EXIT
			END IF
		END IF
	END IF
LOOP


RETURN lb_encontrado
end function

public function boolean of_buscarobjeto (ref datawindowchild adw_objeto, string as_nombreobjeto);///////////////////////////////////////////////////////////////////////////////
// Función		: of_buscarobjeto
//
//	Comentarios	: Localiza un determinado objeto por el nombre
//
//						Busca en un datawindowchild por el nombre de un objeto
//
//	Parámetros	:  datawindowchild			adw_objeto			Reference
//						string						as_nombreobjeto
//					  
//	Retorno		:  TRUE 		Si lo encuentra
//					   FALSE 	Si no
//
//	Modificaciones:
//		Fecha		Autor			Comentarios
//		--------	--------		----------------------------------------------------
//		PBD 		01/02/05		Creación
///////////////////////////////////////////////////////////////////////////////
string			ls_objeto, ls_objetos,ls_nombremenu,ls_tipo
long				ll_total ,i
boolean			lb_retorno = FALSE,lb_encontrado
string			ls_enabled,ls_visible

dwObject				ldw_object
datawindowchild	ldw_child


ls_objetos = adw_objeto.Describe("Datawindow.Objects")+"~t"

DO WHILE ls_objetos <> ""
	ls_objeto = MidA(ls_objetos,1,PosA(ls_objetos,"~t") -1)
	ls_objetos = MidA(ls_objetos,PosA(ls_objetos,"~t") +1 )
	
	IF ls_objeto = as_nombreobjeto THEN
		lb_encontrado = TRUE
		ls_tipo = adw_objeto.Describe(ls_objeto+".Type")
		IF ls_tipo = 'button' THEN
			IF ib_enabled = TRUE THEN ls_enabled = 'No' ELSE ls_enabled = 'Yes'
			adw_objeto.Modify(ls_objeto+".SuppressEventProcessing='"+ls_enabled+"'")
		ELSE
			IF ib_enabled = TRUE THEN ls_enabled = '0' ELSE ls_enabled = '1'
			adw_objeto.Modify(ls_objeto+".Protect ="+ls_enabled)
		END IF
		IF ib_visible = TRUE THEN ls_enabled = '1' ELSE ls_enabled = '0'
		adw_objeto.Modify(ls_objeto+".Visible ="+ls_visible)
		
		of_addobjectstruct(ls_objeto,ib_visible,ib_enabled)
		EXIT
	ELSE
		
		ls_tipo = lower(adw_objeto.Describe(ls_objeto+".Type"))
		IF lower(ls_tipo) = "datawindow" THEN
			
			ldw_object.GetChild(ls_objeto,ldw_child)
			
			lb_encontrado = of_buscarobjeto(ldw_child,as_nombreobjeto)

			IF lb_encontrado = TRUE THEN
				EXIT
			END IF
		END IF
	END IF
LOOP


RETURN lb_encontrado
end function

public function integer of_dragobjectenabled (ref dragobject adg_objeto, boolean ab_enabled);///////////////////////////////////////////////////////////////////////////////
// Función		: of_dragobjectenabled
//
//	Comentarios	: Habilita o no un determinado dragobject
//
//					
//
//	Parámetros	:  dragobject				adg_objeto			Reference
//						boolean					ab_enabled
//					  
//	Retorno		:  integer
//
//	Modificaciones:
//		Fecha		Autor			Comentarios
//		--------	--------		----------------------------------------------------
//		PBD 		03/03/05		Creación
///////////////////////////////////////////////////////////////////////////////
integer			li_ret = 0

commandbutton		lcb_objeto
datawindow			ldw_objeto
checkbox				lcxb_objeto
dropdownlistbox	lddlb_objeto
radiobutton			lrb_objeto
singlelineedit		lsle_objeto
userobject			luo_objeto
picturebutton		lpb_objeto

/*...*/


CHOOSE CASE adg_objeto.TypeOf()
	CASE Datawindow!
		ldw_objeto = adg_objeto
		ldw_objeto.Enabled = ib_enabled
	CASE checkbox!
		lcxb_objeto = adg_objeto
		lcxb_objeto.Enabled = ib_enabled
	CASE commandbutton!
		lcb_objeto = adg_objeto
		ldw_objeto.Enabled = ib_enabled
	CASE dropdownlistbox!
		lddlb_objeto = adg_objeto
		lddlb_objeto.Enabled = ib_enabled
	CASE radiobutton!
		lrb_objeto = adg_objeto
		lrb_objeto.Enabled = ib_enabled
	CASE userobject!
		luo_objeto = adg_objeto
		luo_objeto.Enabled = ib_enabled
	CASE picturebutton!
		lpb_objeto = adg_objeto
		lpb_objeto.Enabled = ib_enabled
	CASE ELSE
		li_ret = 1
END CHOOSE

RETURN li_ret
end function

public function integer of_addobjectstruct (ref string as_objeto, boolean ab_visible, boolean ab_enabled);///////////////////////////////////////////////////////////////////////////////
// Función		: of_addobjectstruct
//
//	Comentarios	: Añade un objeto a la estructura que almacena permisos en objetos
//
//					
//
//	Parámetros	:  string				as_objeto
//						boolean				ab_visible
//						boolean				ab_enabled
//					  
//	Retorno		:  integer		el valor del array de estructura
//
//	Modificaciones:
//		Fecha		Autor			Comentarios
//		--------	--------		----------------------------------------------------
//		PBD 		03/03/05		Creación
///////////////////////////////////////////////////////////////////////////////
/*El problema de esta función es que, una vez accedida a la ventana,
si dinámicamente se cambian los permisos de un objeto que sea de cierto
nivel(por ejemplo, un campo en un datawindow de un report de un dw 
composite) no se realiza toda la validación anterior, sino solo
a nivel de campo, pero este proceso es muy complejo de programar
100% correcto(en tal caso la estructura tendría objetos y no nombres
de objetos). No compensa el esfuerzo ante una opción que se usaría puntualmente
y que por el nombre de objeto puede también comprobarse).*/

long				ll_total ,i

ll_total = UpperBound(istr_objetos[])

i = ll_total +1

istr_objetos[i].ss_objeto = as_objeto
istr_objetos[i].sb_visible = ab_visible
istr_objetos[i].sb_enabled = ab_enabled
RETURN i
end function

public function integer of_referenciaresponse (window aw_ventana, ref w_mnt_response aw_response, ref w_mnt_response_shared aw_response_shared);///////////////////////////////////////////////////////////////////////////////
// Función		: of_referenciaresponse
//
//	Comentarios	: Determina si la ventana es de los tipos principales response
//					y en tal caso le asigna una referencia
//
//	Parámetros	:  m_main				am_menu
//					  
//	Retorno		:  0	No encuentra referencia
//						1	Es del tipo w_mnt_response
//						2	Es del tipo w_mnt_response_shared
//
//	Modificaciones:
//		Fecha		Autor			Comentarios
//		--------	--------		----------------------------------------------------
//		PBD 		01/02/05		Creación
///////////////////////////////////////////////////////////////////////////////
classdefinition			lcd_class
CONSTANT						string	LS_MNT_RESPONSE = 'w_mnt_response'
CONSTANT						string	LS_MNT_RESPONSE_SHARED = 'w_mnt_response_shared'
integer						li_ret = 0

IF classname(aw_ventana)= LS_MNT_RESPONSE THEN
	aw_response = aw_ventana
	li_ret = 1
ELSEIF classname(aw_ventana)= LS_MNT_RESPONSE_SHARED THEN
	aw_response_shared = aw_ventana 
	li_ret = 2
ELSE
	
	lcd_class=aw_ventana.classdefinition
	DO WHILE IsValid(lcd_class)
		lcd_class=lcd_class.ancestor
		IF isnull(lcd_class) THEN 
			EXIT
		ELSEIF lcd_class.name = LS_MNT_RESPONSE THEN //encontrado
			aw_response = aw_ventana
			li_ret = 1
			EXIT
		ELSEIF lcd_class.name = LS_MNT_RESPONSE_SHARED THEN //encontrado
			aw_response_shared = aw_ventana 
			li_ret = 2
			EXIT
		ELSEIF lcd_class.name = "window" THEN	//nos pasamos
			EXIT
		END IF
	LOOP
END IF
RETURN li_Ret
end function

public function boolean of_tiposiguales (dragobject adg_objeto, string as_tipoobjeto);///////////////////////////////////////////////////////////////////////////////
// Función		: of_tiposiguales
//
//	Comentarios	: Determina si un objeto es de cierto tipo
//						recorriendo las posibles clases de herencia
//
//	Parámetros	:  dragobject		adg_objeto
//						string			as_tipoobjeto
//					  
//	Retorno		:  Boolean: Si son iguales o no
//
//	Modificaciones:
//		Fecha		Autor			Comentarios
//		--------	--------		----------------------------------------------------
//		PBD 		04/03/05		Creación
///////////////////////////////////////////////////////////////////////////////
classdefinition			lcd_class
boolean						lb_iguales = FALSE
object						lo_local

lcd_class=adg_objeto.classdefinition
DO WHILE IsValid(lcd_class)
	lcd_class=lcd_class.ancestor
	lo_local = lcd_class.TypeOf()
	IF isnull(lcd_class) THEN 
		EXIT
	ELSEIF lcd_class.Name = as_tipoobjeto THEN //encontrado
		lb_iguales = TRUE
		EXIT
	ELSEIF lcd_class.name = "dragobject" THEN	//nos pasamos
		EXIT
	END IF
LOOP

RETURN lb_iguales
end function

public function boolean of_buscarobjeto (ref window aw_ventana, string as_tipoobjeto, string as_nombreobjeto);///////////////////////////////////////////////////////////////////////////////
// Función		: of_buscarobjeto
//
//	Comentarios	: Localiza un determinado objeto en una ventana
//
//						Busca en ventanas por el tipo y nombre de objeto
//
//	Parámetros	:  window				aw_ventana			Reference
//						object				ao_tipoobjeto
//						string				as_nombreobjeto
//					  
//	Retorno		:  TRUE 		Si lo encuentra
//					   FALSE 	Si no
//
//	Modificaciones:
//		Fecha		Autor			Comentarios
//		--------	--------		----------------------------------------------------
//		PBD 		03/03/05		Creación
///////////////////////////////////////////////////////////////////////////////
string			ls_objeto, ls_nombremenu
long				ll_total ,i
boolean			lb_retorno = FALSE,lb_encontrado

dragobject		ldg_objeto

ll_total = UpperBound(aw_ventana.Control[])


FOR i = 1 TO ll_total
	ldg_objeto = aw_ventana.Control[i]
	ls_objeto = ldg_objeto.ClassName()
	IF of_tiposiguales(ldg_objeto,as_tipoobjeto) THEN
		IF ls_objeto = as_nombreobjeto THEN
			lb_encontrado = TRUE
			of_dragobjectEnabled(ldg_objeto,ib_enabled)
			ldg_objeto.Visible = ib_visible
			of_addobjectstruct(ls_objeto,ib_visible,ib_enabled)
			EXIT
		END IF
	END IF
	
	lb_encontrado = of_buscarobjeto(ldg_objeto,as_tipoobjeto,as_nombreobjeto)
	IF lb_encontrado = TRUE THEN
		EXIT
	END IF
NEXT

RETURN lb_encontrado
end function

public function boolean of_buscarobjeto (ref dragobject adg_objeto, string as_tipoobjeto, string as_nombreobjeto);///////////////////////////////////////////////////////////////////////////////
// Función		: of_buscarobjeto
//
//	Comentarios	: Localiza un determinado objeto en una ventana
//
//					Localiza por tipo y nombre entre objetos de usuario y datawindows
//
//	Parámetros	:  dragobject			adg_objeto			Reference
//						string				as_tipoobjeto
//						string				as_nombreobjeto
//					  
//	Retorno		:  TRUE 		Si lo encuentra
//					   FALSE 	Si no
//
//	Modificaciones:
//		Fecha		Autor			Comentarios
//		--------	--------		----------------------------------------------------
//		PBD 		03/03/05		Creación
///////////////////////////////////////////////////////////////////////////////
string			ls_objeto, ls_nombremenu
long				ll_total ,i
boolean			lb_retorno = FALSE,lb_encontrado

userobject		luo_objeto
datawindow		ldw_objeto
dragobject		ldg_objeto
tab				ltb_objeto


CHOOSE CASE adg_objeto.TypeOf()
	CASE datawindow!
		ldw_objeto = adg_objeto
		of_buscarobjeto(ldw_objeto,as_nombreobjeto)
	
	CASE tab!
		ltb_objeto = adg_objeto
		ll_total = UpperBound(ltb_objeto.Control[])
		
		FOR i = 1 TO ll_total
			ldg_objeto = ltb_objeto.Control[i]
			
			ls_objeto = ldg_objeto.ClassName()
			
			IF of_tiposiguales(ldg_objeto,as_tipoobjeto) THEN
				IF ls_objeto = as_nombreobjeto THEN		
					of_dragobjectEnabled(ldg_objeto,ib_enabled)
					ldg_objeto.Visible = ib_visible
					
					of_addobjectstruct(ls_objeto,ib_visible,ib_enabled)
					lb_encontrado = TRUE
					
					EXIT
				END IF
			END IF
			IF ls_objeto = as_nombreobjeto THEN
				of_dragobjectEnabled(ldg_objeto,ib_enabled)
				ldg_objeto.Visible = ib_visible
				
				of_addobjectstruct(ls_objeto,ib_visible,ib_enabled)
				lb_encontrado = TRUE
				EXIT
				
			END IF
			lb_encontrado = of_buscarobjeto(ldg_objeto,as_nombreobjeto)
			IF lb_encontrado = TRUE THEN
				EXIT
			END IF
		NEXT
	CASE userobject!
		luo_objeto = adg_objeto
		ll_total = UpperBound(luo_objeto.Control[])
		
		FOR i = 1 TO ll_total
			ldg_objeto = luo_objeto.Control[i]
			
			ls_objeto = ldg_objeto.ClassName()
			IF of_tiposiguales(ldg_objeto,as_tipoobjeto) THEN
				IF ls_objeto = as_nombreobjeto THEN		
					of_dragobjectEnabled(ldg_objeto,ib_enabled)
					ldg_objeto.Visible = ib_visible
					
					of_addobjectstruct(ls_objeto,ib_visible,ib_enabled)
					lb_encontrado = TRUE
					
					EXIT
				END IF
			END IF
			lb_encontrado = of_buscarobjeto(ldg_objeto,as_nombreobjeto)
			IF lb_encontrado = TRUE THEN
				EXIT
			END IF
		NEXT
	CASE ELSE
		//No hay controles dentro de otros objetos
		lb_encontrado = FALSE
END CHOOSE


RETURN lb_encontrado
end function

public function integer of_permisosmenu (m_main am_menu, datastore ads_permisos);///////////////////////////////////////////////////////////////////////////////
// Función		: of_permisosmenu
//
//	Comentarios	: Adapta el menú a los permisos del usuario
//
//	Parámetros	:  m_main			am_menu
//						datastore		ads_permisos
//					  
//	Retorno		:  -2		El usuario no tiene acceso a consulta
//						-1		Error en la carga
//					    0  	Todo correcto
//
//	Modificaciones:
//		Fecha		Autor			Comentarios
//		--------	--------		----------------------------------------------------
//		PBD 		01/02/05		Creación
///////////////////////////////////////////////////////////////////////////////
long				ll_total, i
integer			li_nivel
string			ls_tipo_obj,ls_objeto,ls_accion,ls_ventana,ls_codtran,ls_ventanapadre
boolean			lb_itemvisible,lb_enabled,lb_visible,lb_encontrado, lb_tag, lb_5
menu				lm_menuitem
m_informe		lm_informes

ll_total = ads_permisos.RowCount()


IF NOT IsValid(im_menu) THEN im_menu = Create using am_menu.ClassName()


FOR i = 1 TO ll_total
	ls_objeto 	= trim(ads_permisos.GetItemString(i,"objeto"))
	ls_tipo_obj = trim(ads_permisos.GetItemString(i,"tipo_obj"))
	ls_accion 	= trim(ads_permisos.GetItemString(i,"accion"))
	lb_tag = TRUE
	
	ls_ventanapadre = trim(ads_permisos.GetItemString(i,"nombrewpadre"))
	
	IF ls_ventanapadre<>'' THEN 
		ls_objeto = "" //que procese por el tag
		ls_codtran =  trim(ads_permisos.GetItemSTring(i,"codtran"))
	END IF
	
	
	CHOOSE CASE lower(ls_objeto)
		CASE "alta"
			lm_menuitem = im_menu.m_03.m_0311
		CASE "modificacion"
			lm_menuitem = im_menu.m_03.m_0312
		CASE "borrar"
			lm_menuitem = im_menu.m_03.m_0313
		CASE "bloqueo"
			lm_menuitem = im_menu.m_03.m_0314
		CASE "imprimir"
			IF ClassName(am_menu) = "m_informe" THEN		//Caso especial:
			//el botón de imprimir está en el menú opciones
				lm_informes = am_menu
				lm_menuitem = lm_informes.m_opciones.m_imprimir
			ELSE
				lm_menuitem = am_menu.m_01.m_0111
			END IF
		CASE "consulta"
			/*Se refiere al acceso del usuario a la ventana */
			IF ls_accion = 'D' OR ls_accion = 'I' THEN
				RETURN -2
			ELSE
				CONTINUE
			END IF
		CASE ELSE
			
			/*03.10.2005
			Nueva posibilidad: permisos por categorias
			Una categoría es una propiedad que será parametrizable
			desde la tabla de permisos. Por ejemplo, si en gestion de informes
			el usuario es administrador o no (categoría : administrador,
			valores Yes-No)*/
			IF ls_tipo_obj = 'categoria' THEN
				istr_categorias[UpperBound(istr_categorias)+1].ss_objeto = trim(ls_objeto)
				IF ls_accion = 'E' THEN
					lb_enabled = TRUE
					lb_visible = TRUE
				ELSEIF ls_accion = 'D' THEN
					lb_enabled = FALSE
					lb_visible = TRUE
				ELSE
					lb_enabled = FALSE
					lb_visible = FALSE
				END IF
				istr_categorias[UpperBound(istr_categorias)].sb_visible = lb_visible
				istr_categorias[UpperBound(istr_categorias)].sb_enabled = lb_enabled
			
			CONTINUE
			END IF
			
			/*FIN CATEGORIAS 03.10.2005*/

			// 17/01/2008
			// Recoger permisos de objetos en ventanas que no sean response
			IF ls_tipo_obj <> "menu" THEN
				ib_enabled = lb_enabled
				ib_visible = lb_visible
				wc_winmenu	lw_ventana
/*//crm		lw_ventana=App.srvWinManager.mdiWindow.GetFirstSheet()
				IF  Isvalid(lw_ventana) THEN
					CHOOSE CASE ls_tipo_obj
						CASE "picturebutton","boton","commandbutton"
							ls_tipo_obj = "picturebutton"
							of_buscarobjeto(lw_ventana,lower(ls_objeto))
							CONTINUE
						CASE "datawindow","dw"
							ls_tipo_obj = "datawindow"
							of_buscarobjeto(lw_ventana,lower(ls_objeto))
							CONTINUE
					END CHOOSE		
				END IF
*/
			END IF
			
			lb_tag = TRUE
			//Tenemos que encontrar el item de menú
			lm_menuitem = im_menu
			lb_5 = FALSE
			IF ls_codtran <> '' THEN
				
				IF UpperBound(lm_menuitem.Item[]) > 4 THEN
					lm_menuitem = lm_menuitem.Item[5]
					IF	of_buscaritemtag(lm_menuitem,ls_codtran,li_nivel) = FALSE THEN
						lm_menuitem = im_menu
						of_buscaritemtag(lm_menuitem,ls_codtran,li_nivel)
					ELSE
						lb_5 = TRUE
					END IF
				ELSE
					of_buscaritemtag(lm_menuitem,ls_codtran,li_nivel)
				END IF
				
			ELSE
				of_buscarmenuitem(lm_menuitem,ls_objeto)
			END IF
	
	END CHOOSE
	
	CHOOSE CASE Upper(ls_accion)
		CASE 'E'
			lb_itemvisible = TRUE
			lb_enabled = TRUE
			lb_visible = TRUE
		CASE 'D'
			lb_itemvisible = TRUE
			lb_enabled = FALSE
			lb_visible = TRUE
		CASE 'I'
			lb_itemvisible = FALSE
			lb_enabled = FALSE
			lb_visible = FALSE
	END CHOOSE
	
	lm_menuitem.Enabled = lb_enabled
	//La visibilidad no hay que cambiarla en items invisibles 05.04.08
//!	IF NOT (lb_visible = TRUE AND lm_menuitem.visible = FALSE) THEN &
		lm_menuitem.Visible = lb_visible	
	
//!	IF NOT (lb_itemvisible = TRUE AND lm_menuitem.Toolbaritemvisible = FALSE) THEN &
		lm_menuitem.Toolbaritemvisible = lb_itemvisible
		
		
		
	IF lb_tag = TRUE THEN
		lm_menuitem.tag = lm_menuitem.tag+"."		//Añadimos un tag para que distinga
																//items invisibles/inhabilitados por
																//permisos de items que están así
	END IF
	
	IF lb_5 = TRUE THEN
		lb_encontrado = of_buscaritemmenu(im_menu.Item[5],lm_menuitem)
	ELSEIF li_nivel > 0 THEN
		lb_encontrado = of_buscaritemmenu(im_menu.Item[li_nivel],lm_menuitem)
	ELSE
		lb_encontrado = of_buscaritemmenu(im_menu,lm_menuitem)
	END IF
NEXT
	
of_setmenu(am_menu)	/*Guardamos las propiedades del menú*/


RETURN 0
end function

public function integer of_permisosthismenu (m_main am_menu, datastore ads_permisos);///////////////////////////////////////////////////////////////////////////////
// Función		: of_permisosthismenu
//
//	Comentarios	: Adapta el menú a los permisos del usuario
//
//	Parámetros	:  m_main			am_menu
//						datastore		ads_permisos
//					  
//	Retorno		:  -2		El usuario no tiene acceso a consulta
//						-1		Error en la carga
//					    0  	Todo correcto
//
//	Modificaciones:
//		Fecha		Autor			Comentarios
//		--------	--------		----------------------------------------------------
//		PBD 		01/02/05		Creación
///////////////////////////////////////////////////////////////////////////////
long				ll_total, i
integer			li_nivel
string			ls_tipo_obj,ls_objeto,ls_accion,ls_ventana,ls_codtran,ls_ventanapadre
boolean			lb_itemvisible,lb_enabled,lb_visible,lb_encontrado, lb_tag, lb_5
menu				lm_menuitem

m_informe		lm_informes


ll_total = ads_permisos.RowCount()

//IF NOT IsValid(im_menu) THEN im_menu = Create using am_menu.ClassName()

FOR i = 1 TO ll_total
	ls_objeto 	= trim(ads_permisos.GetItemString(i,"objeto"))
	ls_tipo_obj = trim(ads_permisos.GetItemString(i,"tipo_obj"))
	ls_accion 	= trim(ads_permisos.GetItemString(i,"accion"))
	lb_tag = TRUE
	
	ls_ventanapadre = trim(ads_permisos.GetItemString(i,"nombrewpadre"))
	
	IF ls_ventanapadre<>'' THEN 
		ls_objeto = "" //que procese por el tag
		ls_codtran =  trim(ads_permisos.GetItemSTring(i,"codtran"))
	END IF
	
	
	CHOOSE CASE lower(ls_objeto)
		CASE "alta"
			lm_menuitem = am_menu.m_03.m_0311
		CASE "modificacion"
			lm_menuitem = am_menu.m_03.m_0312
		CASE "borrar"
			lm_menuitem = am_menu.m_03.m_0313
		CASE "bloqueo"
			lm_menuitem = am_menu.m_03.m_0314
		CASE "imprimir"
			IF ClassName(am_menu) = "m_informe" THEN		//Caso especial:
			//el botón de imprimir está en el menú opciones
				lm_informes = am_menu
				lm_menuitem = lm_informes.m_opciones.m_imprimir
			ELSE
				lm_menuitem = am_menu.m_01.m_0111
			END IF
		CASE "consulta"
			/*Se refiere al acceso del usuario a la ventana */
			IF ls_accion = 'D' OR ls_accion = 'I' THEN
				RETURN -2
			ELSE
				CONTINUE
			END IF
		CASE ELSE
			lb_tag = TRUE
			//Tenemos que encontrar el item de menú
			lm_menuitem = am_menu
			lb_5 = FALSE
			
			IF ls_codtran <> '' THEN
				
				/*probamos primero ir al m_opciones que es el más probable
				para agilizar todo el proceso*/
				IF UpperBound(lm_menuitem.Item[]) > 4 THEN
					lm_menuitem = lm_menuitem.Item[5]
					IF	of_buscaritemtag(lm_menuitem,ls_codtran,li_nivel) = FALSE THEN
						lm_menuitem = am_menu
						of_buscaritemtag(lm_menuitem,ls_codtran,li_nivel)
					ELSE
						lb_5 = TRUE
					END IF
				ELSE
					of_buscaritemtag(lm_menuitem,ls_codtran,li_nivel)
				END IF
				
			ELSE
				of_buscarmenuitem(lm_menuitem,ls_objeto)
			END IF
	
	END CHOOSE
	
	CHOOSE CASE Upper(ls_accion)
		CASE 'E'
			lb_itemvisible = TRUE
			lb_enabled = TRUE
			lb_visible = TRUE
		CASE 'D'
			lb_itemvisible = TRUE
			lb_enabled = FALSE
			lb_visible = TRUE
		CASE 'I'
			lb_itemvisible = FALSE
			lb_enabled = FALSE
			lb_visible = FALSE
	END CHOOSE
	
	lm_menuitem.Enabled = lb_enabled
	
	//La visibilidad no hay que cambiarla en items invisibles 05.04.08
	IF NOT (lb_visible = TRUE AND lm_menuitem.visible = FALSE) THEN &
		lm_menuitem.Visible = lb_visible	
	
	IF NOT (lb_itemvisible = TRUE AND lm_menuitem.Toolbaritemvisible = FALSE) THEN &
		lm_menuitem.Toolbaritemvisible = lb_itemvisible
	
	
	IF lb_tag = TRUE THEN
		lm_menuitem.tag = lm_menuitem.tag+"."		//Añadimos un tag para que distinga
																//items invisibles/inhabilitados por
																//permisos de items que están así
	END IF
	IF lb_5 = TRUE THEN
		lb_encontrado = of_buscaritemmenu(am_menu.Item[5],lm_menuitem)
	ELSEIF li_nivel > 0 THEN
		lb_encontrado = of_buscaritemmenu(am_menu.Item[li_nivel],lm_menuitem)
	ELSE
		lb_encontrado = of_buscaritemmenu(am_menu,lm_menuitem)
	END IF
	IF lb_tag = TRUE THEN lm_menuitem.tag = MidA(lm_menuitem.tag,1,LenA(lm_menuitem.tag) -1)
NEXT

//im_menu = am_menu	esta asignación vincularía el menú de pantalla al de memoria
	
//of_setmenu(am_menu)	/*Guardamos las propiedades del menú*/


RETURN 0
end function

public function integer of_permisosotrosmenu (menu am_menu, datastore ads_permisos);///////////////////////////////////////////////////////////////////////////////
// Función		: of_permisosotrosmenu
//
//	Comentarios	: Adapta el menú a los permisos del usuario, para menos no m_main
//
//	Parámetros	:  menu			am_menu
//						datastore		ads_permisos
//					  
//	Retorno		:  -2		El usuario no tiene acceso a consulta
//						-1		Error en la carga
//					    0  	Todo correcto
//
//	Modificaciones:
//		Fecha		Autor			Comentarios
//		--------	--------		----------------------------------------------------
//		PBD 		01/02/05		Creación
///////////////////////////////////////////////////////////////////////////////
long				ll_total, i
integer			li_nivel
string			ls_tipo_obj,ls_objeto,ls_accion,ls_ventana,ls_codtran,ls_ventanapadre
boolean			lb_itemvisible,lb_enabled,lb_visible,lb_encontrado, lb_tag
menu				lm_menuitem

ll_total = ads_permisos.RowCount()

IF NOT IsValid(im_otromenu) THEN im_otromenu = Create using am_menu.ClassName()


FOR i = 1 TO ll_total
	ls_objeto 	= trim(ads_permisos.GetItemString(i,"objeto"))
	ls_tipo_obj = trim(ads_permisos.GetItemString(i,"tipo_obj"))
	ls_accion 	= trim(ads_permisos.GetItemString(i,"accion"))
	lb_tag = TRUE
	
	ls_ventanapadre = trim(ads_permisos.GetItemString(i,"nombrewpadre"))
	
	IF ls_ventanapadre<>'' THEN 
		ls_objeto = "" //que procese por el tag
		ls_codtran =  trim(ads_permisos.GetItemSTring(i,"codtran"))
	END IF
	
	
	CHOOSE CASE lower(ls_objeto)
		CASE "consulta" 
			/*Se refiere al acceso del usuario a la ventana */
			IF ls_accion = 'D' OR ls_accion = 'I' THEN
				RETURN -2
			ELSE
				CONTINUE
			END IF
		CASE ELSE
			lb_tag = TRUE
			//Tenemos que encontrar el item de menú
			lm_menuitem = im_otromenu
			IF ls_codtran <> '' THEN
				of_buscaritemtag(lm_menuitem,ls_codtran,li_nivel)
			ELSE
				of_buscarmenuitem(lm_menuitem,ls_objeto)
			END IF
	
	END CHOOSE
	
	CHOOSE CASE Upper(ls_accion)
		CASE 'E'
			lb_itemvisible = TRUE
			lb_enabled = TRUE
			lb_visible = TRUE
		CASE 'D'
			lb_itemvisible = TRUE
			lb_enabled = FALSE
			lb_visible = TRUE
		CASE 'I'
			lb_itemvisible = FALSE
			lb_enabled = FALSE
			lb_visible = FALSE
	END CHOOSE
	
	lm_menuitem.Toolbaritemvisible = lb_itemvisible
	lm_menuitem.Enabled = lb_enabled
	lm_menuitem.Visible = lb_visible
	IF lb_tag = TRUE THEN
		lm_menuitem.tag = lm_menuitem.tag+"."		//Añadimos un tag para que distinga
																//items invisibles/inhabilitados por
																//permisos de items que están así
	END IF
	lb_encontrado = of_buscaritemmenu(im_otromenu,lm_menuitem)
NEXT
	
of_setmenu(am_menu)	/*Guardamos las propiedades del menú*/


RETURN 0
end function

public function integer of_permisosthisotrosmenu (menu am_menu, datastore ads_permisos);///////////////////////////////////////////////////////////////////////////////
// Función		: of_permisosthismenu
//
//	Comentarios	: Adapta el menú a los permisos del usuario
//
//	Parámetros	:  m_main			am_menu
//						datastore		ads_permisos
//					  
//	Retorno		:  -2		El usuario no tiene acceso a consulta
//						-1		Error en la carga
//					    0  	Todo correcto
//
//	Modificaciones:
//		Fecha		Autor			Comentarios
//		--------	--------		----------------------------------------------------
//		PBD 		01/02/05		Creación
///////////////////////////////////////////////////////////////////////////////
long				ll_total, i
integer			li_nivel
string			ls_tipo_obj,ls_objeto,ls_accion,ls_ventana,ls_codtran,ls_ventanapadre
boolean			lb_itemvisible,lb_enabled,lb_visible,lb_encontrado, lb_tag
menu				lm_menuitem

ll_total = ads_permisos.RowCount()

//IF NOT IsValid(im_menu) THEN im_menu = Create using am_menu.ClassName()

FOR i = 1 TO ll_total
	ls_objeto 	= trim(ads_permisos.GetItemString(i,"objeto"))
	ls_tipo_obj = trim(ads_permisos.GetItemString(i,"tipo_obj"))
	ls_accion 	= trim(ads_permisos.GetItemString(i,"accion"))
	lb_tag = TRUE
	
	ls_ventanapadre = trim(ads_permisos.GetItemString(i,"nombrewpadre"))
	
	IF ls_ventanapadre<>'' THEN 
		ls_objeto = "" //que procese por el tag
		ls_codtran =  trim(ads_permisos.GetItemSTring(i,"codtran"))
	END IF
	
	
	CHOOSE CASE lower(ls_objeto)
		CASE "consulta"
			/*Se refiere al acceso del usuario a la ventana */
			IF ls_accion = 'D' OR ls_accion = 'I' THEN
				RETURN -2
			ELSE
				CONTINUE
			END IF
		CASE ELSE
			lb_tag = TRUE
			//Tenemos que encontrar el item de menú
			lm_menuitem = am_menu
			IF ls_codtran <> '' THEN
				of_buscaritemtag(lm_menuitem,ls_codtran,li_nivel)
			ELSE
				of_buscarmenuitem(lm_menuitem,ls_objeto)
			END IF
	
	END CHOOSE
	
	CHOOSE CASE Upper(ls_accion)
		CASE 'E'
			lb_itemvisible = TRUE
			lb_enabled = TRUE
			lb_visible = TRUE
		CASE 'D'
			lb_itemvisible = TRUE
			lb_enabled = FALSE
			lb_visible = TRUE
		CASE 'I'
			lb_itemvisible = FALSE
			lb_enabled = FALSE
			lb_visible = FALSE
	END CHOOSE
	
	lm_menuitem.Toolbaritemvisible = lb_itemvisible
	lm_menuitem.Enabled = lb_enabled
	lm_menuitem.Visible = lb_visible
	IF lb_tag = TRUE THEN
		lm_menuitem.tag = lm_menuitem.tag+"."		//Añadimos un tag para que distinga
																//items invisibles/inhabilitados por
																//permisos de items que están así
	END IF
	lb_encontrado = of_buscaritemmenu(am_menu,lm_menuitem)
	IF lb_tag = TRUE THEN lm_menuitem.tag = MidA(lm_menuitem.tag,1,LenA(lm_menuitem.tag) -1)
NEXT

//im_menu = am_menu	esta asignación vincularía el menú de pantalla al de memoria
	
//of_setmenu(am_menu)	/*Guardamos las propiedades del menú*/


RETURN 0
end function

public function integer of_setmenuref (ref menu am_menu);///////////////////////////////////////////////////////////////////////////////
// Función		: of_setmenuref
//
//	Comentarios	: Asigna al mantenimiento un determinado menú
//
//	Parámetros	:  menu			am_menu
//					  
//	Retorno		: -1, Error
//					   0  Todo correcto
//
//	Modificaciones:
//		Fecha		Autor			Comentarios
//		--------	--------		----------------------------------------------------
//		01/02/05	PBD			Creación
//		11/04/07	PBD			Incluir una validación para im_menu no válido
//		23/04/07	PBD			Comento el anterior cambio porque está
//									colocando el menú de la ventana "de detrás"
///////////////////////////////////////////////////////////////////////////////
window		lw_ventana

IF IsValid(im_menu) THEN
	am_menu = im_menu
ELSE
//	/*Si el menú no es válido la asignación a im_otromenu
//	deja la ventana descolocada con un menú inútil y sin la opción
//	de moverse entre ventanas. Se añade una validación extra,
//	en caso de necesidad intentamos dejar el menú que ya haya activo.*/
//	lw_ventana = App.srvWinmanager.mdiWindow.GetFirstSheet()
//	
//	IF IsValid(lw_ventana) THEN
//		am_menu = lw_ventana.menuID
//	ELSE
		am_menu = im_otromenu
//	END IF
	
	
END IF
RETURN 0
end function

public function integer of_setmenu (menu am_menu);///////////////////////////////////////////////////////////////////////////////
// Función		: of_setmenu
//
//	Comentarios	: Asigna al mantenimiento un determinado menú
//
//	Parámetros	:  m_main				am_menu
//					  
//	Retorno		: -1, Error
//					   0  Todo correcto
//
//	Modificaciones:
//		Fecha		Autor			Comentarios
//		--------	--------		----------------------------------------------------
//		PBD 		01/02/05		Creación
///////////////////////////////////////////////////////////////////////////////

IF IsValid(im_menu) THEN
	am_menu = im_menu
ELSE
	am_menu = im_otromenu
END IF
RETURN 0
end function

public function integer of_permisosresponse (datastore ads_permisos, window aw_ventana);///////////////////////////////////////////////////////////////////////////////
// Función		: of_permisosresponse
//
//	Comentarios	: Adapta los objetos de la ventana response a los permisos
//
//	Parámetros	:  datastore		ads_permisos
//						window			aw_ventana		Reference
//					  
//	Retorno		:  -2		El usuario no tiene acceso a consulta
//						-1		Error en la carga
//					    0  	Todo correcto
//
//	Modificaciones:
//		Fecha		Autor			Comentarios
//		--------	--------		----------------------------------------------------
//		PBD 		01/02/05		Creación
///////////////////////////////////////////////////////////////////////////////
long							ll_total, i
string						ls_tipo_obj,ls_objeto,ls_accion,ls_ventana
string						ls_codtran,ls_ventanapadre
boolean						lb_itemvisible,lb_enabled,lb_visible,lb_encontrado, lb_tag
boolean						lb_response = FALSE, lb_response_shared = FALSE , lb_asignado = FALSE
integer						li_ret

w_mnt_response				lw_response
w_mnt_response_shared	lw_response_shared
u_pb							lpb_boton

classdefinition 			lcd_class

ll_total = ads_permisos.RowCount()

//Si la ventana hereda de w_mnt_response, alcanzamos una referencia a dicha ventana

li_ret =	of_referenciaresponse(aw_ventana,lw_response,lw_response_shared)
IF li_ret = 1 THEN 
	lb_response = TRUE
ELSEIF li_ret = 2 THEN
	lb_response_shared = TRUE
END IF

FOR i = 1 TO ll_total
	ls_objeto 	= trim(ads_permisos.GetItemString(i,"objeto"))
	ls_tipo_obj = trim(ads_permisos.GetItemString(i,"tipo_obj"))
	ls_accion 	= trim(ads_permisos.GetItemString(i,"accion"))
	lb_tag = TRUE
	
	CHOOSE CASE Upper(ls_accion)
		CASE 'E'
			lb_enabled = TRUE
			lb_visible = TRUE
		CASE 'D'
			lb_enabled = FALSE
			lb_visible = TRUE
		CASE 'I'
			lb_enabled = FALSE
			lb_visible = FALSE
	END CHOOSE
	
	IF lb_response = TRUE OR lb_response_shared = TRUE THEN
		lb_asignado = TRUE
		CHOOSE CASE lower(ls_objeto)
			CASE "alta"
				IF lb_response THEN
					lpb_boton = lw_response.uo_mnt.pb_nuevo
				ELSE
					lpb_boton = lw_response_shared.uo_mnt.pb_nuevo
				END IF
			CASE "modificacion"
				IF lb_response THEN
					lpb_boton = lw_response.uo_mnt.pb_modificar
				ELSE
					lpb_boton = lw_response_shared.uo_mnt.pb_modificar
				END IF
			CASE "borrar"
				IF lb_response THEN
					lpb_boton = lw_response.uo_mnt.pb_borrar
				ELSE
					lpb_boton = lw_response_shared.uo_mnt.pb_borrar
				END IF
			CASE "bloqueo"
				IF lb_response THEN
					lpb_boton = lw_response.uo_mnt.pb_bloquear
				ELSE
					lpb_boton = lw_response_shared.uo_mnt.pb_bloquear
				END IF
			CASE "imprimir"
				IF lb_response THEN
					lpb_boton = lw_response.uo_mnt.pb_imprimir
				ELSE		//No tiene botón imprimir
					lb_asignado = FALSE
				END IF
			CASE ELSE
				lb_asignado = FALSE
		END CHOOSE
	END IF
	
	IF lb_asignado = FALSE THEN
		CHOOSE CASE lower(ls_objeto)
			CASE "consulta"
				/*Se refiere al acceso del usuario a la ventana */
				IF ls_accion = 'D' OR ls_accion = 'I' THEN
					RETURN -2
				ELSE
					CONTINUE
				END IF
			CASE ELSE
				//Tenemos que encontrar el item de menú
				ib_enabled = lb_enabled
				ib_visible = lb_visible
				//Vemos si tenemos rellenos el tipo
				CHOOSE CASE ls_tipo_obj
					CASE "picturebutton","boton","commandbutton"
						ls_tipo_obj = "picturebutton"
						of_buscarobjeto(aw_ventana,"commandbutton",lower(ls_objeto))
					CASE "datawindow","dw"
						ls_tipo_obj = "datawindow"
						of_buscarobjeto(aw_ventana,"datawindow",lower(ls_objeto))
					CASE ELSE
						of_buscarobjeto(aw_ventana,lower(ls_objeto))
				END CHOOSE
		
		END CHOOSE
	ELSE
		lpb_boton.Enabled = lb_enabled
		lpb_boton.Visible = lb_visible
	END IF
	
NEXT

RETURN 0
end function

public function integer of_getcategoria (string as_categoria, ref boolean ab_enabled, ref boolean ab_visible);///////////////////////////////////////////////////////////////////////////////
// Función		: of_getcategoria
//
//	Comentarios	: Devuelve los valores para cierta categoría
//
//	Parámetros	:  string			as_categoria
//						boolean			ab_enabled			Reference
//						boolean			ab_visible			Reference
//					  
//	Retorno		:	-2		No existen categorías
//						-1		La categoría no existe
//					    0  	Todo correcto
//
//	Modificaciones:
//		Fecha		Autor			Comentarios
//		--------	--------		----------------------------------------------------
//		PBD 		01/02/05		Creación
///////////////////////////////////////////////////////////////////////////////
integer			li_total, li_ret = 0, i

li_total = UpperBound(istr_categorias[])

IF li_total = 0 THEN	li_ret = -2	

IF li_ret = 0 THEN
	li_ret = -1
	FOR i = 1 TO li_total
		IF istr_categorias[i].ss_objeto = as_categoria THEN
			ab_enabled = istr_categorias[i].sb_enabled
			ab_visible = istr_categorias[i].sb_visible
			li_ret = 0
			EXIT
		END IF
	NEXT
	
END IF

RETURN li_ret
end function

public function boolean of_buscaritemtag (ref menu am_menu, string as_tag, ref integer ai_nivel);///////////////////////////////////////////////////////////////////////////////
// Función		: of_buscaritemmenu
//
//	Comentarios	: Localiza un determinado item de menú por su tag
//
//	Parámetros	:  menu				am_menu			Reference
//						string			as_tag
//					  
//	Retorno		:  TRUE 		Si lo encuentra
//					   FALSE 	Si no
//
//	Modificaciones:
//		Fecha		Autor			Comentarios
//		--------	--------		----------------------------------------------------
//		PBD 		01/02/05		Creación
///////////////////////////////////////////////////////////////////////////////
string		ls_claseitem, ls_nombremenu
long			ll_total ,i
boolean		lb_retorno = FALSE,lb_encontrado
menu			lm_menu

lm_menu = Create menu


lb_encontrado = of_buscaritemtaglevel(am_menu,as_tag)

IF lb_encontrado = FALSE THEN
	ll_total = Upperbound(am_menu.Item[])
	FOR i = 1 TO ll_total
		lm_menu = am_menu.Item[i]
		lb_encontrado = of_buscaritemtag(lm_menu,as_tag,ai_nivel)
		IF lb_encontrado = TRUE THEN 
			ai_nivel = i
			am_menu = lm_menu
			EXIT
		END IF
	NEXT
END IF
RETURN lb_encontrado
end function

public function boolean of_stateobjeto (string as_objeto, ref boolean ab_visible, ref boolean ab_enabled);///////////////////////////////////////////////////////////////////////////////
// Función		: of_stateitemmenu
//
//	Comentarios	: Localiza un determinado objeto en la estructura y
//					 devuelve el estado de dicho item
//
//	Parámetros	: 	string			as_objeto
//						boolean			ab_visible		Reference
//						boolean			ab_enabled		Reference
//					  
//	Retorno		:  TRUE 		Si lo encuentra
//					   FALSE 	Si no
//
//	Modificaciones:
//		Fecha		Autor			Comentarios
//		--------	--------		----------------------------------------------------
//		PBD 		01/02/05		Creación
///////////////////////////////////////////////////////////////////////////////
string		ls_objeto
long			ll_total ,i
boolean		lb_retorno = FALSE,lb_encontrado


ll_total = UpperBound(istr_objetos[])

FOR i = 1 TO ll_total
	ls_objeto = istr_objetos[i].ss_objeto
	IF ls_objeto = as_objeto THEN
		ab_visible = istr_objetos[i].sb_visible
		ab_enabled = istr_objetos[i].sb_enabled
		lb_encontrado = TRUE
		EXIT
	END IF
NEXT


RETURN lb_encontrado
end function

public function boolean of_setenabled (dragobject adg_objeto);///////////////////////////////////////////////////////////////////////////////
// Función		: of_setenabled
//
//	Comentarios	: Localiza un determinado objeto en istr_objetos y
//					 si está activo, lo habilita
//
//	Parámetros	: 	dragobject		adg_objeto
//					  
//	Retorno		:  TRUE 		Si lo encuentra
//					   FALSE 	Si no
//
//	Modificaciones:
//		Fecha		Autor			Comentarios
//		--------	--------		----------------------------------------------------
//		PBD 		27/03/06		Creación
///////////////////////////////////////////////////////////////////////////////
boolean			lb_retorno = FALSE,lb_encontrado,lb_enabled,lb_visible
datawindow		ldw_objeto
tab				ltb_objeto
userobject		luo_objeto
commandbutton	lcb_objeto

string		ls_nombre

ls_nombre = adg_objeto.ClassName()

lb_encontrado = of_stateobjeto(ls_nombre,lb_visible,lb_enabled)

IF lb_encontrado = FALSE THEN
	lb_enabled = TRUE
	lb_encontrado = TRUE
END IF

CHOOSE CASE adg_objeto.TypeOf()
	CASE datawindow!
		ldw_objeto = adg_objeto
	
	IF lb_visible = TRUE THEN
		ldw_objeto.visible = TRUE
		IF lb_visible = TRUE THEN
			ldw_objeto.enabled = TRUE
		END IF
	END IF
	
	CASE tab!
		ltb_objeto = adg_objeto
		
		IF lb_visible = TRUE THEN
			ltb_objeto.visible = TRUE
			IF lb_visible = TRUE THEN
				ltb_objeto.enabled = TRUE
			END IF
		END IF
	CASE userobject!
		luo_objeto = adg_objeto
		
		IF lb_visible = TRUE THEN
			luo_objeto.visible = TRUE
			IF lb_visible = TRUE THEN
				luo_objeto.enabled = TRUE
			END IF
		END IF
		
	CASE commandbutton!, picturebutton!
		lcb_objeto = adg_objeto
		
		IF lb_visible = TRUE THEN
			lcb_objeto.visible = TRUE
			IF lb_enabled = TRUE THEN
				lcb_objeto.enabled = TRUE
			END IF
		END IF
	
	CASE ELSE
		lb_encontrado = FALSE
END CHOOSE

RETURN lb_encontrado
end function

public function boolean of_isvalidmenu ();RETURN IsValid(im_menu)
end function

on n_cst_winsrv_mantenim.create
call super::create
TriggerEvent( this, "constructor" )
end on

on n_cst_winsrv_mantenim.destroy
TriggerEvent( this, "destructor" )
call super::destroy
end on


forward
global type u_cst_datawindow from userobject
end type
type pb_nuevo from u_pb within u_cst_datawindow
end type
type pb_bloquear from u_pb within u_cst_datawindow
end type
type pb_imprimir from u_pb within u_cst_datawindow
end type
type pb_borrar from u_pb within u_cst_datawindow
end type
type pb_modificar from u_pb within u_cst_datawindow
end type
type pb_alta from u_pb within u_cst_datawindow
end type
end forward

global type u_cst_datawindow from userobject
integer width = 1061
integer height = 588
long backcolor = 67108864
string text = "none"
long tabtextcolor = 33554432
long picturemaskcolor = 536870912
pb_nuevo pb_nuevo
pb_bloquear pb_bloquear
pb_imprimir pb_imprimir
pb_borrar pb_borrar
pb_modificar pb_modificar
pb_alta pb_alta
end type
global u_cst_datawindow u_cst_datawindow

on u_cst_datawindow.create
this.pb_nuevo=create pb_nuevo
this.pb_bloquear=create pb_bloquear
this.pb_imprimir=create pb_imprimir
this.pb_borrar=create pb_borrar
this.pb_modificar=create pb_modificar
this.pb_alta=create pb_alta
this.Control[]={this.pb_nuevo,&
this.pb_bloquear,&
this.pb_imprimir,&
this.pb_borrar,&
this.pb_modificar,&
this.pb_alta}
end on

on u_cst_datawindow.destroy
destroy(this.pb_nuevo)
destroy(this.pb_bloquear)
destroy(this.pb_imprimir)
destroy(this.pb_borrar)
destroy(this.pb_modificar)
destroy(this.pb_alta)
end on

type pb_nuevo from u_pb within u_cst_datawindow
integer x = 379
integer y = 20
integer width = 402
integer height = 224
integer taborder = 20
integer textsize = -10
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "none"
boolean originalsize = true
alignment htextalign = left!
end type

type pb_bloquear from u_pb within u_cst_datawindow
integer x = 379
integer y = 20
integer width = 402
integer height = 224
integer taborder = 20
integer textsize = -10
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "none"
boolean originalsize = true
alignment htextalign = left!
end type

type pb_imprimir from u_pb within u_cst_datawindow
integer x = 754
integer y = 28
integer width = 402
integer height = 224
integer taborder = 30
integer textsize = -10
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "none"
boolean originalsize = true
alignment htextalign = left!
end type

type pb_borrar from u_pb within u_cst_datawindow
integer x = 425
integer y = 100
integer width = 402
integer height = 224
integer taborder = 30
integer textsize = -10
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "none"
boolean originalsize = true
alignment htextalign = left!
end type

type pb_modificar from u_pb within u_cst_datawindow
integer x = 261
integer y = 28
integer width = 402
integer height = 224
integer taborder = 20
integer textsize = -10
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "none"
boolean originalsize = true
alignment htextalign = left!
end type

type pb_alta from u_pb within u_cst_datawindow
integer x = 18
integer y = 4
integer width = 174
integer height = 92
integer taborder = 10
integer textsize = -10
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
string text = "none"
boolean originalsize = true
alignment htextalign = left!
end type


forward
global type u_pb from picturebutton
end type
end forward

global type u_pb from picturebutton
integer width = 402
integer height = 224
integer textsize = -10
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
boolean originalsize = true
alignment htextalign = left!
end type
global u_pb u_pb

on u_pb.create
end on

on u_pb.destroy
end on


forward
global type wc_winmenu from window
end type
end forward

global type wc_winmenu from window
integer width = 3566
integer height = 1648
boolean titlebar = true
boolean controlmenu = true
boolean minbox = true
boolean maxbox = true
boolean resizable = true
long backcolor = 67108864
string icon = "AppIcon!"
boolean center = true
end type
global wc_winmenu wc_winmenu

on wc_winmenu.create
end on

on wc_winmenu.destroy
end on


forward
global type wc_winmenu from window
end type
end forward

global type wc_winmenu from window
integer width = 3566
integer height = 1648
boolean titlebar = true
boolean controlmenu = true
boolean minbox = true
boolean maxbox = true
boolean resizable = true
long backcolor = 67108864
string icon = "AppIcon!"
boolean center = true
end type
global wc_winmenu wc_winmenu

on wc_winmenu.create
end on

on wc_winmenu.destroy
end on


release 8;
datawindow(units=0 timer_interval=0 color=67108864 processing=0 HTMLDW=no print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no )
header(height=160 color="536870912" )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=72 color="536870912" )
table(column=(type=long update=yes updatewhereclause=yes key=yes name=syspermopcion_permid dbname="syspermopcion.permid" )
 column=(type=long update=yes updatewhereclause=yes name=perfil dbname="syspermopcion.perfil" )
 column=(type=long update=yes updatewhereclause=yes name=usuario dbname="syspermopcion.usuario" )
 column=(type=datetime update=yes updatewhereclause=yes name=syspermopcion_feccrereg dbname="syspermopcion.feccrereg" )
 column=(type=char(25) update=yes updatewhereclause=yes name=syspermopcion_codusucid dbname="syspermopcion.codusucid" )
 column=(type=char(1) update=yes updatewhereclause=yes name=accion dbname="syspermopcion.accion" values="Activo	E/Inhabilitado	D/Invisible	I/" )
 column=(type=long updatewhereclause=yes name=opcid dbname="sysopcion.opcid" )
 column=(type=long update=yes updatewhereclause=yes name=syspermopcion_opcid dbname="syspermopcion.opcid" )
 column=(type=char(25) updatewhereclause=yes name=nombrew dbname="sysopcion.nombrew" )
 column=(type=char(25) updatewhereclause=yes name=nombrewpadre dbname="sysopcion.nombrewpadre" )
 column=(type=char(50) updatewhereclause=yes name=objeto dbname="sysopcion.objeto" )
 column=(type=char(25) updatewhereclause=yes name=tipo_obj dbname="sysopcion.tipo_obj" )
 column=(type=char(50) updatewhereclause=yes name=literal_obj dbname="sysopcion.literal_obj" )
 column=(type=char(25) updatewhereclause=yes name=codtran dbname="sysopcion.codtran" )
 column=(type=datetime updatewhereclause=yes name=sysopcion_feccrereg dbname="sysopcion.feccrereg" )
 column=(type=char(25) updatewhereclause=yes name=sysopcion_codusucid dbname="sysopcion.codusucid" )
 retrieve="  SELECT syspermopcion.permid,   
         syspermopcion.perfil,   
         syspermopcion.usuario,   
         syspermopcion.feccrereg,   
         syspermopcion.codusucid,   
         syspermopcion.accion,   
         sysopcion.opcid,   
         syspermopcion.opcid,   
         sysopcion.nombrew,     
         sysopcion.nombrewpadre,  
         sysopcion.objeto,   
         sysopcion.tipo_obj,   
         sysopcion.literal_obj,   
         sysopcion.codtran,   
         sysopcion.feccrereg,   
         sysopcion.codusucid  
    FROM sysopcion,   
         OUTER (syspermopcion)
   WHERE ( sysopcion.opcid = syspermopcion.opcid )
" update="syspermopcion" updatewhere=0 updatekeyinplace=no  sort="opcid A perfil A usuario A " )
group(level=1 header.height=188 trailer.height=4 by=("nombrew" , "objeto" , "opcid" ) header.color="67108864" trailer.color="536870912" )
text(band=header alignment="2" text="OBJETO:" border="4" color="33554432" x="18" y="96" height="52" width="654" html.valueishtml="0"  name=t_1 visible="1~tif(rowcount() = 0,0,1)"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="67108864" )
text(band=header alignment="0" text="Permisos sobre los objetos de ventana:" border="0" color="16777215" x="0" y="4" height="64" width="2126" html.valueishtml="0"  name=t_cabecera visible="1"  font.face="Tahoma" font.height="-10" font.weight="700"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="8421504" )
text(band=header.1 alignment="2" text="Perfil:" border="4" color="33554432" x="119" y="132" height="48" width="837" html.valueishtml="0"  name=t_2 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="67108864" )
text(band=header.1 alignment="2" text="Usuario:" border="4" color="33554432" x="960" y="132" height="48" width="581" html.valueishtml="0"  name=t_3 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="67108864" )
text(band=header.1 alignment="2" text="Valor:" border="4" color="33554432" x="1550" y="132" height="48" width="270" html.valueishtml="0"  name=t_4 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="67108864" )
column(band=header.1 id=13 alignment="0" tabsequence=32766 border="0" color="33554432" x="18" y="4" height="52" width="873" format="[general]" html.valueishtml="0"  name=literal_obj visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="700"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="67108864" )
column(band=detail id=2 alignment="0" tabsequence=10 border="5" color="33554432" x="119" y="4" height="60" width="837" format="[general]" html.valueishtml="0" protect="0~tif(not isnull(usuario) ,1,0)"  name=perfil visible="1" dddw.name=d_dddw_admonsistema dddw.displaycolumn=perdescri dddw.datacolumn=perid dddw.percentwidth=0 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=no dddw.case=any dddw.imemode=0 dddw.vscrollbar=yes dddw.autoretrieve=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="16777215" )
column(band=detail id=3 alignment="0" tabsequence=20 border="5" color="33554432" x="960" y="4" height="60" width="581" format="[general]" html.valueishtml="0" protect="0~tif(not isnull(perfil) ,1,0)"  name=usuario visible="1" dddw.name=d_dddw_admonsistema dddw.displaycolumn=perdescri dddw.datacolumn=perid dddw.percentwidth=0 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=no dddw.case=any dddw.imemode=0 dddw.vscrollbar=yes dddw.autoretrieve=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="16777215" )
column(band=detail id=6 alignment="0" tabsequence=30 border="5" color="33554432" x="1550" y="4" height="60" width="270" format="[general]" html.valueishtml="0"  name=accion visible="1" ddlb.limit=0 ddlb.allowedit=no ddlb.case=any ddlb.vscrollbar=yes ddlb.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="16777215" )
compute(band=detail alignment="0" expression="bitmap( if(currentrow() = getrow() , 'Imatges\Columna Derecha.bmp',''))"border="0" color="0" x="23" y="8" height="52" width="64" format="[GENERAL]" html.valueishtml="0"  name=c_fila visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="16777215" )
column(band=header.1 id=14 alignment="0" tabsequence=32766 border="0" color="33554432" x="1239" y="64" height="52" width="581" format="[general]" html.valueishtml="0"  name=codtran visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="67108864" )
column(band=header.1 id=12 alignment="0" tabsequence=32766 border="0" color="33554432" x="1239" y="4" height="52" width="585" format="[general]" html.valueishtml="0"  name=tipo_obj visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="700"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="67108864" )
text(band=header.1 alignment="0" text="Tipo de objeto:" border="0" color="0" x="901" y="4" height="52" width="329" html.valueishtml="0"  name=t_5 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header.1 alignment="0" text="Código objeto:" border="0" color="0" x="905" y="64" height="52" width="329" html.valueishtml="0"  name=t_6 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" netscapelayers="0" )

forward
global type w_ldap from window
end type
type cb_salir from commandbutton within w_ldap
end type
type cb_aceptar from commandbutton within w_ldap
end type
type dw_1 from datawindow within w_ldap
end type
end forward

global type w_ldap from window
integer width = 3177
integer height = 892
string title = "Acceso a SICCOD"
windowtype windowtype = response!
long backcolor = 67108864
boolean center = true
cb_salir cb_salir
cb_aceptar cb_aceptar
dw_1 dw_1
end type
global w_ldap w_ldap

type prototypes
// Funciones externas para codificación - decodificación de strings
FUNCTION long EncodePsw (Ref blob Str) LIBRARY "DELPHI.DLL"
FUNCTION long DecodePsw (Ref blob Str) LIBRARY "DELPHI.DLL"
end prototypes

type variables
Integer ii_correcto = 0		// Se comprueba en cierre de la ventana si entramos o no
Integer ii_quehacer = 0		// 0=Enter aplicación. 1=Cambio password

str_usuario				istr_usuario[]


end variables

forward prototypes
public function integer of_cargarusuario (integer ai_indice_usuario)
end prototypes

public function integer of_cargarusuario (integer ai_indice_usuario);return 0
end function

on w_ldap.create
this.cb_salir=create cb_salir
this.cb_aceptar=create cb_aceptar
this.dw_1=create dw_1
this.Control[]={this.cb_salir,&
this.cb_aceptar,&
this.dw_1}
end on

on w_ldap.destroy
destroy(this.cb_salir)
destroy(this.cb_aceptar)
destroy(this.dw_1)
end on

event open;integer								i, li_total, li_fila
str_usuario							lstr_usuario[]
datastore							lds_datos

lds_datos = Create DataStore
lds_datos =  Message.PowerObjectParm

li_total = lds_datos.Rowcount()

IF li_total <= 0 THEN
	RETURN -1
END IF

lds_datos.RowsCopy(1,li_total,Primary!,dw_1,1,Primary!)

/*
li_total = UpperBound(lstr_usuario)

FOR i = 1 TO li_total
	li_fila = dw_1.InsertRow(0)
	dw_1.SetItem(li_fila,"usuario",lstr_usuario[i].as_nombre)
	dw_1.SetItem(li_fila,"usuid",lstr_usuario[i].as_usuid)
	dw_1.SetItem(li_fila,"perfil",lstr_usuario[i].as_perfil)
	dw_1.SetItem(li_fila,"estado",lstr_usuario[i].as_activo)
	dw_1.SetItem(li_fila,"indice",i)
NEXT
*/
end event

type cb_salir from commandbutton within w_ldap
integer x = 1902
integer y = 636
integer width = 402
integer height = 112
integer taborder = 30
integer textsize = -10
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
string text = "Salir"
end type

event clicked;Message.LongParm = -1
CLOSE(PARENT)
end event

type cb_aceptar from commandbutton within w_ldap
integer x = 549
integer y = 636
integer width = 402
integer height = 112
integer taborder = 20
integer textsize = -10
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
boolean enabled = false
string text = "Aceptar"
end type

event clicked;integer		li_indice, li_fila, li_ret

li_fila = dw_1.GetSelectedRow(0)

IF li_fila > 0 THEN
	li_indice = dw_1.GetItemNumber(li_fila,"indice")
	Message.LongParm = li_indice
	CLOSE(PARENT)
END IF
end event

type dw_1 from datawindow within w_ldap
integer x = 18
integer y = 4
integer width = 3109
integer height = 548
integer taborder = 10
string title = "none"
string dataobject = "d_lista_usuarios"
boolean livescroll = true
borderstyle borderstyle = stylelowered!
end type

event clicked;integer				i, li_total

IF row > 0 THEN
	li_total = RowCount()
	FOR i = 1 TO li_total
		dw_1.SetItem(i,"seleccionar","N")
	NEXT
	cb_aceptar.Enabled = (dw_1.GetItemString(row,"estado")="A")
	dw_1.SetItem(row,"seleccionar","S")
	SelectRow(0,FALSE)
	SelectRow(row,TRUE)
END IF
end event


release 10.5;
datawindow(units=0 timer_interval=0 color=1073741824 processing=0 HTMLDW=no print.printername="" print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.canusedefaultprinter=yes print.prompt=no print.buttons=no print.preview.buttons=no print.cliptext=no print.overrideprintjob=no print.collate=yes print.preview.outline=yes hidegrayline=no )
header(height=64 color="67108864" )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=96 color="536870912" )
table(column=(type=char(50) updatewhereclause=yes name=usuario dbname="usuario" )
 column=(type=char(35) updatewhereclause=yes name=perfil dbname="perfil" )
 column=(type=char(10) updatewhereclause=yes name=usuid dbname="usuid" )
 column=(type=number updatewhereclause=yes name=indice dbname="indice" )
 column=(type=char(1) updatewhereclause=yes name=estado dbname="estado" values="Activo	A/Revocado	R/Inactivo	I/De baja	B/De baja	D/" )
 column=(type=char(1) updatewhereclause=yes name=seleccionar dbname="seleccionar" values="	S/	N" )
 )
text(band=header alignment="0" text="Perfil" border="4" color="16711680" x="1408" y="4" height="56" width="800" html.valueishtml="0"  name=perfil_t visible="1"  font.face="Tahoma" font.height="-9" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=header alignment="0" text="Nombre" border="4" color="16711680" x="261" y="4" height="56" width="1143" html.valueishtml="0"  name=usuario_t visible="1"  font.face="Tahoma" font.height="-9" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=header alignment="0" text="Elegir" border="4" color="16711680" x="23" y="4" height="56" width="219" html.valueishtml="0"  name=t_1 visible="1"  font.face="Tahoma" font.height="-9" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=header alignment="0" text="Usuario" border="4" color="16711680" x="2213" y="4" height="56" width="361" html.valueishtml="0"  name=usuid_t visible="1"  font.face="Tahoma" font.height="-9" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=1 alignment="0" tabsequence=32766 border="0" color="33554432" x="261" y="4" height="84" width="1143" format="[general]" html.valueishtml="0"  name=usuario visible="1" edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=no edit.autohscroll=yes edit.displayonly=yes  font.face="Tahoma" font.height="-9" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=2 alignment="0" tabsequence=32766 border="0" color="33554432" x="1408" y="4" height="84" width="800" format="[general]" html.valueishtml="0"  name=perfil visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.autohscroll=yes edit.displayonly=yes  font.face="Tahoma" font.height="-9" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=6 alignment="2" tabsequence=10 border="0" color="33554432" x="78" y="16" height="64" width="64" format="[general]" html.valueishtml="0"  name=seleccionar visible="1" checkbox.text="" checkbox.on="S" checkbox.off="N" checkbox.scale=no checkbox.threed=yes  font.face="Tahoma" font.height="-9" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=3 alignment="0" tabsequence=32766 border="0" color="33554432" x="2213" y="4" height="84" width="361" format="[general]" html.valueishtml="0"  name=usuid visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.autohscroll=yes edit.displayonly=yes  font.face="Tahoma" font.height="-9" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" encodeselflinkargs="1" netscapelayers="0" pagingmethod=0 generatedddwframes="1" )
xhtmlgen() cssgen(sessionspecific="0" )
xmlgen(inline="0" )
xsltgen()
jsgen()
export.xml(headgroups="1" includewhitespace="0" metadatatype=0 savemetadata=0 )
import.xml()
export.pdf(method=0 distill.custompostscript="0" xslfop.print="0" )
export.xhtml()
 


















































































































global type f_enabled from function_object
end type

forward prototypes
global function integer f_enabled (datawindow adw_actual)
end prototypes

global function integer f_enabled (datawindow adw_actual);/***********************************************************************
* Objetivo : Cambia el color de fondo de todos los campos del datawindow
*				 y les coloca valores positivos y ascendentes al settabOrder
* 
* Sintaxis:  f_enabled(adw_actual)				
********************************************************************/
Integer  li_contador
Integer  li_columnas
string   ls_expresion
string   ls_campo
string   ls_cadena
li_columnas = Integer (adw_actual.describe( "DataWindow.Column.Count") )
adw_actual.SetRedraw(FALSE)
For li_contador = 1  to  li_columnas
	adw_actual.settaborder( li_contador , li_contador )
	ls_expresion = "#" + string(li_contador) + ".Name"
	ls_campo =  adw_actual.Describe( ls_expresion )
//	ls_cadena = ls_campo +  ".Background.color = 16777215"
	adw_actual.Modify( ls_cadena )
Next
adw_actual.SetRedraw( TRUE )
Return 1
end function


global type f_desabled from function_object
end type

forward prototypes
global function integer f_desabled (datawindow adw_actual)
end prototypes

global function integer f_desabled (datawindow adw_actual);/***********************************************************************
* Objetivo : Cambiar el color de fondo de todos los campos del datawindow
*				 y colocarles tabOrder = 0
* Sintaxis:
* 				f_desabled(adw_actual)
********************************************************************/

Integer  li_contador
Integer  li_columnas
string   ls_expresion
string   ls_campo
string   ls_cadena

li_columnas = Integer ( adw_actual.describe( "DataWindow.Column.Count") )

adw_actual.SetRedraw(FALSE)

For li_contador = 1  to  li_columnas
	adw_actual.settaborder( li_contador , 0 )
	ls_expresion = "#" + string(li_contador) + ".Name"
	ls_campo =  adw_actual.Describe( ls_expresion )
//	ls_cadena = ls_campo +  ".Background.color = 12632256"
	adw_actual.Modify( ls_cadena )
Next

adw_actual.SetRedraw( TRUE )

Return 1
end function


forward
global type w_querys_crm from window
end type
type pb_4 from picturebutton within w_querys_crm
end type
type pb_3 from picturebutton within w_querys_crm
end type
type pb_2 from picturebutton within w_querys_crm
end type
type pb_1 from picturebutton within w_querys_crm
end type
type st_registros from statictext within w_querys_crm
end type
type st_1 from statictext within w_querys_crm
end type
type st_actual from statictext within w_querys_crm
end type
type pb_operadores from picturebutton within w_querys_crm
end type
type pb_ejecutar from picturebutton within w_querys_crm
end type
type pb_conceptos from picturebutton within w_querys_crm
end type
type pb_personalizar from picturebutton within w_querys_crm
end type
type pb_aceptar from picturebutton within w_querys_crm
end type
type pb_cancelar from picturebutton within w_querys_crm
end type
type pb_selectall from picturebutton within w_querys_crm
end type
type pb_nueva from picturebutton within w_querys_crm
end type
type p_icono from picture within w_querys_crm
end type
type st_titulo from statictext within w_querys_crm
end type
type st_fondo from statictext within w_querys_crm
end type
type dw_query from datawindow within w_querys_crm
end type
type pb_deselectall from picturebutton within w_querys_crm
end type
end forward

global type w_querys_crm from window
integer x = 832
integer y = 360
integer width = 2679
integer height = 1208
windowtype windowtype = response!
long backcolor = 67108864
string icon = "AppIcon!"
boolean center = true
event uepreclose ( )
event ueclose ( )
event type integer uevalidarquery ( )
event uequerymode ( )
event type integer ueselectall ( )
event type integer ueunselectall ( )
pb_4 pb_4
pb_3 pb_3
pb_2 pb_2
pb_1 pb_1
st_registros st_registros
st_1 st_1
st_actual st_actual
pb_operadores pb_operadores
pb_ejecutar pb_ejecutar
pb_conceptos pb_conceptos
pb_personalizar pb_personalizar
pb_aceptar pb_aceptar
pb_cancelar pb_cancelar
pb_selectall pb_selectall
pb_nueva pb_nueva
p_icono p_icono
st_titulo st_titulo
st_fondo st_fondo
dw_query dw_query
pb_deselectall pb_deselectall
end type
global w_querys_crm w_querys_crm

type variables

// Booleana que me informa si hemos ejecutado el ueClose
Boolean						ib_uePreClose = False

Protected:

// Nos indica si tenemos que cerrar la ventana de mantenimiento.
Boolean						ib_CerrarVentana = False

// Variable que nos indica si es la primera vez que abrimos la ventana de 
// criterios. Si es la primera vez y cancelamos entonces cerramos la
// ventana. Las siguientes veces no.
Boolean						ib_PrimeraVez = True

Int		ii_Keys[], ii_dsKeys[]
String	is_Keys[], is_KeyDBName[]

// Ventana dw Query
String	is_wQuerys = "w_Querys_crm"
// Ventana de Seleccción de Conceptos
String	is_WSelConcepto  = "w_seleccion_concepto_busqueda"
// Ventana de Personalización
String	is_WPersonalizar = "w_personalizar_concepto_busqueda"

// Atributos del servicio
//s uo_dwsrv_querys_attr		inv_QueryAttr

// Variable q nos informa si el criterio ha de tener condiciones
Boolean	ib_VerificarCondicionesCriterio = False

uo_dwsrv_utils			luo_srvutils

string					is_where

//variables del UO_DWSRV_QUERYMODE
n_cst_querymode                  inv_srvQueryMode
// Estructura de parametros para modificar el Select de la DW
uo_appsrv_parametres	SQLParams

// Primera Columna del Query
Integer		ii_PrimeraColumna = 1
String		ObjType = "DW"

//variables de UO_DWSRV_SELECTIONS

public:
// Definición del tipo de selección:
Integer		MultiSelect = 1

// Constantes:
CONSTANT Integer		dwNoSelect = 0
CONSTANT Integer		dwSingleSelect = 1
CONSTANT Integer		dwMultiSelect = 2

Integer		ActualRow
Integer		LastClickedRow = 1
Boolean		OnClick = FALSE
CONSTANT Integer		dwExtendedSelect = 3

/*VARIABLES PROPIAS*/
//Estado del datawindow
integer				ii_estado
CONSTANT integer 	II_TRASQUERY = 1
CONSTANT integer  II_ANTESQUERY = 2

str_querymode		istr_querymode

end variables

forward prototypes
public function string of_generarparametrosquery ()
public function integer of_modificarwhere (uo_appsrv_parametres newclausula)
public function integer of_addwhere (string as_newclausule)
public function integer of_initquerymode (string as_dataobject)
public subroutine selectdwrows (integer prow)
public subroutine selectrangerow (integer prow, integer plastclickedrow)
public function long getselectedrows (ref long prows[])
public function integer of_generawheredw ()
end prototypes

event uepreclose();// Evento que se ejecuta antes de ejecutar el Close de la Window
ib_uePreClose = True

end event

event ueclose();// Antes de cerrar llamamos a uePreClose
This.Event uePreClose()

CloseWithReturn(this, istr_querymode)

end event

event type integer uevalidarquery();// any				ls_text
Int				i, j, MaxRows, Posicio, li_ret, TotalCols
blob				lblb_blob
String			TipCol, Value, ls_ColName, ls_Text
Boolean			lb_HayCondicion
dwItemStatus 	l_Status
n_cst_string	Str
string			ls_mensaje,ls_mensaje2
CONSTANT	string	LS_TITULO="Criterios de Selección"


SetPointer(HourGlass!)

// ManelP. 31/7/2002
// Comprobamos si han entrado alguna condición
MaxRows = dw_query.RowCount()
TotalCols = luo_srvutils.GetTotalColumns()


If ib_VerificarCondicionesCriterio Then
	lb_HayCondicion = False
	for i=1 To MaxRows
		for j=1 To TotalCols
			If dw_query.Describe("#" + string(j) + ".Visible") = '0' Then Continue
			dw_query.SetRow(i)
			dw_query.SetColumn(j)
			ls_Text = dw_query.GetText()
			If IsNull(ls_Text) Or LenA(Trim(ls_Text)) = 0 Then Continue
			lb_HayCondicion = True
		next
	next
	
	If Not lb_HayCondicion Then
		ls_mensaje = "Debe de indicar algun criterio de selección."
		ls_mensaje2 = "No se permite realizar una búsqueda sin ningún criterio de selección."
		If isValid(App.srvMsgBox) Then
			App.srvMsgBox.MessageBox(LS_TITULO,ls_mensaje,ls_mensaje2, StopSign!)
		Else
			MessageBox(LS_TITULO,ls_mensaje+"~r~n"+ls_mensaje2, StopSign!)
		End If
		Return 0
	End If	
End If

// Comunicamos a la DataWindow padre que estamos haciendo un cambio de estado.
//dw_query.Event Dynamic ueChangeEstat(this, offQUERYMODE)

dw_query.SetRedraw(FALSE)

// Substituimos los * por % y le colocamos un LIKE
for i=1 to TotalCols
	TipCol = lower(LeftA(dw_query.Describe("#" + string(i) + ".ColType"), 4))
	if TipCol <> "char" then CONTINUE

	for j=1 to MaxRows
		dw_query.SetRow(j)
		dw_query.SetColumn(i) 
		Value = dw_query.GetText()
		if Value = "" then CONTINUE
		// Buscamos si tiene *
		Posicio = PosA(Upper(Value), "*")
		if Posicio <> 0 then
			// Substituimos el * por %
			Value = Str.Replace(Value, "*", "%")
			// Añadimos un '%' al principio.
			// Value = '%'+Value
			// Si no tiene el LIKE le ponemos
			if PosA(Upper(Value), "LIKE") = 0 then Value = "LIKE '" + Value + "'"
		end if
		dw_query.SetText(Value)
	next
next
 
// Enviamos al componente los valores entrados
for i=1 To MaxRows
	for j=1 To TotalCols
		If dw_query.Describe("#" + string(j) + ".Visible") = '0' Then Continue
		dw_query.SetRow(i)
		dw_query.SetColumn(j)
		ls_Text = dw_query.GetText()
		If IsNull(ls_Text) Or LenA(Trim(ls_Text)) = 0 Then Continue
		li_Ret = inv_srvQueryMOde.of_SetText(i,j,ls_text)
	next
next

dw_query.Object.datawindow.querymode = 'no'

li_ret = inv_srvQueryMode.of_QueryMode(False)

// Miramos si tenemos alguna clausula
If LenA(Trim(is_Where)) > 0 Then 
	li_Ret = inv_srvQueryMode.of_AddWhere(is_Where)
End If

// Añadimos los parámetros
//S dw_query.Event ueSetParametros(SQLParams)

// Miramos si tenemos cargada la estructura de parametros del SQL
of_ModificarWhere(SQLParams)

li_Ret = inv_srvQueryMode.of_RetrieveBlob(lblb_blob)
If li_Ret < 0 Then
	ls_mensaje = "No ha finalizado correctamente la búsqueda de registros."
	If isValid(App.srvMsgBox) Then
		App.srvMsgBox.MessageBox(LS_TITULO,ls_mensaje,StopSign!,Ok!)
	Else
		MessageBox(LS_TITULO,ls_mensaje,StopSign!,Ok!)
	End If
	ii_PrimeraColumna = 0
Else	
	dw_query.Reset()
	dw_query.SetFullState(lblb_blob)
	
	// Acciones a Realizar despues del Retrieve
//S 	dw_query.Event uePostRetrieve()
	/*******************************************************/
	// PBD 16.01.2006 ELIMINACIÓN SERVICIOS GLOBALES
	/*******************************************************/
	/* COMENTO ESTA PARTE PORQUE LA FUNCIÓN DEVOLVÍA EL VALOR
	DE UNA COLUMNA QUE NO ESTÁ VISIBLE, CON LO QUE ESO Y NADA
	ES LO MISMO
	// Recuperamos el Layout.
	If isValid(dw_query.srvQuerys) Then
		// Recuperamos el dibujo del dataobject tal y como estaba la ultima vez
		
		// ManelP. 17/06/2002. Optimización criterios de seleccion
		// dw_query.srvQuerys.of_RecuperarLayout()
		
		// Obtenemos la columna con la X mas pequeña
		// dw_query.srvQuerys.inv_QueryInfo.of_GetColMinName(ls_ColName)		
		App.srvSistema.inv_SysQueryInfo.of_GetColMinName(ls_colName)
	End If
	*/
	// Informamos del nombre de la primera columna
	ii_PrimeraColumna = luo_srvutils.GetColNumber(ls_ColName)
	
	// Comprobamos si se ha parado por exceder el maximo de rows
	If inv_srvQueryMode.of_IsRetrieveStopped() Then
		ls_mensaje = "El número de registros seleccionados supera el máximo establecido."
		ls_mensaje2 = "El proceso de recuperación de registros se ha interrumpido."
		If isValid(App.srvMsgBox) Then
			App.srvMsgBox.MessageBox(LS_TITULO,ls_mensaje,ls_mensaje2, Information!)
		Else
			MessageBox(LS_TITULO,ls_mensaje+ ls_mensaje2, Information!)		
		End If
	End If		
End If

//sEstat = offQUERYMODE
luo_srvutils.SetTabOrder0()

//sUpdateDisparadors()

// Nos posicionamos en la primera Row
if dw_query.RowCount() >= 1 Then
	dw_query.ScrollToRow(1)
	dw_query.SetRow(1)
End If
/*PBD 04.10.08 Si no hay datos, mensaje y limpia la ventana*/
IF li_Ret = 0 THEN
	ls_mensaje ="No se han encontrado datos para el criterio seleccionado"
	IF isValid(App.srvMsgBox) THEN
		App.srvMsgBox.MessageBox(LS_TITULO,ls_mensaje,StopSign!,Ok!)
	ELSE
		MessageBox(LS_TITULO,ls_mensaje,StopSign!,Ok!)
	END IF
	
	EVENT ueQueryMode()
ELSE
	ii_estado = II_TRASQUERY
END IF
/*FIN PBD 04.10.08*/
dw_query.SetRedraw(TRUE)
dw_query.SetFocus()
SetPointer(Arrow!)


return 1

end event

event uequerymode();integer			i

dw_query.Reset()
dw_query.Dataobject = istr_querymode.str_dataobject

multiselect = istr_querymode.str_seleccion

FOR i = 1 TO 8
	dw_query.InsertRow(0)
NEXT

dw_query.SetRow(1)
dw_query.SetFocus()
pb_ejecutar.Default = TRUE	

luo_srvutils.dw = dw_query
luo_srvutils.objType = "DW"

ii_estado = II_ANTESQUERY
end event

event type integer ueselectall();if not Enabled then return -1
if not isValid(dw_query) then return -1
if this.MultiSelect < 2 then return -1

dw_query.SelectRow(0, TRUE)

return 1

end event

event type integer ueunselectall();if not Enabled then return -1
if not isValid(dw_query) then return -1
if this.MultiSelect < 2 then return -1

dw_query.SelectRow(0, False)

return 1

end event

public function string of_generarparametrosquery ();////////////////////////////////////////////////////////////////////////////////
// Función		: of_CargarParametrosQuery
//	Comentarios	: Coge los campos que forman parte de la clave de la DataStore
//					  utilizada en el Query y monta un string con los valores de
//					  las PK seleccionadas
//
//	Parámetros	: la_Values -> Array donde guardaremos los valores seleccionados
//
// Retorno		: 1 - Ok
//
// Modificaciones:
//		Fecha		Autor		Comentarios
//		--------	--------	--------------------------------------------------------
//		20/04/01	Manel		Creacion del script
////////////////////////////////////////////////////////////////////////////////

INTEGER	li_tab, li_row, li_col, li_tab2, li_keys, li_rc
STRING	ls_col, ls_sort, ls_string
BOOLEAN	lb_enviadas
Any		la_valuesAnt[], la_values[]

Long		ll_where[], incWhere = 0

// Coger campos clave de la DataWindow
luo_srvutils.getKeyColumns(ii_Keys[])
FOR li_tab = 1 TO UpperBound(ii_Keys[])
	is_Keys[li_tab] = luo_srvutils.getColName(ii_Keys[li_tab])
NEXT

// Mirar la posición de esos campos clave en la DataStore
FOR li_tab = 1 TO UpperBound(is_Keys[])
	FOR li_tab2=1 TO luo_srvutils.GetTotalColumns()
		ls_col = luo_srvutils.getColName(li_tab2)
		IF ls_col = is_Keys[li_tab] THEN
			ii_dsKeys[li_tab] = li_tab2
			EXIT
		END IF
	NEXT
NEXT

// Ordenar la DataStore por los campos clave, para sólo enviar una vez cada registro
FOR li_tab = 1 TO UpperBound(ii_dsKeys[])
	IF LenA(TRIM(ls_Sort)) > 0 THEN ls_Sort = ls_Sort + ', '
	ls_Sort = ls_Sort + '#'+STRING(ii_dsKeys[li_tab]) + ' A'
NEXT

li_rc = dw_query.SetSort(ls_Sort)
li_rc = dw_query.Sort()

// Poner los valores de los campos clave en la datawindow
FOR li_tab = 1 TO dw_query.RowCount()
	
	// Mirar si ya se han enviado las keys
	FOR li_keys = 1 TO UpperBound(ii_dsKeys[])
		la_Values[li_keys] = dw_query.Object.Data[li_tab, ii_dsKeys[li_keys]]
	NEXT
	
	IF UpperBound(la_valuesAnt[]) > 0 THEN
		lb_enviadas = TRUE
		FOR li_keys = 1 TO UpperBound(ii_dsKeys[])
			IF la_valuesAnt[li_keys] <> la_Values[li_keys] THEN
				lb_enviadas = FALSE
				EXIT
			END IF
		NEXT
		IF lb_enviadas THEN CONTINUE
	END IF

	// Guardamos el valor de la key en la array
	incWhere ++
	ll_where[IncWhere] = dw_query.Object.Data[li_tab, ii_dsKeys[1]]
	
	// Guardar los valores anteriores para no volverlos a enviar
	FOR li_keys = 1 TO UpperBound(ii_dsKeys[])
		la_valuesAnt[li_keys] = la_Values[li_keys]
	NEXT
	
NEXT

If incWhere = 0 Then Return ""

// Montamos el String
ls_String = ""
For li_tab = 1 To UpperBound(ll_where[])
	ls_String = ls_string + string(ll_where[li_tab]) + ","
Next

// Quitamos la ultima coma
ls_String = MidA(ls_string, 1, LenA(ls_string) - 1)

Return ls_String
return ""
end function

public function integer of_modificarwhere (uo_appsrv_parametres newclausula);Integer			li_Total, li_posicio,li
String			ls_Nom, ls_NomSlave, ls_Valor, ls_Tipo, ls_Sentencia,ls_compara
String			DBName, DBTable
String			ls_Formato, ls_FormatoFecha, ls_FormatoHora,ls_valor1,ls_valor2
Boolean			lb_updProperties = False
n_cst_string	lnv_string

// comprobamos que la datastore asociada tiene elementos 
if NewClausula.GetParmNumber() = 0 then return -1

SetPointer(HourGlass!)

//if isValid(App.srvDefValues) then
//	App.srvDefValues.GetValue("FORMATOFECHAS", ls_FormatoFecha)
//	App.srvDefValues.GetValue("FORMATOHORAS", ls_FormatoHora)
//end if

if ls_FormatoFecha = "" or isnull(ls_FormatoFecha) then
	ls_FormatoFecha = "YYYY/MM/DD"
end if

if ls_FormatoHora = "" or isnull(ls_FormatoHora) then
	ls_FormatoHora = "HH:MM:SS"
end if

li_Total = NewClausula.GetParmNumber()
for li=1 to li_Total
	ls_Nom = NewClausula.getParmNames(li)
	ls_NomSlave = NewClausula.getParmNameSlave(li)
	NewClausula.getValor(ls_Nom, ls_Valor)
	ls_Tipo    = NewClausula.getColType(li)
	ls_compara = NewClausula.getColCompara(li)
	if trim(ls_compara) = "" OR isnull(ls_compara) then
	   ls_compara = " = "
	end if
	if ObjType = "DW" then
		ls_Nom = luo_srvutils.GetColDBName(luo_srvutils.GetColNumber(ls_Nom))
	else
//s		ls_Nom = ds.dwUtils.GetColDBName(ds.dwUtils.GetColNumber(ls_Nom))
	end if	
	IF Not IsNull( ls_NomSlave ) AND LenA( ls_NomSlave ) > 0 THEN
		// Buscamos el nombre del campo en la base de datos.
		if ObjType = "DW" then
			ls_Nom = luo_srvutils.GetColDBName(luo_srvutils.GetColNumber(ls_NomSlave))
		else
//S			ls_Nom = ds.dwUtils.GetColDBName(ds.dwUtils.GetColNumber(ls_NomSlave))
		end if
	END IF
	
// Comprobamos los campos para formatear correctamente
	
// Si la sentencia like no tiene * le ponemos uno por delante y por detras
	
	li_posicio=PosA(ls_valor,"*")
	lnv_string.replace(ls_valor,"*","%")
	if ls_compara = "LIKE" and li_posicio = 0 Then
		ls_Valor = "%" + trim(ls_Valor) + "%"
	end if
	
// eliminamos cualquier caracter que nos pueda llevar a confusión
	If lower(ls_tipo) <> 'select' Then
		ls_Valor = lnv_string.replace(ls_Valor,";",",")
		ls_Valor = lnv_string.replace(ls_Valor,"'","")
		ls_Valor = lnv_string.replace(ls_Valor,"~"","")
	End If

// si es tipo texto le añadimos comillas simples a los lados de la coma de separción de valores
	if LeftA(ls_Tipo, 4) = "char" or LeftA(ls_Tipo, 4) = "time" or LeftA(ls_Tipo, 4) = "date" then
		ls_Valor = lnv_string.replace(ls_Valor,",","','")
	end if
		
	ls_valor2 = ""

// formateamos los campos con valores date etc.
	choose case LeftA(ls_Tipo, 4)
		case "date"
			if LeftA(ls_Tipo,5) = "datet" then
				ls_Formato = ls_FormatoFecha + " " + ls_FormatoHora
	  			DO UNTIL ls_Valor = ""
					if ls_valor2 <> "" then
						ls_valor2 = ls_valor2 + "','"
					end if
					ls_valor1 = lnv_string.of_gettoken(ls_valor,"','")
					ls_valor2 = ls_valor2 + String(dateTime(date(ls_Valor1)),ls_formato) 
	      	LOOP
				ls_valor = ls_valor2
			else
				ls_Formato = ls_FormatoFecha
	  			DO UNTIL ls_Valor = ""
					if ls_valor2 <> "" then
						ls_valor2 = ls_valor2 + "','"
					end if
					ls_valor1 = lnv_string.of_gettoken(ls_valor,"','")
					ls_valor2 = ls_valor2 + String(Date(ls_Valor1), ls_Formato) 
	      	LOOP
				ls_valor = ls_valor2
				end if
		case "time"
				ls_Formato = ls_FormatoHora
	  			DO UNTIL ls_Valor = ""
					if ls_valor2 <> "" then
						ls_valor2 = ls_valor2 + "','"
					end if
					ls_valor1 = lnv_string.of_gettoken(ls_valor,"','")
					ls_valor2 = ls_valor2 + String(Time(ls_Valor1), ls_Formato) 
	      	LOOP
				ls_valor = ls_valor2
	end choose
	
		
	if ls_compara = "BETWEEN" THEN
		ls_Valor = lnv_string.replace(ls_valor,","," and ")
	end if

// finalmente costruimos la sentencia
	choose case LeftA(ls_Tipo, 4)
		case "char"
			if ls_compara = "IN" Then
				ls_Sentencia = ls_Nom + " " + ls_compara + " ('" + ls_valor + "')"
	      else
				ls_Sentencia = ls_Nom + " " + ls_compara + " '" + ls_Valor + "'"				
			end if
		case "date"
			if ls_compara = "IN" Then
				ls_Sentencia = ls_Nom + " " + ls_compara + " ('" + ls_valor + "')"
	      else
				ls_Sentencia = ls_Nom + " " + ls_compara + " '" + ls_Valor + "'"				
			end if
		case "deci", "numb", "long"
			// ManelP. Necesito una clausula para los valores nulos.
			If NOT isNull(ls_valor) Then
				if ls_compara = "IN" Then
					ls_Sentencia = ls_Nom + " " + ls_compara + " (" + ls_valor + ")"
				else
					ls_Sentencia = ls_Nom + " " + ls_compara + ls_Valor 				
				end if
			Else
				ls_Sentencia = ls_Nom + " is Null"
			End If
		case "time"
			if ls_compara = "IN" Then
				ls_Sentencia = ls_Nom + " " + ls_compara + " ('" + ls_valor + "')"
	      else
				ls_Sentencia = ls_Nom + " " + ls_compara + " '" + ls_Valor + "'"				
			end if
		case "sele"
			ls_Sentencia = ls_Nom + " " + ls_compara + " (" + ls_Valor + " )"
	end choose
	
	If of_AddWhere(ls_Sentencia) > 0 Then
		lb_UpdProperties = True
	End If
next

SetPointer(Arrow!)

return 1

end function

public function integer of_addwhere (string as_newclausule);inv_srvQueryMode.of_AddWhere(as_NewClausule)

Return 1

end function

public function integer of_initquerymode (string as_dataobject);///////////////////////////////////////////////////////////////////////////////
// Función		: 	of_initquerymode
//	Comentarios	: 	Inicializa el componete de QueryMode, indicándole el DO y los
//						los parámetros de Seguridad
//	Parámetros	: 
//					  
//	Retorno		:  1, si ok
//					  -1, si tenemos algun problema
//					  
//	Modificaciones:
//		Fecha			Autor		Comentarios
//		----------	--------	-------------------------------------------------------
//		XX/09/2002	JGP		Creación del Script
//		14/11/2002	RJL		Modificación del Script
//
///////////////////////////////////////////////////////////////////////////////

String 	ls_dqsegur, ls_modesegur, ls_tablesegur
n_cst_so_sistemaseguridad	lnv_so_seguridad
App.inv_Connect.of_CreateInstanceSistema(lnv_so_seguridad,	"n_cst_so_sistemaseguridad")

inv_srvQueryMode.of_SetDataObject(as_DataObject)

// Obtiene los códigos dqsegur, modesegur, tablesegur de la tabla "sysquery"
lnv_so_seguridad.of_getdqsegur(as_dataobject, ls_dqsegur, ls_modesegur, ls_tablesegur)
App.inv_Connect.of_DestroyInstanceSistema (lnv_so_seguridad)

if isnull(ls_dqsegur) or ls_dqsegur = ""  then ls_dqsegur = "N"

// Pasamos la información a srvQuerymode
inv_srvQueryMode.of_Setdqsegur(ls_dqsegur, ls_modesegur, ls_tablesegur)

Return 1
end function

public subroutine selectdwrows (integer prow);if not Enabled then return
if not isValid(dw_query) then return

choose case MultiSelect
	case dwNoSelect
		return

	case dwSingleSelect
		dw_query.SelectRow(0, FALSE)
		dw_query.SelectRow(pRow, TRUE)

	case dwMultiSelect
		dw_query.SelectRow(pRow, not dw_query.isSelected(pRow))

	case dwExtendedSelect
		if KeyDown(KeyShift!) then
			if LastClickedRow <> 0 then
//S				SelectRangeRow(pRow, LastClickedRow)
			else
				dw_query.SelectRow(pRow, TRUE)
			end if
		elseif KeyDown(KeyControl!) then
			dw_query.SelectRow(pRow, not dw_query.isSelected(pRow))
		else
			dw_query.SelectRow(0, FALSE)
			dw_query.SelectRow(pRow, TRUE)
		end if

end choose

LastClickedRow = pRow
ActualRow = pRow

end subroutine

public subroutine selectrangerow (integer prow, integer plastclickedrow);Integer		Inici, Final, r

if not Enabled then return
if not isValid(dw_query) then return

Inici = Min(pRow, pLastClickedRow)
Final = Max(pRow, pLastClickedRow)

for r=Inici to Final
	dw_query.SelectRow(r, TRUE)
next

end subroutine

public function long getselectedrows (ref long prows[]);//Devuelve un vector con los identificadores de las filas seleccionadas por el usuario!!!
Long			r, Total
Long			Filas, NullArray[]

Filas = 0
pRows = NullArray

Total = dw_query.RowCount()
for r=Total to 1 step -1
	if dw_query.isSelected(r) then
		Filas ++
		pRows[Filas] = r
	end if
next

return UpperBound(pRows)

end function

public function integer of_generawheredw ();////////////////////////////////////////////////////////////////////////////////
// Función		: of_GeneraWhereDW
//	Comentarios	: Coge los campos que forman parte de la clave de la DataStore
//					  utilizada en el Query y monta un where con la pk y IN(..)
//
//	Parámetros	: (ninguno)
//
// Retorno		: 1 - Ok
//
// Modificaciones:
//		Fecha		Autor		Comentarios
//		--------	--------	--------------------------------------------------------
//		20/04/01	Manel		Creacion del script
////////////////////////////////////////////////////////////////////////////////

INTEGER	li_tab, li_row, li_col, li_tab2, li_keys, li_rc
STRING	ls_col, ls_sort
BOOLEAN	lb_enviadas
Any		la_valuesAnt[], la_values[]

Int		incWhere = 0
Long		ll_Where[], MaxValor = 0

datastore		lds_datos

lds_datos = Create DataStore

lds_datos.DataObject = dw_query.dataobject
lds_datos.object.data = dw_query.object.data.selected

// Coger campos clave de la DataWindow
luo_srvutils.getKeyColumns(ii_Keys[])
FOR li_tab = 1 TO UpperBound(ii_Keys[])
	is_Keys[li_tab] = luo_srvutils.getColName(ii_Keys[li_tab])
	is_KeyDBName[li_tab] = luo_srvutils.GetColDBName(ii_Keys[li_tab])
NEXT

// Mirar la posición de esos campos clave en la DataStore
FOR li_tab = 1 TO UpperBound(is_Keys[])
	FOR li_tab2=1 TO luo_srvutils.GetTotalColumns()
		ls_col = luo_srvutils.getColName(li_tab2)
		IF ls_col = is_Keys[li_tab] THEN
			ii_dsKeys[li_tab] = li_tab2
			EXIT
		END IF
	NEXT
NEXT

// Ordenar la DataStore por los campos clave, para sólo enviar una vez cada registro
FOR li_tab = 1 TO UpperBound(ii_dsKeys[])
	IF LenA(TRIM(ls_Sort)) > 0 THEN ls_Sort = ls_Sort + ', '
	ls_Sort = ls_Sort + '#'+STRING(ii_dsKeys[li_tab]) + ' A'
NEXT

li_rc = lds_datos.SetSort(ls_Sort)
li_rc = lds_datos.Sort()

// Poner los valores de los campos clave en la datawindow
FOR li_tab = 1 TO lds_datos.RowCount()
	
	// Mirar si ya se han enviado las keys
	FOR li_keys = 1 TO UpperBound(ii_dsKeys[])
		la_values[li_keys] = lds_datos.Object.Data[li_tab, ii_dsKeys[li_keys]]
		If isNull(la_values[li_Keys]) Then la_values[li_Keys] = 0
	NEXT
	
	IF UpperBound(la_valuesAnt[]) > 0 THEN
		lb_enviadas = TRUE
		FOR li_keys = 1 TO UpperBound(ii_dsKeys[])
			IF la_valuesAnt[li_keys] <> la_values[li_keys] THEN
				lb_enviadas = FALSE
				EXIT
			END IF
		NEXT
		IF lb_enviadas THEN CONTINUE
	END IF

	// Guardamos el valor de la key en la array
	incWhere ++
	ll_Where[IncWhere] = lds_datos.Object.Data[li_tab, ii_dsKeys[1]]
	If isNull(ll_Where[IncWhere]) Then ll_Where[IncWhere] = 0
	If MaxValor < ll_Where[IncWhere] Then MaxValor = ll_Where[IncWhere]
	
	// Guardar los valores anteriores para no volverlos a enviar
	FOR li_keys = 1 TO UpperBound(ii_dsKeys[])
		la_valuesAnt[li_keys] = la_values[li_keys]
	NEXT
	
NEXT

If incWhere = 0 Then Return 1

// Montamos el Where
//PBD 04.06.23. Para una única clave, que haga un =
long			ll_total
ll_total = UpperBound(ll_Where[])

/*CASO SOCIEDADES, UN ÚNICO ID*/
istr_querymode.str_id = ll_where[1]

IF ll_total = 1 THEN
	is_Where = is_KeyDBName[1]+" = "+String(ll_where[1])
ELSE	
	is_Where = is_KeyDBName[1] + " IN ("
	
	FOR li_tab = 1 TO ll_total
		is_Where += string(ll_Where[li_tab]) + ","
	NEXT
	// Quitamos la ultima coma
	is_Where  = MidA(is_Where, 1, LenA(is_Where) - 1)
	is_Where += ")" 
END IF

RETURN 1
end function

on w_querys_crm.create
this.pb_4=create pb_4
this.pb_3=create pb_3
this.pb_2=create pb_2
this.pb_1=create pb_1
this.st_registros=create st_registros
this.st_1=create st_1
this.st_actual=create st_actual
this.pb_operadores=create pb_operadores
this.pb_ejecutar=create pb_ejecutar
this.pb_conceptos=create pb_conceptos
this.pb_personalizar=create pb_personalizar
this.pb_aceptar=create pb_aceptar
this.pb_cancelar=create pb_cancelar
this.pb_selectall=create pb_selectall
this.pb_nueva=create pb_nueva
this.p_icono=create p_icono
this.st_titulo=create st_titulo
this.st_fondo=create st_fondo
this.dw_query=create dw_query
this.pb_deselectall=create pb_deselectall
this.Control[]={this.pb_4,&
this.pb_3,&
this.pb_2,&
this.pb_1,&
this.st_registros,&
this.st_1,&
this.st_actual,&
this.pb_operadores,&
this.pb_ejecutar,&
this.pb_conceptos,&
this.pb_personalizar,&
this.pb_aceptar,&
this.pb_cancelar,&
this.pb_selectall,&
this.pb_nueva,&
this.p_icono,&
this.st_titulo,&
this.st_fondo,&
this.dw_query,&
this.pb_deselectall}
end on

on w_querys_crm.destroy
destroy(this.pb_4)
destroy(this.pb_3)
destroy(this.pb_2)
destroy(this.pb_1)
destroy(this.st_registros)
destroy(this.st_1)
destroy(this.st_actual)
destroy(this.pb_operadores)
destroy(this.pb_ejecutar)
destroy(this.pb_conceptos)
destroy(this.pb_personalizar)
destroy(this.pb_aceptar)
destroy(this.pb_cancelar)
destroy(this.pb_selectall)
destroy(this.pb_nueva)
destroy(this.p_icono)
destroy(this.st_titulo)
destroy(this.st_fondo)
destroy(this.dw_query)
destroy(this.pb_deselectall)
end on

event open;
istr_querymode = Message.PowerObjectParm

IF istr_querymode.str_addwhere <> "" THEN 
	is_Where = istr_querymode.str_addwhere 
END IF

pb_operadores.visible = istr_querymode.str_nuevo

Event ueQueryMode()
end event

type pb_4 from picturebutton within w_querys_crm
integer x = 1536
integer y = 972
integer width = 101
integer height = 88
integer taborder = 20
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
string picturename = "VCRPrior!"
end type

event clicked;//dw_Query.Event ueMessageRouter("ueRetrocederPosicion")
//
//// JGP_registros: Mostramos el número de registros que se han recuperado
//st_registros.text = string(dw_query.RowCount())

dw_query.ScrollPriorpage( )
st_registros.text = string(dw_query.RowCount())
end event

type pb_3 from picturebutton within w_querys_crm
integer x = 1646
integer y = 972
integer width = 101
integer height = 88
integer taborder = 20
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
string picturename = "VCRNext!"
end type

type pb_2 from picturebutton within w_querys_crm
integer x = 1751
integer y = 972
integer width = 101
integer height = 88
integer taborder = 20
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
string picturename = "VCRLast!"
end type

event clicked;dw_query.scrollToRow(dw_query.RowCount())
dw_query.SelectRow(dw_query.RowCount(),true)
end event

type pb_1 from picturebutton within w_querys_crm
integer x = 1431
integer y = 972
integer width = 101
integer height = 88
integer taborder = 20
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
boolean originalsize = true
string picturename = "VCRFirst!"
end type

event clicked;dw_query.ScrolltoRow(1)
dw_query.SelectRow(1,true)
end event

type st_registros from statictext within w_querys_crm
integer x = 1079
integer y = 976
integer width = 297
integer height = 72
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
long textcolor = 33554432
long backcolor = 16777215
string text = "0"
alignment alignment = center!
boolean border = true
boolean focusrectangle = false
end type

type st_1 from statictext within w_querys_crm
integer x = 366
integer y = 976
integer width = 709
integer height = 52
integer textsize = -8
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
long textcolor = 33554432
long backcolor = 67108864
string text = "Total registros seleccionados:"
alignment alignment = right!
boolean focusrectangle = false
end type

type st_actual from statictext within w_querys_crm
integer x = 37
integer y = 976
integer width = 302
integer height = 72
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
long textcolor = 33554432
long backcolor = 16777215
string text = "0"
alignment alignment = center!
boolean border = true
boolean focusrectangle = false
end type

type pb_operadores from picturebutton within w_querys_crm
event ueclose ( )
integer x = 1641
integer y = 1080
integer width = 101
integer height = 88
integer taborder = 30
integer textsize = -14
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
string picturename = "images\new.jpg"
string disabledname = "images\new.jpg"
alignment htextalign = left!
end type

event clicked;//s dw_Query.Event ueNuevoRegistro()

// Cerramos la ventana
Parent.Event ueClose()
end event

type pb_ejecutar from picturebutton within w_querys_crm
integer x = 174
integer y = 1080
integer width = 101
integer height = 88
integer taborder = 20
integer textsize = -14
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
string picturename = "images\accept_query.jpg"
string disabledname = "images\accept_query.jpg"
alignment htextalign = left!
end type

event clicked;// Estructura de parametros para montar el Retrieve
SQLParams = CREATE uo_appsrv_parametres

// Activamos el objeto de QueryMode
//App.inv_Connect.of_CreateInstanceSistema(inv_srvQueryMode, "n_sic_srv_dwsrv_querymode")
App.inv_Connect.of_CreateInstanceSistema(inv_srvQueryMode, "n_cst_querymode")

of_initQueryMode(dw_query.dataobject)

inv_srvQueryMode.of_QueryMode(True)

dw_query.AcceptText()

PARENT.Event uevalidarquery()
end event

type pb_conceptos from picturebutton within w_querys_crm
integer x = 311
integer y = 1080
integer width = 101
integer height = 88
integer taborder = 20
integer textsize = -14
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
string picturename = "stepin!"
string disabledname = "stepin!"
alignment htextalign = left!
end type

type pb_personalizar from picturebutton within w_querys_crm
integer x = 448
integer y = 1080
integer width = 101
integer height = 88
integer taborder = 20
integer textsize = -14
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
string picturename = "ToDoList!"
string disabledname = "ToDoList!"
alignment htextalign = left!
end type

type pb_aceptar from picturebutton within w_querys_crm
integer x = 690
integer y = 1080
integer width = 101
integer height = 88
integer taborder = 20
integer textsize = -14
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
string picturename = "images\tick.jpg"
string disabledname = "images\tick.jpg"
alignment htextalign = left!
end type

event clicked;Long							Rows[], TotalRows

SetPointer(HourGlass!)

//If isValid(dw_Query.srvSeleccions) Then
	TotalRows = /*dw_Query.srvSeleccions.*/GetSelectedRows(Rows[])
	If TotalRows = 0 Then
		If isValid(App.srvMsgBox) Then
			App.srvMsgBox.MessageBox("Selección de Datos","No ha seleccionado ningun registro.",StopSign!, ok!)
		Else
			MessageBox("Selección de Datos","No ha seleccionado ningun registro.",StopSign!, ok!)
		End If
		Return
	End If
//End If
of_generawheredw()

istr_querymode.str_addwhere = is_where
//s dw_Query.Event ueMessageRouter("ueAceptar")

SetPointer(Arrow!)

// Cerramos la ventana
Parent.Event ueClose()

end event

type pb_cancelar from picturebutton within w_querys_crm
integer x = 827
integer y = 1080
integer width = 101
integer height = 88
integer taborder = 20
integer textsize = -14
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
string picturename = "images\cross.jpg"
string disabledname = "images\cross.jpg"
alignment htextalign = left!
end type

event clicked;Close(PARENT)
end event

type pb_selectall from picturebutton within w_querys_crm
integer x = 1097
integer y = 1084
integer width = 101
integer height = 88
integer taborder = 20
integer textsize = -14
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
string picturename = "SelectAll!"
string disabledname = "SelectAll!"
alignment htextalign = left!
end type

event clicked;PARENT.Event ueSelectAll()
end event

type pb_nueva from picturebutton within w_querys_crm
integer x = 37
integer y = 1080
integer width = 101
integer height = 88
integer taborder = 20
integer textsize = -14
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
boolean originalsize = true
string picturename = "UserObject!"
string disabledname = "UserObject!"
alignment htextalign = left!
end type

event clicked;PARENT.Event ueQueryMode()
end event

type p_icono from picture within w_querys_crm
integer x = 27
integer y = 8
integer width = 137
integer height = 120
boolean enabled = false
string picturename = "images/search.jpg"
boolean focusrectangle = false
end type

type st_titulo from statictext within w_querys_crm
integer x = 224
integer y = 16
integer width = 1947
integer height = 100
integer textsize = -14
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
long backcolor = 15780518
boolean enabled = false
string text = "Criterios de Selección"
boolean focusrectangle = false
end type

type st_fondo from statictext within w_querys_crm
integer width = 5134
integer height = 136
integer textsize = -14
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
long textcolor = 16777215
long backcolor = 15780518
boolean enabled = false
boolean focusrectangle = false
end type

type dw_query from datawindow within w_querys_crm
event type integer ueunselectall ( )
event type integer ueselectall ( )
integer x = 27
integer y = 140
integer width = 2633
integer height = 816
integer taborder = 10
string title = "none"
boolean hscrollbar = true
boolean vscrollbar = true
boolean livescroll = true
end type

event ueunselectall;if not Enabled then return -1
if not isValid(THIS) then return -1
if MultiSelect < 2 then return -1

THIS.SelectRow(0, False)

return 1

end event

event type integer ueselectall();if not Enabled then return -1
if not isValid(THIS) then return -1
if MultiSelect < 2 then return -1

THIS.SelectRow(0, TRUE)

return 1

end event

event rowfocuschanged;IF st_registros.text <> '0' THEN
	parent.st_actual.text = string(currentrow)
ELSE
	st_actual.text = '0'
END IF
end event

event clicked;if not isValid(dw_query) then return 0
if not this.Enabled then return 0

if Row = 0 then return 0

IF ii_estado = II_ANTESQUERY THEN RETURN 0

If IsValid(dwo) Then
	If dwo.Type = 'bitmap' Or dwo.Type = 'compute' Or dwo.Type = 'text' And dwo.Type = 'column' Then
		If dwo.Name = 'indicador' Or  Upper(dwo.Tag) = 'indicador' Then Return 0
	End If
End If

OnClick = TRUE

SelectDWRows(Row)
dw_query.SetRow(Row)

return 0

end event

type pb_deselectall from picturebutton within w_querys_crm
integer x = 1234
integer y = 1084
integer width = 101
integer height = 88
integer taborder = 30
integer textsize = -14
integer weight = 400
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
string picturename = "Tables!"
string disabledname = "Tables!"
alignment htextalign = left!
end type

event clicked;PARENT.Event ueUnSelectAll()
end event


forward
global type uo_dwsrv_base from nonvisualobject
end type
end forward

global type uo_dwsrv_base from nonvisualobject
event initdatawindow ( )
event initdatastore ( )
event initdatawindowchild ( )
event initdisparadors ( )
event adddisparador ( string pcontroltype,  string pdispname,  ref boolean pvisible,  ref boolean penabled,  integer pindex )
event srvenabled ( ref boolean isenabled,  ref boolean dispenabled )
end type
global uo_dwsrv_base uo_dwsrv_base

type variables
// DataWindow/DataStore que controlara
datawindow DW //PBD uo_DataWindow	DW
datastore DS  //PBD uo_DataStore	 DS
DataWindowChild	DCh

// Tipo de control
String		objType = ""

// Indicadores del tipo de objetos que permite recoger:
Boolean		AllowDW = TRUE
Boolean		AllowDS = TRUE
Boolean		AllowDCh = TRUE

PUBLIC:
// Variables para el control del estado del servidor
Boolean		Enabled = TRUE


end variables

forward prototypes
public function integer setdatastore (datastore pds)
public function integer setdatawindowchild (datawindowchild pdwch)
public subroutine srvenable (boolean penabled)
public function boolean isenabled ()
public function integer setdatawindow (datawindow pdw)
public function integer of_getwidth ()
public function integer of_getheight ()
public function integer getobjects (ref string as_objlist[], string as_objtype, string as_band, boolean ab_visibleonly)
end prototypes

event initdatawindow;// Este evento se dispara cuando se inicializa el servidor con una DataWindow.

end event

event initdatastore;// Este evento se dispara cuando se inicializa el servidor con una DataStore.

end event

event initdatawindowchild;// Este evento se dispara cuando se inicializa el servidor con una DataWindowChild.

end event

event srvenabled;// Por si queremos modificar el tipo Enabled (TRUE/FALSE) en función de algún tipo de estado, etc, etc,
// o en otro caso, para enterarnos que se ha modificado.
// También podemos modificar el estado de los disparadores.


end event

public function integer setdatastore (datastore pds);// Comprobamos que sea correcto ...
// Comprobamos que pueda recibir DataStores ...
if not AllowDS then return -1

if isValid(pDS) then
	DS = pDS
	this.Event InitDataStore()
	objType = "DS"
	if isValid(DW) then setNull(DW)
	return 1
else
	return -1
end if

end function

public function integer setdatawindowchild (datawindowchild pdwch);// Comprobamos que sea correcto ...
// Comprobamos que puede recibir DataWindowsChild ...
if not AllowDCh then return -1

if isValid(pDWCh) then
	DCh = pDWCh
	this.Event InitDataWindowChild()
	objType = "DCh"
	if isValid(DS) then setNull(DS)
	if isValid(DW) then setNull(DW)
	return 1
else
	return -1
end if

end function

public subroutine srvenable (boolean penabled);Boolean		DispEnabled

if		not isValid(DW) &
and	not isValid(DS) &
and	not isValid(DCh) then return

Enabled = pEnabled
DispEnabled = pEnabled

// Llamamos al evento del servidor por si quiere gestionar él mismo la acción.
this.Event srvEnabled(Enabled, DispEnabled)

Integer		r
//for r=1 to UpperBound(Disparadors)
//	Disparadors[r].Enabled(DispEnabled)
//next

end subroutine

public function boolean isenabled ();return Enabled

end function

public function integer setdatawindow (datawindow pdw);if not AllowDW then return -1

if isValid(pDW) then
	DW = pDW
	this.Event InitDataWindow()
	objType = "DW"
	if isValid(DS) then setNull(DS)
	return 1
else
	return -1
end if

end function

public function integer of_getwidth ();//////////////////////////////////////////////////////////////////////////////
//
//	Function:  of_GetWidth
//
//	Aceso:    Public
//
//	Argumentos: None
//
//	Returns:   long
//   The width of the datawindow
//
//	Description:  Get the width (x position + width of the rightmost object) of the 
//				     datawindow associated with this service
//
//////////////////////////////////////////////////////////////////////////////
//
//	Revision History
//
//	Version
//	5.0   Initial version
//
//////////////////////////////////////////////////////////////////////////////
//
//	Copyright © 1996-1997 Sybase, Inc. and its subsidiaries.  All rights reserved.
//	Any distribution of the PowerBuilder Foundation Classes (PFC)
//	source code by other than Sybase, Inc. and its subsidiaries is prohibited.
//
//////////////////////////////////////////////////////////////////////////////
long	ll_Width
long	ll_Return
integer	li_NumObjects
integer	li_Count
long	ll_X
long	ll_ObjWidth
string	ls_Objects[]

// Get the names of all visible objects in the datawindow
li_NumObjects = GetObjects(ls_Objects, "*", "*", True)

ll_Return = 0

For li_Count = 1 To li_NumObjects
	// Calculate the x position + the width of each object
	ll_X = Integer(dw.Describe(ls_Objects[li_Count] + ".x"))
	ll_ObjWidth = Integer(dw.Describe(ls_Objects[li_Count] + ".width"))
	ll_Width = ll_X + ll_ObjWidth

	// Return the rightmost value
	If ll_Width > ll_Return Then
		ll_Return = ll_Width
	End if
Next

Return ll_Return

end function

public function integer of_getheight ();//////////////////////////////////////////////////////////////////////////////
//
//	Function:  of_GetHeight
//
//	Aceso:    Public
//
//	Argumentos: None
//
//	Returns:   long
//   The height of the datawindow
//
//////////////////////////////////////////////////////////////////////////////
long	ll_Height
long	ll_Return
integer	li_NumObjects
integer	li_Count
long	ll_Y
long	ll_ObjHeight
string	ls_Objects[]

// Get the names of all visible objects in the datawindow
li_NumObjects = GetObjects(ls_Objects, "*", "*", True)

ll_Return = 0

For li_Count = 1 To li_NumObjects
	// Calculate the Y position + the height of each object
	ll_Y = Integer(dw.Describe(ls_Objects[li_Count] + ".y"))
	ll_ObjHeight = Integer(dw.Describe(ls_Objects[li_Count] + ".height"))
	ll_Height = ll_Y + ll_ObjHeight

	// Return the rightmost value
	If ll_Height > ll_Return Then
		ll_Return = ll_Height
	End if
Next

Return ll_Return

end function

public function integer getobjects (ref string as_objlist[], string as_objtype, string as_band, boolean ab_visibleonly);string	ls_ObjString, ls_ObjHolder
integer	li_ObjCount, li_Start=1, li_Tab, li_Count=0

if not isValid(dw) then return -1
if isnull(dw) then return -1

/* Get the Object String */
ls_ObjString = dw.Describe("Datawindow.Objects")

/* Get the first tab position. */
li_Tab =  PosA(ls_ObjString, "~t", li_Start)
Do While li_Tab > 0
	ls_ObjHolder = MidA(ls_ObjString, li_Start, (li_Tab - li_Start))

	// Determine if object is the right type and in the right band
	If (dw.Describe(ls_ObjHolder + ".type") = as_ObjType Or as_ObjType = "*") And &
		(dw.Describe(ls_ObjHolder + ".band") = as_Band Or as_Band = "*") And &
		(dw.Describe(ls_ObjHolder + ".visible") = "1" Or Not ab_VisibleOnly) Then
			li_Count ++
			as_ObjList[li_Count] = ls_ObjHolder
	End if

	/* Get the next tab position. */
	li_Start = li_Tab + 1
	li_Tab =  PosA(ls_ObjString, "~t", li_Start)
Loop 

// Check the last object
ls_ObjHolder = MidA(ls_ObjString, li_Start, LenA(ls_ObjString))

// Determine if object is the right type and in the right band
If (dw.Describe(ls_ObjHolder + ".type") = as_ObjType or as_ObjType = "*") And &
	(dw.Describe(ls_ObjHolder + ".band") = as_Band or as_Band = "*") And &
	(dw.Describe(ls_ObjHolder + ".visible") = "1" Or Not ab_VisibleOnly) Then
		li_Count ++
		as_ObjList[li_Count] = ls_ObjHolder
End if

Return li_Count
end function

on uo_dwsrv_base.create
call super::create
TriggerEvent( this, "constructor" )
end on

on uo_dwsrv_base.destroy
TriggerEvent( this, "destructor" )
call super::destroy
end on

event constructor;setNull(DW)
setNull(DS)
objType = ""

end event

event destructor;// Destruimos los disparadores ...
Integer				r



end event


forward
global type uo_dwsrv_base_attr from nonvisualobject
end type
end forward

global type uo_dwsrv_base_attr from nonvisualobject
event srvenabled ( ref boolean isenabled,  ref boolean dispenabled )
event initdatawindow ( )
event initdatastore ( )
event initdatawindowchild ( )
end type
global uo_dwsrv_base_attr uo_dwsrv_base_attr

type variables
// DataWindow/DataStore que controlara
datawindow		DW //uo_DataWindow		DW
datastore		DS //uo_DataStore		DS
DataWindowChild	DCh

// Indicadores del tipo de objectos que permite recoger:
Boolean		AllowDW = True
Boolean		AllowDS = True
Boolean		AllowDCh = True

// Tipos de control
String		objType = ""

PUBLIC:
// Variables para control del estado del servidor
Boolean		Enabled = True



end variables

forward prototypes
public subroutine srvenable (boolean penabled)
public function boolean isenabled ()
public function integer setdatawindow (datawindow pdw)
public function integer setdatastore (datastore pds)
public function integer setdatawindowchild (datawindowchild pdwch)
end prototypes

event srvenabled;// Por si queremos modificar el tipo Enabled (TRUE/FALSE) en función de algún tipo de estado, etc, etc,
// o si más no, para enterarnos de que se ha modificado.
// También podemos modificar el estado de los disparadores.


end event

public subroutine srvenable (boolean penabled);Boolean		DispEnabled

if		not isValid(DW) &
and	not isValid(DS) &
and	not isValid(DCh) then return

Enabled = pEnabled
DispEnabled = pEnabled

// Llamamos al evento del servidor por si quiere gestionar el mismo la acción.
this.Event srvEnabled(Enabled, DispEnabled)


end subroutine

public function boolean isenabled ();return Enabled

end function

public function integer setdatawindow (datawindow pdw);// Comprobamos que sigue correcto ...
// Comprobamos que puede recibir DataWindows ...
if not AllowDW then return -1

if isValid(pDW) then
	DW = pDW
	this.Event InitDataWindow()
	objType = "DW"
	if isValid(DS) then setNull(DS)
	return 1
else
	return -1
end if

end function

public function integer setdatastore (datastore pds);// Comprobamos que sigue correcto ...

// Comprobamos que puede recibir DataStores ...
if not AllowDS then return -1

if isValid(pDS) then
	DS = pDS
	this.Event InitDataStore()
	objType = "DS"
	if isValid(DW) then setNull(DW)
	return 1
else
	return -1
end if

end function

public function integer setdatawindowchild (datawindowchild pdwch);// Comprobamos que sigue correcto ...
// Comprobamos que puede recibir DataWindowsChild ...
if not AllowDCh then return -1

if isValid(pDWCh) then
	DCh = pDWCh
	this.Event InitDataWindowChild()
	objType = "DCh"
	if isValid(DS) then setNull(DS)
	if isValid(DW) then setNull(DW)
	return 1
else
	return -1
end if

end function

on uo_dwsrv_base_attr.create
call super::create
TriggerEvent( this, "constructor" )
end on

on uo_dwsrv_base_attr.destroy
TriggerEvent( this, "destructor" )
call super::destroy
end on

event constructor;setNull(DW)
setNull(DS)



end event


forward
global type uo_dwsrv_utils from uo_dwsrv_base
end type
end forward

global type uo_dwsrv_utils from uo_dwsrv_base autoinstantiate
end type

forward prototypes
public function integer getobjects (ref string objlist[], string objtypes, string band)
private function integer getobjectsds (ref string objlist[], string objtypes, string band)
private function integer getobjectsdw (ref string objlist[], string objtypes, string band)
private function integer gettotalcolumnsds ()
private function integer getobjectsdwch (ref string objlist[], string objtypes, string band)
private function integer gettotalcolumnsdwch ()
public function integer getkeycolumns (ref integer keys[])
public function integer getkeycolumnsds (ref integer keys[])
public function integer getkeycolumnsdwch (ref integer keys[])
public function integer gettaborderds (ref integer taborders[])
public function integer gettaborderdwch (ref integer taborders[])
public function integer settaborder0ds ()
public function integer settaborder0dwch ()
public function integer settaborders (integer taborders[])
public function integer settabordersds (integer taborders[])
public function integer settaborder0dwch (integer taborders[])
public function integer settabordersdwch (integer taborders[])
public function string getcoltitle (integer colnumber)
public function string getcoltitle (string columnname)
public function string getcoltype (string as_colname)
public function string getfindkeystr ()
public function string getcolname (integer colnumber)
public function string getcolnameds (integer colnumber)
public function string getcolnamedwch (integer colnumber)
public subroutine of_setinitialvalue (string a_scolnom, any a_avalue)
public subroutine of_setinitialvalue (integer a_icolnumber, any a_avalue)
public function integer getkeycolumnsds (ref uo_appsrv_parametres auo_keycolumns)
public function integer getkeycolumnsdwch (ref uo_appsrv_parametres auo_keycolumns)
public function integer getkeycolumnsdw (ref uo_appsrv_parametres auo_keycolumns)
public function integer getkeycolumns (ref uo_appsrv_parametres auo_keycolumns)
public function any getcolumnvalue (long row, string column)
public function any getcolumnvaluedw (long row, string column)
public function any getcolumnvalueds (long row, string column)
public function any getcolumnvaluedwch (long row, string column)
public function integer getcolnumber (string colname)
public function string getfindkeystr (long prow)
public function string getfindkeystrdw (long prow)
public function string getfindkeystrds (long prow)
private function boolean isvisibledw (integer colnumber)
private function boolean isvisibleds (integer colnumber)
private function boolean isvisibledch (integer colnumber)
public function boolean isvisible (integer colnumber)
public function string getcoldbnamedwch (integer colnumber)
public function string getcoldbnameds (integer colnumber)
public function string getcoldbname (integer colnumber)
public function long getcolwidth (string columnname)
public function long getcolwidth (integer colnumber)
public function string getcoltype (long colnumber)
public function boolean iskeycolumn (integer colnumber)
public function long getx (integer colnumber)
public function long gety (integer colnumber)
public function long getcolheight (string columnname)
public function string getfindkeystract (long prow)
public function long getcolheight (integer colnumber)
public function integer getcolx (string columnname)
public function integer getColY (string ColumnName)
public function integer getcolx (integer colnumber)
public function integer getcoly (integer colnumber)
public function integer getcolmintaborder (integer taborders[])
public function integer gettaborder ()
public function integer gettaborder (ref integer taborders[])
public function string getcoldbnamedw (integer colnumber)
public function integer gettotalcolumns ()
private function integer gettotalcolumnsdw ()
public function integer getkeycolumnsdw (ref integer keys[])
public function string getcolnamedw (integer colnumber)
public function integer gettaborderdw (ref integer taborders[])
public function string getitemoriginal (long row, string column)
public function DWObject of_getobject (string as_column)
public function string evaluate (string as_expression)
public function string getdwproperty (string as_columna, string as_property)
public function string getdsproperty (string as_columna, string as_property)
public function string getdchproperty (string as_columna, string as_property)
public function string getproperty (string as_columna, string as_property)
public function integer settaborder0 ()
public function integer getcolumnattr (ref n_cst_dwobject_attr anv_dwo[])
public function integer settabordersdw (integer taborders[])
public function integer settaborder0dw ()
public function integer getsortposicion (ref string as_columnas[], ref string as_label[], string as_tipo[], datawindow adw_datos)
public function long of_getnearlabel (string as_columna, ref string as_label)
public function integer getsortid (ref string as_columnas[], ref string as_label[], string as_tipo[], datawindow adw_datos)
end prototypes

public function integer getobjects (ref string objlist[], string objtypes, string band);choose case objType
	case "DW"
		return this.GetObjectsDW(objList[], objTypes, Band)
	case "DS"
		return this.GetObjectsDS(objList[], objTypes, Band)
	case "DCh"
		return this.GetObjectsDWCh(objList[], objTypes, Band)
end choose

return -1

end function

private function integer getobjectsds (ref string objlist[], string objtypes, string band);// Devuelve todos los objetos que hay dentro de la DataWindow
// del tipos especificado en la Band especificada.
// Lo devuelve sobre la estructura objList.
// Los tipos de Band posibles son les de la DataWindow
// Los tipos de objetos posibles son las de la DataWindow
String		objString, objHolder
Integer		objCont, StartPos=1, TabPos, Cont = 0
String		newObjList[]

// Si no está inicializa no hacemos nada ...
if not isValid(DS) or isNull(DS) then return -1

// Inicializamos la lista
ObjList = newObjList

objString = describe(DS,"datawindow.objects")
TabPos =  PosA(objString,"~t",StartPos)

do while TabPos > 0
	objHolder = MidA(objString,StartPos,(TabPos - StartPos))
	if    (describe(DS,objHolder+".type") = objTypes or objTypes = "*") &
	and (describe(DS,objHolder+".Band") = Band or Band = "*") then
			Cont = Cont + 1
			objList[Cont] = objHolder
	end if
	StartPos = TabPos + 1
	TabPos =  PosA(objString,"~t",StartPos)	
loop 

objHolder = MidA(objString,StartPos,LenA(objString))
if (describe(DS,objHolder+".type") = objTypes or objTypes = "*") and &
	(describe(DS,objHolder+".Band") = Band or Band = "*") then
	Cont = Cont + 1
	objList[Cont] = objHolder
end if

return Cont

end function

private function integer getobjectsdw (ref string objlist[], string objtypes, string band);// Retorna tots els objectes que hi ha dins de la DataWindow
// del tipo especificado en la Band especificada.
// Lo devuelve sobre la estructura objList.
// Los tipos de Band possibles son les de la DataWindow
// Los tipos de objetos posibles son los de la DataWindow

String		objString, objHolder
Integer	objCont, StartPos=1, TabPos, Cont = 0
String		newObjList[]

// Si no está inicializado no hacemos nada ...
if not isValid(DW) or isNull(DW) then return -1

// Inicializamos la lista
objList = newObjList

objString = describe(DW,"datawindow.objects")
TabPos =  PosA(objString,"~t",StartPos)

IF tabPos > 0 THEN 	objString += "~t"		//para que detecte el último objeto

do while TabPos > 0
	objHolder = MidA(objString,StartPos,(TabPos - StartPos))
	if    (describe(DW,objHolder+".type") = objTypes or objTypes = "*") &
	and (describe(DW,objHolder+".Band") = Band or Band = "*") then
			Cont = Cont + 1
			objList[Cont] = objHolder
	end if
	StartPos = TabPos + 1
	TabPos =  PosA(objString,"~t",StartPos)	
loop 


return Cont

end function

private function integer gettotalcolumnsds ();// Devuelve el número total de columnas

// Si no está inicializado no havcemos nada ...
if not isValid(DS) or isNull(DS) then return -1

return Integer(DS.Describe("DataWindow.Column.Count"))

end function

private function integer getobjectsdwch (ref string objlist[], string objtypes, string band);// Retorna tots els objectes que hi ha dins de la DataWindow
// del tipo especificado en la Band especificada.
// Lo devuelve sobre la estructura objList.
// Los tipos de Band possibles son les de la DataWindow
// Los tipos de objetos posibles son los de la DataWindow

String		objString, objHolder, Temporal
Integer	objCont, StartPos=1, TabPos, Cont = 0
String		newObjList[]

// Si no está inicializada no hacemos nada...
if not isValid(DCh) or isNull(DCh) then return -1

// Inicializamos la lista
objList = newObjList

objString = describe(DCh,"datawindow.objects")
TabPos =  PosA(objString,"~t",StartPos)

do while TabPos > 0
	objHolder = MidA(objString,StartPos,(TabPos - StartPos))
	Temporal = describe(DCh,objHolder+".type")
	if    (describe(DCh,objHolder+".type") = objTypes or objTypes = "*") &
	and (describe(DCh,objHolder+".Band") = Band or Band = "*") then
			Cont = Cont + 1
			objList[Cont] = objHolder
	end if
	StartPos = TabPos + 1
	TabPos =  PosA(objString,"~t",StartPos)	
loop 

objHolder = MidA(objString,StartPos,LenA(objString))
if (describe(DCh,objHolder+".type") = objTypes or objTypes = "*") and &
	(describe(DCh,objHolder+".Band") = Band or Band = "*") then
	Cont = Cont + 1
	objList[Cont] = objHolder
end if

return Cont

end function

private function integer gettotalcolumnsdwch ();// Devuelve el número total de columnas

// Si no está inicializada no hacemos nada ...
if not isValid(DCh) or isNull(DCh) then return -1

return Integer(DCh.Describe("DataWindow.Column.Count"))

end function

public function integer getkeycolumns (ref integer keys[]);// Actualiza la estructura Keys y la llena con los valores de los campos clave
// del objeto en cuestión:

choose case objType
	case "DW"
		return this.GetKeyColumnsDW(keys)
	case "DS"
		return this.GetKeyColumnsDS(keys)
	case "DCh"
		return this.GetKeyColumnsDWCh(keys)
end choose

return -1

end function

public function integer getkeycolumnsds (ref integer keys[]);// Guarda las columnas clave sobre la estructura Keys[]
Integer		r, TotalCols

// Si no está inicializado no hacemos nada ...
if not isValid(DS) or isNull(DS) then return -1

// ManelP. 07/10/2003
Integer		li_nullArray[]
keys[] = li_NullArray[]

TotalCols = this.GetTotalColumns()

// Buscamos las columnas clave ...
for r=1 to TotalCols
	if ds.Describe("#" + string(r) + ".Key") = "yes" then
		Keys[UpperBound(Keys) + 1] = r
	end if
next

return UpperBound(keys)

end function

public function integer getkeycolumnsdwch (ref integer keys[]);// Guarda las columnas clave sobre la estructura Keys[]
Integer		r, TotalCols

// Si no está inicializada no hacemos nada ...
if not isValid(DCh) or isNull(DCh) then return -1

// ManelP. 07/10/2003
Integer		li_nullArray[]
keys[] = li_NullArray[]

TotalCols = this.GetTotalColumns()

// Buscamos las columnas clave ...
for r=1 to TotalCols
	if DCh.Describe("#" + string(r) + ".Key") = "yes" then
		Keys[UpperBound(Keys) + 1] = r
	end if
next

return UpperBound(keys)

end function

public function integer gettaborderds (ref integer taborders[]);// Guarda el TabOrder sobre la estructura TabOrder
Integer		r

// Si no está inicializada no hacemos nada ...
if not isValid(ds) or isNull(ds) then return -1

// ManelP. 07/10/2003
Integer		li_nullArray[]
tabOrders[] = li_NullArray[]

for r=1 to this.GetTotalColumns()
	TabOrders[r] = Integer(ds.Describe("#" + string(r) + ".TabSequence"))
next

return 1

end function

public function integer gettaborderdwch (ref integer taborders[]);// Guarda el TabOrder sobre la estructura TabOrder
Integer		r

// Si no está inicializada no hacemos nada ...
if not isValid(DCh) or isNull(DCh) then return -1

// ManelP. 07/10/2003
Integer		li_nullArray[]
tabOrders[] = li_NullArray[]

for r=1 to this.GetTotalColumns()
	TabOrders[r] = DCh.SetTabOrder(r, 0)
	DCh.SetTabOrder(r, TabOrders[r])
next

return UpperBound(TabOrders)

return 1

end function

public function integer settaborder0ds ();// Pone el TabOrder a 0 por todas las columnas de la DataWindow.
Integer		r

// Si no está inicializado no hacemos nada ...
if not isValid(DS) or isNull(DS) then return -1

// Buscamos las columnas clave ...
for r=1 to this.GetTotalColumns()
	DS.Modify("#" + string(r) + ".TabSequence=0")
next

return 0

end function

public function integer settaborder0dwch ();// Pone el TabOrder a 0 por todas las columnas de la DataWindow.
Integer		r

// Si no está inicializado no hacemos nada ...
if not isValid(DCh) or isNull(DCh) then return -1

// Buscamos las columnas clave ...
for r=1 to this.GetTotalColumns()
	DCh.Modify("#" + string(r) + ".TabSequence=0")
next

return 0

end function

public function integer settaborders (integer taborders[]);// Restaura los TabOrders según la estructura que recibe.
choose case objType
	case "DW"
		return this.SetTabOrdersDW(TabOrders)
	case "DS"
		return this.SetTabOrdersDS(TabOrders)
	case "DCh"
		return this.SetTabOrdersDWCh(TabOrders)
end choose

return -1

end function

public function integer settabordersds (integer taborders[]);// Restaura els TabOrders segons l'estructura que reb.
Integer		r

// Si no está inicializado no hacemos nada ...
if not isValid(DS) or isNull(DS) then return -1

if UpperBound(TabOrders) <> this.GetTotalColumns() then return -1

// Buscamos las columnas clave ...
for r=1 to this.GetTotalColumns()
	DS.Modify("#" + string(r) + ".TabSequence=" + string(TabOrders[r]))
next

return 0

end function

public function integer settaborder0dwch (integer taborders[]);// Restaura els TabOrders.
Integer		r

// Si no está inicializado no hacemos nada ...
if not isValid(DCh) or isNull(DCh) then return -1

if UpperBound(TabOrders) <> this.GetTotalColumns() then return -1

// Buscamos las columnas clave ...
for r=1 to this.GetTotalColumns()
	DCh.Modify("#" + string(r) + ".TabSequence=" + string(TabOrders[r]))
next

return 0

end function

public function integer settabordersdwch (integer taborders[]);// Restaura los TabOrders.
Integer		r

// Si no está inicializado no hacemos nada ...
if not isValid(DCh) or isNull(DCh) then return -1

// Si no coinciden las columnas no hace nada.
if UpperBound(TabOrders) <> this.GetTotalColumns() then return -1

// Buscamos las columnas clave ...
for r=1 to this.GetTotalColumns()
	DCh.Modify("#" + string(r) + ".TabSequence=" + string(TabOrders[r]))
next

return 0

end function

public function string getcoltitle (integer colnumber);// Devuelve el nombre de la columna buscandola entre los textos de la DataWindow.
String			nullString

setNull(nullString)

if ColNumber <= 0 or ColNumber > this.GetTotalColumns() then return nullString
return this.GetColTitle(this.GetColName(ColNumber))

end function

public function string getcoltitle (string columnname);// Devuelve el nombre de la columna buscandola entre los textos de la DataWindow.
String			Label,ls_tag,ls_text
String			nullString
uo_string		luo_string
integer        li_pos

setNull(nullString)
ColumnName = Trim(ColumnName)

choose case objType
	case "DW"
//		TAG -COLNAME:xxxxxx -
		if not isValid(DW) then return nullString

		ls_tag = DW.Describe(ColumnName + ".tag")
		li_pos = PosA(UPPER(ls_tag),"-COLNAME",1)
	
		if li_pos = 0 then
			Label = DW.Describe(ColumnName + "_t.text")
		else
			ls_text = MidA(ls_tag,li_pos + 9)
			Label = luo_string.gettoken(ls_text,"-")
		end if
			
//s PBD	if Label = "!" then Label = DW.Describe("evaluate('wordcap(~"" + ColumnName + "~")', 1")
		
		/*Lo intentamos por la ubicación física en el dw*/
		IF label = "!" THEN
			IF of_getnearlabel(Columnname, ls_tag) = 0 THEN
				label = ls_tag
			END IF
		END IF
		
		IF label = "!" THEN SetNull(label)	//para que no lo procese
		
		return Label
		
	case "DS"
//		TAG -COLNAME:xxxxxx -
		if not isValid(DS) then return nullString

		ls_tag = DS.Describe(ColumnName + ".tag")
		li_pos = PosA(UPPER(ls_tag),"-COLNAME",1)
		
		if li_pos = 0 then
			Label = DS.Describe(ColumnName + "_t.text")
		else
			ls_text = MidA(ls_tag,li_pos + 9)
			Label = luo_string.gettoken(ls_text,"-")
		end if
			
		if Label = "!" then Label = DS.Describe("evaluate('wordcap(~"" + ColumnName + "~")', 1")
		
		IF label = "!" THEN SetNull(label)	//para que no lo procese
		
		return Label
		
	case "DCh"
		if not isValid(DCh) then return nullString
		ls_tag = DCh.Describe(ColumnName + ".tag")
		li_pos = PosA(UPPER(ls_tag),"-COLNAME",1)
		
		if li_pos = 0 then
			Label = DCh.Describe(ColumnName + "_t.text")
		else
			ls_text = MidA(ls_tag,li_pos + 9)
			Label = luo_string.gettoken(ls_text,"-")
		end if

		if Label = "!" then Label = DCh.Describe("evaluate('wordcap(~"" + ColumnName + "~")', 1")
		
		IF label = "!" THEN SetNull(label)	//para que no lo procese
		
		return Label

end choose

return nullString

end function

public function string getcoltype (string as_colname);choose case this.ObjType
	case "DS"
		return DS.Describe(as_ColName + ".ColType")
	case "DW"
		return DW.Describe(as_ColName + ".ColType")
	case "DCh"
		return DCh.Describe(as_ColName + ".ColType")
end choose

return ""

end function

public function string getfindkeystr ();// Actualiza la estructura Keys y la llena con los valores de los campos clave
// del objeto en cuestión:

choose case objType
	case "DW"
		return this.GetFindKeyStr(DW.GetRow())
	case "DS"
		return this.GetFindKeyStr(DS.GetRow())
	case "DCh"
		return ""
end choose

return ""

end function

public function string getcolname (integer colnumber);// Devuelve el nombre de la columna buscandola entre los textos de la DataWindow.
String			nullString

setNull(nullString)

if ColNumber <= 0 or ColNumber > this.GetTotalColumns() then return nullString

choose case	objType
	case	"DW"
		return GetColNameDW( colnumber )
	case	"DS"
		return GetColNameDS( colnumber )
	case	"DWCH"
		return GetColNameDWCH( colnumber )
end choose

end function

public function string getcolnameds (integer colnumber);//Devuelve el nombre de la columna de ínidice marcado por el parámetro recibido
return DS.Describe("#" + string(ColNumber) + ".name")

end function

public function string getcolnamedwch (integer colnumber);//Devuelve el nombre de la columna de ínidice marcado por el parámetro recibido
return DCh.Describe("#" + string(ColNumber) + ".name")

end function

public subroutine of_setinitialvalue (string a_scolnom, any a_avalue);choose case	objType
	case	"DW"
		DW.Modify( a_scolnom + ".Initial='" + String( a_avalue ) + "'" )
		
	case	"DS"
		DS.Modify( a_scolnom + ".Initial='" + String( a_avalue ) + "'" )
end choose

end subroutine

public subroutine of_setinitialvalue (integer a_icolnumber, any a_avalue);choose case	objType
	case	"DW"
		DW.Modify( "#" + String(a_icolnumber) + ".Initial='" + String( a_avalue ) + "'" )
		
	case	"DS"
		DS.Modify( "#" + String(a_icolnumber) + ".Initial='" + String( a_avalue ) + "'" )
end choose

end subroutine

public function integer getkeycolumnsds (ref uo_appsrv_parametres auo_keycolumns);integer	li_KeyNumber[], li_Total, li
long		ll_Filas, ll_Row
string	ls_name, ls_Valor, ls_Tipo

ll_Filas = DS.RowCount()

//Recojo los números de las columnas que forman parte de la clave...
this.GetKeyColumnsDS( li_KeyNumber )

li_Total = UpperBound( li_KeyNumber )
FOR li = 1 TO li_Total
	ls_Name = GetColname( li_KeyNumber[li] )
	
	IF ( ll_Filas > 0 )	THEN
		ls_Valor = string(this.GetColumnValue( 1, ls_Name))
	ELSE
		SetNull(ls_Valor)
	END IF
	
	//Voy llenando el objeto de parámetros con las parejas <campo> <valor>...
	ll_Row = auo_KeyColumns.SetValor( ls_Name, ls_Valor )
	
	//Lleno el tipo de la columna...
	ls_Tipo = ds.Describe("#" + String(li_KeyNumber[li]) + ".coltype" )
	auo_KeyColumns.SetColType( ll_Row, ls_Tipo )
NEXT

return 1

end function

public function integer getkeycolumnsdwch (ref uo_appsrv_parametres auo_keycolumns);//NO IMPLEMENTADA!!!

return 1

end function

public function integer getkeycolumnsdw (ref uo_appsrv_parametres auo_keycolumns);integer	li_KeyNumber[], li_Total, li
long		ll_Filas, ll_Row
string	ls_name, ls_Valor, ls_Tipo

ll_Filas = DW.RowCount()

//Recojo los números de las columnas que forman parte de la clave...
this.GetKeyColumnsDW( li_KeyNumber )

li_Total = UpperBound( li_KeyNumber )
FOR li = 1 TO li_Total
	ls_Name = GetColname( li_KeyNumber[li] )
	
	IF ( ll_Filas > 0 )	THEN
		ls_Valor = string(this.GetColumnValue( 1, ls_Name))
	ELSE
		SetNull(ls_Valor)
	END IF
	
	//Voy llenando el objeto de parámetros con las parejas <campo> <valor>...
	ll_Row = auo_KeyColumns.SetValor( ls_Name, ls_Valor )
	
	//Lleno el tipo de la columna...
	ls_Tipo = DW.Describe("#" + String(li_KeyNumber[li]) + ".coltype" )
	
	auo_KeyColumns.SetColType( ll_Row, ls_Tipo )
NEXT

return 1

end function

public function integer getkeycolumns (ref uo_appsrv_parametres auo_keycolumns);// Actualitza la estructura Keys y la llena con los valores de los campos clave
// del objeto en cuestión:

choose case objType
	case "DW"
		return this.GetKeyColumnsDW(auo_keycolumns)
	case "DS"
		return this.GetKeyColumnsDS(auo_keycolumns)
	case "DCh"
		return this.GetKeyColumnsDWCh(auo_keycolumns)
end choose

return -1

end function

public function any getcolumnvalue (long row, string column);// Devuelve el valor de la columna/fila especificada.
choose case ObjType
	case "DW"
		return this.GetColumnValueDW(row, Column)

	case "DS"
		return this.GetColumnValueDS(row, Column)
	case else
		return this.GetColumnValueDWCh(row, Column)
end choose

end function

public function any getcolumnvaluedw (long row, string column);// Devuelve el valor de la columna/fila especificada.

String		ColType
Any			Valor

setNull(Valor)
if row < 1 or row > dw.RowCount() then return Valor

ColType = this.GetColType(Column)

choose case LeftA(Lower(ColType), 4)
	case "char"
		Valor = dw.GetItemString(row, Column)
	case "numb", "deci", "long"
		Valor = dw.GetItemNumber(row, Column)
	case "date"
		if LeftA(Lower(ColType), 5) = "datet" then
			Valor = dw.GetItemDateTime(row, Column)
		else
			Valor = dw.GetItemDate(row, Column)
		end if
	case "time"
		Valor = dw.GetItemTime(row, Column)
end choose

return Valor

end function

public function any getcolumnvalueds (long row, string column);// Devuelve el valor de la columna/fila especificada.

String		ColType
Any			Valor

setNull(Valor)
if row < 1 or row > ds.RowCount() then return Valor
ColType = this.GetColType(Column)

choose case LeftA(Lower(ColType), 4)
	case "char"
		Valor = ds.GetItemString(row, Column)
	case "numb", "deci", "long"
		Valor = ds.GetItemNumber(row, Column)
	case "date"
		if LeftA(Lower(ColType), 5) = "datet" then
			Valor = ds.GetItemDateTime(row, Column)
		else
			Valor = ds.GetItemDate(row, Column)
		end if
	case "time"
		Valor = ds.GetItemTime(row, Column)
end choose

return Valor

end function

public function any getcolumnvaluedwch (long row, string column);// Devuelve el valor de la columna/fila especificada.

String		ColType
Any			Valor

setNull(Valor)
if row < 1 or row > dch.RowCount() then return Valor

ColType = this.GetColType(Column)

choose case LeftA(Lower(ColType), 4)
	case "char"
		Valor = dch.GetItemString(row, Column)
	case "numb", "deci", "long"
		Valor = dch.GetItemNumber(row, Column)
	case "date"
		if LeftA(Lower(ColType), 5) = "datet" then
			Valor = dch.GetItemDateTime(row, Column)
		else
			Valor = dch.GetItemDate(row, Column)
		end if
	case "time"
		Valor = dch.GetItemTime(row, Column)
end choose

return Valor

end function

public function integer getcolnumber (string colname);//Devuelve el numero de la columna de especificada

if isNull(ColName) or Trim(ColName) = "" then return -1

Choose case ObjType
	case "DW"
		return Integer(DW.Describe(string(ColName) + ".id"))
	case "DS"
		return Integer(DS.Describe(string(ColName) + ".id"))
	case "DWCH"
		return Integer(DCh.Describe(string(ColName) + ".id"))
end choose

return -1

end function

public function string getfindkeystr (long prow);// Actualiza la estructura Keys y la llena con los valores de los campos clave
// del objeto en questión:

choose case objType
	case "DW"
		return this.GetFindKeyStrDW(pRow)
	case "DS"
		return this.GetFindKeyStrDS(pRow)
	case "DCh"
		return ""
end choose

return ""

end function

public function string getfindkeystrdw (long prow);/////////////////////////////////////////////////////////////////////
// Retorna la sentencia para una instrucción FIND para buscar el
// registro actual. Para hacerlo, solo tiene en cuenta los campos
// clave de la DataWindow. Se supone que no existen duplicados!!!
//
string		Condicions[], Instruccio,ls_ColType,ls_format
Integer		r, TotalCols
Integer		KeyColumns[]

if pRow > dw.RowCount() then return ""
if pRow <= 0 then return ""

TotalCols = this.GetKeyColumns(KeyColumns)

// Buscamos las columnas clave y montamos la instrucción...
for r=1 to TotalCols
	ls_ColType = Lower(dw.Describe("#" + string(keyColumns[r]) + ".ColType"))
	choose case LeftA(ls_ColType, 4)
		case "char"				
			Condicions[UpperBound(Condicions) + 1] = &
				dw.Describe("#" + string(keyColumns[r]) + ".Name") + " = '" + dw.GetItemString(pRow, KeyColumns[r]) + "'"
		case "date"
			if LeftA(ls_ColType,5) = "datet" then
//					ls_format = lnvo.uof_format("datetime",1)
				Condicions[UpperBound(Condicions) + 1] = &
					"string( " + dw.Describe("#" + string(keyColumns[r]) + ".Name") +", '"+ "dd/mm/yyyy hh:mm:ss" + "') = '" + string(dw.GetItemDateTime(pRow, KeyColumns[r]), "dd/mm/yyyy hh:mm:ss") + "'"
			else
//					ls_format = lnvo.uof_format("date",1)
				Condicions[UpperBound(Condicions) + 1] = &
					"string( " + dw.Describe("#" + string(keyColumns[r]) + ".Name") + ", '"+ "dd/mm/yyyy" + "') = '" + string(dw.GetItemDate(pRow, KeyColumns[r]), "dd/mm/yyyy") + "'"
			end if
		case "deci"
			Condicions[UpperBound(Condicions) + 1] = &
				"string( " + dw.Describe("#" + string(keyColumns[r]) + ".Name") + ", '00000000000000000,00000') = '" + string(dw.GetItemDecimal(pRow, KeyColumns[r]), "00000000000000000,00000") + "'"
		case "numb","long"
			Condicions[UpperBound(Condicions) + 1] = &
				dw.Describe("#" + string(keyColumns[r]) + ".Name") + " = " + string(dw.GetItemNumber(pRow, KeyColumns[r]))
		case "time"
//				ls_format = lnvo.uof_format("time",1)
			Condicions[UpperBound(Condicions) + 1] = &
				"string( " + dw.Describe("#" + string(keyColumns[r]) + ".Name") + ", '"+ "hh:mm:ss" +"') = '" + string(dw.GetItemTime(pRow, KeyColumns[r]), "hh:mm:ss") + "'"
	end choose
next

for r=1 to UpperBound(Condicions)
	if r <> 1 then Instruccio = Instruccio + " AND "
	Instruccio = Instruccio + Condicions[r]
next

return  Instruccio

end function

public function string getfindkeystrds (long prow);/////////////////////////////////////////////////////////////////////
// Devuleve la sentencia para una instrucción FIND para buscar el
// registro actual. Para hacerlo, solo tiene en cuenta los campos
// clave de la DataWindow. Se supone que no existen duplicados!!!
//
string		Condicions[], Instruccio,ls_ColType,ls_format
Integer		r, TotalCols
Integer		KeyColumns[]

if pRow > ds.RowCount() then return ""
if pRow <= 0 then return ""

TotalCols = this.GetKeyColumns(KeyColumns)

// Buscamos las columnas clave y montamos la instrucción...
for r=1 to TotalCols
	ls_ColType = Lower(DS.Describe("#" + string(keyColumns[r]) + ".ColType"))
	choose case LeftA(ls_ColType, 4)
		case "char"				
			Condicions[UpperBound(Condicions) + 1] = &
				DS.Describe("#" + string(keyColumns[r]) + ".Name") + " = '" + DS.GetItemString(pRow, KeyColumns[r]) + "'"
		case "date"
			if LeftA(ls_ColType,5) = "datet" then
//					ls_format = lnvo.uof_format("datetime",1)
				Condicions[UpperBound(Condicions) + 1] = &
					"string( " + DS.Describe("#" + string(keyColumns[r]) + ".Name") +", '"+ "dd/mm/yyyy hh:mm:ss" + "') = '" + string(DS.GetItemDateTime(pRow, KeyColumns[r]), "dd/mm/yyyy hh:mm:ss") + "'"
			else
//					ls_format = lnvo.uof_format("date",1)
				Condicions[UpperBound(Condicions) + 1] = &
					"string( " + DS.Describe("#" + string(keyColumns[r]) + ".Name") + ", '"+ "dd/mm/yyyy" + "') = '" + string(DS.GetItemDate(pRow, KeyColumns[r]), "dd/mm/yyyy") + "'"
			end if
		case "deci"
			Condicions[UpperBound(Condicions) + 1] = &
				"string( " + DS.Describe("#" + string(keyColumns[r]) + ".Name") + ", '00000000000000000,00000') = '" + string(DS.GetItemDecimal(pRow, KeyColumns[r]), "00000000000000000,00000") + "'"
		case "numb","long"
			Condicions[UpperBound(Condicions) + 1] = &
				DS.Describe("#" + string(keyColumns[r]) + ".Name") + " = " + string(DS.GetItemNumber(pRow, KeyColumns[r]))
		case "time"
//				ls_format = lnvo.uof_format("time",1)
			Condicions[UpperBound(Condicions) + 1] = &
				"string( " + DS.Describe("#" + string(keyColumns[r]) + ".Name") + ", '"+ "hh:mm:ss" +"') = '" + string(DS.GetItemTime(pRow, KeyColumns[r]), "hh:mm:ss") + "'"
	end choose
next

for r=1 to UpperBound(Condicions)
	if r <> 1 then Instruccio = Instruccio + " AND "
	Instruccio = Instruccio + Condicions[r]
next

return  Instruccio

end function

private function boolean isvisibledw (integer colnumber);// Devuelve TRUE/FALSE dependiendo de si la columna es
// visible o invisible.

if DW.Describe("#" + string(ColNumber) + ".visible") = "1" then
	return TRUE

end if

return FALSE

end function

private function boolean isvisibleds (integer colnumber);// Devuelve TRUE/FALSE dependiendo de si la columna es
// visible o invisible.

if ds.Describe("#" + string(ColNumber) + ".visible") = "1" then
	return TRUE
end if

return FALSE

end function

private function boolean isvisibledch (integer colnumber);// Devuelve TRUE/FALSE dependiendo de si la columna es
// visible o invisible.

if dch.Describe("#" + string(ColNumber) + ".visible") = "1" then
	return TRUE
end if

return FALSE

end function

public function boolean isvisible (integer colnumber);// Devuelve TRUE/FALSE dependiendo de si la columna es
// visible o invisible.
if ColNumber <= 0 or ColNumber > this.GetTotalColumns() then return FALSE

choose case	objType
	case	"DW"
		return this.isVisibleDW(ColNumber)
	case	"DS"
		return this.isVisibleDS(ColNumber)
	case	"DWCH"
		return this.isVisibleDCh(ColNumber)
end choose

return FALSE

end function

public function string getcoldbnamedwch (integer colnumber);//Devuelve el nombre de la columna de ínidice marcado por el parámetro recibido
return DCh.Describe("#" + string(ColNumber) + ".dbname")

end function

public function string getcoldbnameds (integer colnumber);//Devuelve el nombre de la columna de ínidice marcado por el parámetro recibido
return DS.Describe("#" + string(ColNumber) + ".dbname")

end function

public function string getcoldbname (integer colnumber);// Devuelve el nombre de la columna buscandola entre los textos de la DataWindow.
String			nullString

setNull(nullString)

if ColNumber <= 0 or ColNumber > this.GetTotalColumns() then return nullString

choose case	objType
	case	"DW"
		return GetColDBNameDW( colnumber )
	case	"DS"
		return GetColDBNameDS( colnumber )
	case	"DWCH"
		return GetColDBNameDWCH( colnumber )
end choose

end function

public function long getcolwidth (string columnname);// Devuelve el nombre de la columna buscandola entre los textos de la DataWindow.
ColumnName = Trim(ColumnName)

choose case objType
	case "DW"
		if not isValid(DW) then return 0
		return long(DW.Describe(ColumnName + ".width"))
		
	case "DS"
		if not isValid(DS) then return 0
		return long(DS.Describe(ColumnName + ".width"))
		
	case "DCh"
		if not isValid(DCh) then return 0
		return long(DCh.Describe(ColumnName + ".width"))

end choose

return 0

end function

public function long getcolwidth (integer colnumber);// Devuelve el nombre de la columna buscandola entre los textos de la DataWindow.
if ColNumber <= 0 or ColNumber > this.GetTotalColumns() then return 0
return this.GetColWidth(this.GetColName(ColNumber))

end function

public function string getcoltype (long colnumber);choose case this.ObjType
	case "DS"
		return DS.Describe("#" + string(ColNumber) + ".ColType")
	case "DW"
		return DW.Describe("#" + string(ColNumber) + ".ColType")
	case "DCh"
		return DCh.Describe("#" + string(ColNumber) + ".ColType")
end choose

return ""

end function

public function boolean iskeycolumn (integer colnumber);// Devuelve TRUE/FALSE dependiendo de si la columna es key
choose case ObjType
	case "DW"
		if not isValid(DW) or isNull(DW) then return FALSE
		
		if dw.Describe("#" + string(ColNumber) + ".key") = "yes" then return TRUE
		return FALSE
		
	case "DS"
		if not isValid(DS) or isNull(DS) then return FALSE
		
		if ds.Describe("#" + string(ColNumber) + ".key") = "yes" then return TRUE
		return FALSE
		
	case "DWCH"
		if not isValid(DCh) or isNull(DCh) then return FALSE
		
		if DCh.Describe("#" + string(ColNumber) + ".key") = "yes" then return TRUE
		return FALSE
		
end choose

return FALSE

end function

public function long getx (integer colnumber);// Devuelve la posición X de una columna
return Long(DW.Describe("#" + string(ColNumber) + ".X"))

end function

public function long gety (integer colnumber);// Devuleve la posición Y de una columna
return Long(DW.Describe("#" + string(ColNumber) + ".Y"))

end function

public function long getcolheight (string columnname);// Devuelve el nombre de la columna buscandola entre los textos de la DataWindow.
ColumnName = Trim(ColumnName)

choose case objType
	case "DW"
		if not isValid(DW) then return 0
		return long(DW.Describe(ColumnName + ".height"))
		
	case "DS"
		if not isValid(DS) then return 0
		return long(DS.Describe(ColumnName + ".height"))
		
	case "DCh"
		if not isValid(DCh) then return 0
		return long(DCh.Describe(ColumnName + ".height"))

end choose

return 0

end function

public function string getfindkeystract (long prow);/////////////////////////////////////////////////////////////////////
// Devuelve la sentencia para una instrucción FIND para buscar el
// registro actual. Para hacerlo, solo tiene en cuenta los campos
// clave de la DataWindow. Se supone que no existen duplicados!!!
//
string		Condicions[], Instruccio, ls_ColType, ls_format
Integer		r, TotalCols
Integer		KeyColumns[]

if pRow > dw.RowCount() then return ""
if pRow <= 0 then return ""

TotalCols = this.GetKeyColumns(KeyColumns)

// Buscamos las columnas clave y montamos la instrucción...
for r=1 to TotalCols
	ls_ColType = Lower(dw.Describe("#" + string(keyColumns[r]) + ".ColType"))
	choose case LeftA(ls_ColType, 4)
		case "char"				
			Condicions[UpperBound(Condicions) + 1] = &
				dw.Describe("#" + string(keyColumns[r]) + ".Name") + " = '" + dw.GetItemString(pRow, KeyColumns[r]) + "'"
		case "date"
			if LeftA(ls_ColType,5) = "datet" then
//					ls_format = lnvo.uof_format("datetime",1)
				Condicions[UpperBound(Condicions) + 1] = &
					"string( " + dw.Describe("#" + string(keyColumns[r]) + ".Name") +", '"+ "dd/mm/yyyy hh:mm:ss" + "') = '" + string(dw.GetItemDateTime(pRow, KeyColumns[r]), "dd/mm/yyyy hh:mm:ss") + "'"
			else
//					ls_format = lnvo.uof_format("date",1)
				Condicions[UpperBound(Condicions) + 1] = &
					"string( " + dw.Describe("#" + string(keyColumns[r]) + ".Name") + ", '"+ "dd/mm/yyyy" + "') = '" + string(dw.GetItemDate(pRow, KeyColumns[r]), "dd/mm/yyyy") + "'"
			end if
		case "deci"
			Condicions[UpperBound(Condicions) + 1] = &
				"string( " + dw.Describe("#" + string(keyColumns[r]) + ".Name") + ", '00000000000000000,00000') = '" + string(dw.GetItemDecimal(pRow, KeyColumns[r]), "00000000000000000,00000") + "'"
		case "numb","long"
			Condicions[UpperBound(Condicions) + 1] = &
			dw.Describe("#" + string(keyColumns[r]) + ".Name") + " = " + string(dw.GetText())
				// dw.Describe("#" + string(keyColumns[r]) + ".Name") + " = " + string(dw.GetItemNumber(pRow, KeyColumns[r]))
		case "time"
//				ls_format = lnvo.uof_format("time",1)
			Condicions[UpperBound(Condicions) + 1] = &
				"string( " + dw.Describe("#" + string(keyColumns[r]) + ".Name") + ", '"+ "hh:mm:ss" +"') = '" + string(dw.GetItemTime(pRow, KeyColumns[r]), "hh:mm:ss") + "'"
	end choose
next

for r=1 to UpperBound(Condicions)
	if r <> 1 then Instruccio = Instruccio + " AND "
	Instruccio = Instruccio + Condicions[r]
next

return  Instruccio

end function

public function long getcolheight (integer colnumber);//Devuelve el nombre de la columna buscandola entre los textos de la DataWindow.
if ColNumber <= 0 or ColNumber > this.GetTotalColumns() then return 0
return this.GetColHeight(this.GetColName(ColNumber))

end function

public function integer getcolx (string columnname);//Devuelve el nombre de la columna buscandola entre los textos de la DataWindow.
ColumnName = Trim(ColumnName)

choose case objType
	case "DW"
		if not isValid(DW) then return 0
		return long(DW.Describe(ColumnName + ".X"))
		
	case "DS"
		if not isValid(DS) then return 0
		return long(DS.Describe(ColumnName + ".X"))
		
	case "DCh"
		if not isValid(DCh) then return 0
		return long(DCh.Describe(ColumnName + ".X"))

end choose

return 0

end function

public function integer getColY (string ColumnName);// Devuelve el nombre de la columna buscandola entre los textos de la DataWindow.

choose case objType
	case "DW"
		if not isValid(DW) then return 0
		return long(DW.Describe(ColumnName + ".Y"))
		
	case "DS"
		if not isValid(DS) then return 0
		return long(DS.Describe(ColumnName + ".Y"))
		
	case "DCh"
		if not isValid(DCh) then return 0
		return long(DCh.Describe(ColumnName + ".Y"))

end choose

return 0

end function

public function integer getcolx (integer colnumber);//Devuelve el nombre de la columna buscandola entre los textos de la DataWindow.
if ColNumber <= 0 or ColNumber > this.GetTotalColumns() then return 0
return this.GetColX(this.GetColName(ColNumber))

end function

public function integer getcoly (integer colnumber);// Devuelve el nombre de la columna buscandola entre los textos de la DataWindow.
if ColNumber <= 0 or ColNumber > this.GetTotalColumns() then return 0
return this.GetColY(this.GetColName(ColNumber))

end function

public function integer getcolmintaborder (integer taborders[]);///////////////////////////////////////////////////////////////////////////////
// Función		: GetColMinTabOrder
//	Comentarios	: Nos devuelve el número de columna con el taborder más pequeño
//	Parámetros	: (ninguno)
//					  
//	Retorno		: Nº de columna con el taborder más pequeño
//					  -1, en caso contrario
//					  
//	Modificaciones:
//		Fecha		Autor		Comentarios
//		--------	--------	-------------------------------------------------------
//		20/04/04	Manel		Creación del Script
///////////////////////////////////////////////////////////////////////////////

Int		li_Columna, li_MinTabOrder
Long		i, TotalColumnas

// Si no està inicialitzat no fem res ...
if not isValid(DW) or isNull(DW) then 	return -1

TotalColumnas = UpperBound(TabOrders[])

li_MinTabOrder = 9999
For i = 1 To TotalColumnas
	If TabOrders[i] = 0 Then Continue
	If TabOrders[i] < li_MinTabOrder Then 
		li_MinTabOrder = TabOrders[i]
		li_Columna = i
	End If
Next

Return li_Columna

end function

public function integer gettaborder ();// Devuelve una estructura con el TabOrder de las columnas

choose case objType
	case "DW"
		return this.GetTotalColumnsDW()
	case "DS"
		return this.GetTotalColumnsDS()
	case "DCh"
		return this.GetTotalColumnsDWCh()
end choose

return -1

end function

public function integer gettaborder (ref integer taborders[]);// Devuelve una estructura con el TabOrder de las columnas:
choose case objType
	case "DW"
		return this.GetTabOrderDW(TabOrders)
	case "DS"
		return this.GetTabOrderDS(TabOrders)
	case "DCh"
		return this.GetTabOrderDWCh(TabOrders)
end choose

return -1

end function

public function string getcoldbnamedw (integer colnumber);//Devuelve el nombre en la BD de la columna
return DW.Describe("#" + string(ColNumber) + ".dbname")

end function

public function integer gettotalcolumns ();// Devuelve el número total de columnas
choose case objType
	case "DW"
		return this.GetTotalColumnsDW()
	case "DS"
		return this.GetTotalColumnsDS()
	case "DCh"
		return this.GetTotalColumnsDWCh()
end choose

return -1

end function

private function integer gettotalcolumnsdw ();// Devuelve el número total de columnas

int	li_int

// Si no está inicializado no hacemos nada ...
if not isValid(DW) or isNull(DW) then return -1

return Integer(DW.Describe("DataWindow.Column.Count"))


end function

public function integer getkeycolumnsdw (ref integer keys[]);// Guarda las columnas clave sobre la estructura Keys[]
Integer		r, TotalCols

// Si no está inicialitzado no hacemos nada ...
if not isValid(DW) or isNull(DW) then return -1

// ManelP. 07/10/2003
Integer		li_nullArray[]
keys[] = li_NullArray[]

// Buscamos las columnas clave ...
TotalCols = this.GetTotalColumns()
for r=1 to TotalCols
	if dw.Describe("#" + string(r) + ".Key") = "yes" then
		Keys[UpperBound(Keys) + 1] = r
	end if
next

return UpperBound(keys)

end function

public function string getcolnamedw (integer colnumber);//Devuelve el nombre de la columna de ínidice marcado por el parámetro recibido
return DW.Describe("#" + string(ColNumber) + ".name")


end function

public function integer gettaborderdw (ref integer taborders[]);// Guarda las columnas clave sobre la estructura Keys[]
Integer		r, TotalCols

// Si no está inicializada no hacemos nada...
if not isValid(DW) or isNull(DW) then 	return -1

// ManelP. 07/10/2003
Integer		li_nullArray[]
tabOrders[] = li_NullArray[]

// Buscamos las columnas clave ...
TotalCols = this.GetTotalColumns() 
for r=1 to TotalCols
	TabOrders[r] = Integer(DW.Describe("#" + string(r) + ".TabSequence"))
next

return UpperBound(TabOrders)

end function

public function string getitemoriginal (long row, string column);String		ls_Type,ls_Data

ls_Type = DW.Describe(string(Column) + ".ColType")
Choose Case MidA(ls_Type,1,5)
	Case "integ", "numbe", "long"
		ls_Data = String( DW.GetItemNumber(Row, Column,Primary!,True) )
	Case "decim"
		ls_Data = String( DW.GetItemDecimal(Row,Column,Primary!,True))
	Case "char", "char("
		ls_Data = DW.GetItemString(Row, Column,Primary!,True)
	Case "date"
		ls_Data = String( DW.GetItemDate(Row, Column,Primary!,True))
	Case "datet"
		ls_Data = String( DW.GetItemDateTime(Row, Column,Primary!,True))
	Case "time"
		ls_Data = String( DW.GetItemTime(Row, Column,Primary!,True))
End Choose

Return ls_Data
end function

public function DWObject of_getobject (string as_column);DWObject	lpo_Column

lpo_Column = Create DWObject

lpo_Column.Name = DW.Describe( as_Column + '.Name' )
lpo_Column.ID = DW.Describe( as_Column + '.ID' )
lpo_Column.dbName = DW.Describe( as_Column + '.dbName' )
lpo_Column.Tag = DW.Describe( as_Column + '.Tag' )
lpo_Column.ColType = DW.Describe( as_Column + '.ColType' )
lpo_Column.Type = DW.Describe( as_Column + '.Type' )
lpo_Column.X = DW.Describe( as_Column + '.X' )
lpo_Column.Y = DW.Describe( as_Column + '.Y' )
lpo_Column.Width = DW.Describe( as_Column + '.Width' )
lpo_Column.Height = DW.Describe( as_Column + '.Height' )

Return lpo_COlumn
end function

public function string evaluate (string as_expression);///////////////////////////////////////////////////////////////////////////////
// Función		: Evaluate
//	Comentarios	: Evalua una propiedad analizando posibles expresiones asignadas 
//	Parámetros	: as_Expression
//					  
//	Retorno		:  valor de la propiedad evaluada
//					  
//	Modificaciones:
//		Fecha		Autor		Comentarios
//		--------	--------	-------------------------------------------------------
//		23/07/01	Manel		Creación del Script
///////////////////////////////////////////////////////////////////////////////
String			ls_Evaluate
n_cst_string	lnv_String

If as_Expression = '?' Or as_Expression = '!' Then	Return as_Expression

as_Expression = lnv_String.of_GlobalReplace(as_Expression,'"','')
ls_Evaluate = lnv_String.of_GetToken(as_Expression,'~t')

If Not lnv_String.of_IsEmpty(as_Expression) Then
	as_Expression = lnv_String.of_GlobalReplace(as_Expression,"'","~'")
	
	Choose Case	objType
		Case	"DW"
			ls_Evaluate = DW.Describe("Evaluate('" + as_Expression + "'," + String(DW.GetRow()) + ")")
		Case	"DS"
			ls_Evaluate = DS.Describe("Evaluate('" + as_Expression + "'," + String(DS.GetRow()) + ")")
		Case	"DWCH"
			ls_Evaluate = DCh.Describe("Evaluate('" + as_Expression + "'," + String(DCh.GetRow()) + ")")
	End Choose
End If

Return ls_Evaluate

end function

public function string getdwproperty (string as_columna, string as_property);///////////////////////////////////////////////////////////////////////////////
// Función		: GetDWProperty
//	Comentarios	: Recupera el valor de una propiedad evaluando expresiones 
//						  asignadas a la propiedad si existen
//	Parámetros	: as_columna		->	Columna de la DW
//						: as_property		-> Prpiedad a evaluar
//					  
//	Retorno		:  valor de la propiedad evaluada
//					  
//	Modificaciones:
//		Fecha		Autor		Comentarios
//		--------	--------	-------------------------------------------------------
//		23/07/01	Manel		Creación del Script
///////////////////////////////////////////////////////////////////////////////
Return Evaluate( DW.Describe( as_Columna + '.' + as_Property ) )

end function

public function string getdsproperty (string as_columna, string as_property);///////////////////////////////////////////////////////////////////////////////
// Función		: GetDWProperty
//	Comentarios	: Recupera el valor de una propiedad evaluando expresiones 
//						  asignadas a la propiedad si existen
//	Parámetros	: as_columna		->	Columna de la DW
//						: as_property		-> Prpiedad a evaluar
//					  
//	Retorno		:  valor de la propiedad evaluada
//					  
//	Modificaciones:
//		Fecha		Autor		Comentarios
//		--------	--------	-------------------------------------------------------
//		23/07/01	Manel		Creación del Script
///////////////////////////////////////////////////////////////////////////////
Return Evaluate( DS.Describe( as_Columna + '.' + as_Property ) )

end function

public function string getdchproperty (string as_columna, string as_property);///////////////////////////////////////////////////////////////////////////////
// Función		: GetDWProperty
//	Comentarios	: Recupera el valor de una propiedad evaluando expresiones 
//						  asignadas a la propiedad si existen
//	Parámetros	: as_columna		->	Columna de la DW
//						: as_property		-> Prpiedad a evaluar
//					  
//	Retorno		:  valor de la propiedad evaluada
//					  
//	Modificaciones:
//		Fecha		Autor		Comentarios
//		--------	--------	-------------------------------------------------------
//		23/07/01	Manel		Creación del Script
///////////////////////////////////////////////////////////////////////////////
Return Evaluate( DCh.Describe( as_Columna + '.' + as_Property ) )

end function

public function string getproperty (string as_columna, string as_property);String	ls_Value

SetNull(ls_Value)

Choose Case	objType
	Case	"DW"
		ls_Value = GetDWProperty( as_Columna,as_Property )
	Case	"DS"
		ls_Value = GetDSProperty( as_Columna,as_Property )
	Case	"DWCH"
		ls_Value = GetDChProperty( as_Columna,as_Property )
End Choose

Return ls_Value

end function

public function integer settaborder0 ();// Pone el TabOrder a 0 por todas las columnas.
choose case objType
	case "DW"
		return this.SetTabOrder0DW()
	case "DS"
		return this.SetTabOrder0DS()
	case "DCh"
		return this.SetTabOrder0DWCh()
end choose

return -1

end function

public function integer getcolumnattr (ref n_cst_dwobject_attr anv_dwo[]);Integer						li_i,li_u,li_c
String						ls_String
String						ls_Object[]
n_cst_string				lnv_String
n_cst_conversio			lnv_Conv
n_cst_dwobject_attr		ldwo_Null[]

ls_String = DW.Describe('Datawindow.Objects')

// Inicializamos la estructura
anv_dwo = ldwo_Null

li_u = lnv_String.of_ParseToArray(ls_String,'~t',ls_Object)

For li_i=1 To li_u
	
	string	ls_type
	// string	ls_band
	// ls_band = lower(DW.Describe(ls_Object[li_i] + '.Band'))
	ls_type = lower(DW.Describe(ls_Object[li_i] + '.Type'))
	
	If ls_type = 'column' or ls_type = 'computed' Then
	
	// If Lower(DW.Describe(ls_Object[li_i] + '.Band')) = 'detail' Or Lower(DW.Describe(ls_Object[li_i] + '.Type')) = 'column' Then
		li_c ++
		
		anv_dwo[li_c].DWName = ls_Object[li_i]
		anv_dwo[li_c].ColumnID = Integer(DW.Describe(ls_Object[li_i] + '.ID'))
		anv_dwo[li_c].DBName = DW.Describe(ls_Object[li_i] + '.DBName')
		anv_dwo[li_c].DataType = DW.Describe(ls_Object[li_i] + '.coltype')
		anv_dwo[li_c].esVisible = lnv_Conv.of_Boolean( DW.Describe(ls_Object[li_i] + '.Visible') )
	End If
Next

Return li_u
end function

public function integer settabordersdw (integer taborders[]);// Restaura los TabOrders.
long			r, ll_Total
string		ls_Ret, ls_Modify

// Si no está inicializado, no hay nada que hacer...
if not isValid(DW) or isNull(DW) then return -1

ll_Total = this.GetTotalColumns()

// Si no coinciden las columnas, no hace nada...
if UpperBound(TabOrders) <> ll_Total then return -1

// Buscamos columnas que forman parte de la clave ...
//s DW.ModifyOnProcess = True
for r=1 to ll_Total
	ls_modify = "#" + string(r) + ".TabSequence='" + string(TabOrders[r],"000")+"'"
	ls_Ret = DW.Modify(ls_modify)
next
//s DW.ModifyOnProcess = False

return 0

end function

public function integer settaborder0dw ();// Pone el TabOrder a 0 por todas las columnas de la DataWindow.
Integer		r, li_estat1, li_estat2

// Si no está inicializado no hacemos nada ...
if not isValid(DW) or isNull(DW) then return -1

/*s
// IncPerfomance
If isValid(DW.srvDO) Then	
	li_estat1 = DW.srvDO.of_GetEstat()
	DW.srvDO.of_SetEstat(DW.srvDO.onQuietMode)
End If
If isValid(DW.srvAccio) Then	
	li_estat2 = DW.srvAccio.of_GetEstat()
	DW.srvAccio.of_SetEstat(DW.srvAccio.onQuietMode)
End If
*/
// Buscamos las columnas clave ...
//s DW.ModifyONProcess = True
for r=1 to this.GetTotalColumns()
	DW.Modify("#" + string(r) + ".TabSequence=0")
next
//s DW.ModifyONProcess = False

/*// IncPerfomance
If isValid(DW.srvDO) Then	DW.srvDO.of_SetEstat(li_estat1)
If isValid(DW.srvAccio) Then	DW.srvAccio.of_SetEstat(li_estat2)
*/
return 0

end function

public function integer getsortposicion (ref string as_columnas[], ref string as_label[], string as_tipo[], datawindow adw_datos);///////////////////////////////////////////////////////////////////////////////
// Función		: getsortposicion
//
//	Comentarios	: 	Ordena un conjunto de columnas por su posición
//						relativa en el datawindow.
//
//						Diseñado para el servicio de búsqueda (w_find)
//
//	Parámetros	: 
//					  
//	Retorno		: -1, Error
//					   0  Todo correcto
//
//	Modificaciones:
//		Fecha		Autor			Comentarios
//		--------	--------		----------------------------------------------------
//		PBD 		29/08/05		Creación
///////////////////////////////////////////////////////////////////////////////

/*Ordena un listado de valores por su aspecto visual
Primero los más a la izquierda	x
Después, los más estrechos			w
Después, los más arriba				y
Después, los más bajos				h

Para ello crea un datawindow, le asigna los valores de
posición y tamaño y ordena por dichos campos*/

integer			i, j, li_total, li_fila, li_ret
long				ll_x[], ll_y[], ll_width[], ll_height[]
string			ls_valor, ls_col

datastore		lds_datos

li_total = Upperbound(as_columnas[])
lds_datos = Create datastore

FOR j = 1 TO li_total	
	ls_valor = adw_datos.Describe(as_columnas[j]+".x")
	IF IsNumber(ls_valor) THEN ll_x[j] = integer(ls_valor) ELSE ll_x[j] = 32000
	
	ls_valor = adw_datos.Describe(as_columnas[j]+".y")
	IF IsNumber(ls_valor) THEN ll_y[j] = integer(ls_valor) ELSE ll_y[j] = 0
	
	ls_valor = adw_datos.Describe(as_columnas[j]+".width")
	IF IsNumber(ls_valor) THEN ll_width[j] = integer(ls_valor) ELSE ll_width[j] = 0
	
	ls_valor = adw_datos.Describe(as_columnas[j]+".height")
	IF IsNumber(ls_valor) THEN ll_height[j] = integer(ls_valor) ELSE ll_height[j] = 0
NEXT


ls_col+= 'column=(type=long updatewhereclause=yes name=x dbname="x" )~r~n'
ls_col+= 'column=(type=long updatewhereclause=yes name=y dbname="y" )~r~n'
ls_col+= 'column=(type=long updatewhereclause=yes name=w dbname="w" )~r~n'
ls_col+= 'column=(type=long updatewhereclause=yes name=h dbname="h" )~r~n'
ls_col+= 'column=(type=char(255) updatewhereclause=yes name=l dbname="l" )~r~n'
ls_col+= 'column=(type=char(255) updatewhereclause=yes name=t dbname="t" )~r~n'
ls_col+= 'column=(type=char(255) updatewhereclause=yes name=n dbname="n" )~r~n'

li_ret = lds_datos.Create('release 8;'+&
'datawindow(units=0 timer_interval=0 color=67108864 processing=0 HTMLDW=no )'+&
'header(height=84 color="536870912" )'+&
'summary(height=0 color="536870912" )'+&
'footer(height=0 color="536870912" )'+&
'detail(height=96 color="536870912" )'+&
'table('+ls_col+&
' )'+&
'htmltable(border="1" )'+&
'htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" netscapelayers="0" )')

FOR i = 1 TO li_total
	li_fila = lds_datos.InsertRow(0)
	lds_datos.SetItem(li_fila,"x",ll_x[i])
	lds_datos.SetItem(li_fila,"y",ll_y[i])
	lds_datos.SetItem(li_fila,"w",ll_width[i])
	lds_datos.SetItem(li_fila,"h",ll_height[i])
	lds_datos.SetItem(li_fila,"n",as_columnas[i])
	lds_datos.SetItem(li_fila,"l",as_label[i])
	lds_datos.SetItem(li_fila,"t",as_tipo[i])
NEXT

li_ret = lds_datos.SetSort("x w y h")
li_ret = lds_datos.Sort()
FOR i = 1 TO li_total
	as_columnas[i] = lds_datos.GetItemString(i,"n")
	as_label[i] = lds_datos.GetItemString(i,"l")
	as_tipo[i] = lds_datos.GetItemString(i,"t")
NEXT

RETURN 0
end function

public function long of_getnearlabel (string as_columna, ref string as_label);///////////////////////////////////////////////////////////////////////////////
//
// Función		: of_getnearlabel
//
//	Comentarios	: Detecta la etiqueta más próxima a la columna
//
//
//	Parámetros	: 	string				as_columna
//						string				as_label			reference
//					  
//	Retorno		: -1, No encontrado
//					   0  Encontrada etiqueta
//
//	Modificaciones:
//		Fecha		Autor			Comentarios
//		--------	--------		----------------------------------------------------
//		PBD 		29/08/05		Creación
///////////////////////////////////////////////////////////////////////////////
boolean				lb_encontrado
string				ls_x, ls_y, ls_height, ls_width
string				ls_xlabel, ls_ylabel, ls_heightlabel, ls_widthlabel
string				ls_objects, ls_object, ls_type, ls_tipodw
integer				li_ret, li_dist
long					li_pos
integer 				LI_MARGEN_WIDTH = 400
CONSTANT integer	LI_MARGEN_HEIGHT = 12
CONSTANT integer	LI_MARGEN = 5
CONSTANT integer	LI_DISTANTE_TOP = 40
CONSTANT integer	LI_DISTANTE_SIDE = 100

/*La etiqueta más próxima será la que esté más o menos (LI_MARGEN) encima 
(aprox. misma x y misma width¹)
o la que esté a la derecha o izquierda
(aprox. misma y y misma height) 
Siempre y cuando la etiqueta no esté muy lejos del campo(LI_DISTANTE)

¹en dw no grid podrá tener otra width*/

ls_tipodw = DW.Describe("datawindow.processing")
IF ls_tipodw = "1" THEN LI_MARGEN_WIDTH = 5

ls_x = DW.Describe(as_columna+".x")
ls_y = DW.Describe(as_columna+".y")
ls_height = DW.Describe(as_columna+".height")
ls_width = DW.Describe(as_columna+".width")


ls_objects = DW.Describe("Datawindow.objects") + "~t"

li_pos = PosA(ls_objects,"~t")

DO WHILE li_pos > 0 AND lb_encontrado = FALSE
	ls_object = MidA(ls_objects,1, li_pos -1)
	
	ls_type = DW.Describe(ls_object+".type")
	
	IF ls_type = "text" THEN
		ls_xlabel = DW.Describe(ls_object+".x")
		ls_ylabel = DW.Describe(ls_object+".y")
		ls_widthlabel = DW.Describe(ls_object+".width")
		ls_heightlabel = DW.Describe(ls_object+".height")

/***************************BÚSQUEDA ENCIMA DEL CAMPO**********************************/
		IF Abs(integer(ls_xlabel) - integer(ls_x)) < LI_MARGEN THEN
			IF Abs(integer(ls_widthlabel) - integer(ls_width)) < LI_MARGEN_WIDTH THEN
				
				li_dist = Abs(integer(ls_y) - integer(ls_ylabel) - integer(ls_heightlabel))
				IF li_dist < LI_DISTANTE_TOP THEN
				
					lb_encontrado = TRUE
					
				END IF
			END IF
		END IF
		
		IF lb_encontrado = FALSE THEN
/***************************BÚSQUEDA A LA DERECHA DEL CAMPO**********************************/			
			IF Abs(integer(ls_ylabel) - integer(ls_y)) < LI_MARGEN THEN
				IF Abs(integer(ls_heightlabel) - integer(ls_height)) < LI_MARGEN_HEIGHT THEN
					
					li_dist = Abs(integer(ls_x)  -integer(ls_xlabel) - integer(ls_widthlabel))
					IF  li_dist	< LI_DISTANTE_SIDE THEN
						lb_encontrado = TRUE
					END IF
				END IF
			END IF
		END IF
			
	END IF
	
	ls_objects = MidA(ls_objects , li_pos +1)
	li_pos = PosA(ls_objects, "~t")
LOOP

IF lb_encontrado = TRUE THEN
	as_label = DW.Describe(ls_object+".text")
	li_ret = 0
ELSE
	li_ret = -1
END IF

RETURN li_ret
end function

public function integer getsortid (ref string as_columnas[], ref string as_label[], string as_tipo[], datawindow adw_datos);///////////////////////////////////////////////////////////////////////////////
// Función		: getsortid
//
//	Comentarios	: 	Ordena un conjunto de columnas por su ID
//
//						Diseñado para el servicio de búsqueda (w_find)
//
//	Parámetros	: 
//					  
//	Retorno		: -1, Error
//					   0  Todo correcto
//
//	Modificaciones:
//		Fecha		Autor			Comentarios
//		--------	--------		----------------------------------------------------
//		PBD 		29/08/05		Creación
///////////////////////////////////////////////////////////////////////////////

integer			i, j, li_total, li_fila, li_ret, li_cols, li_contador
string			ls_valor, ls_col
string			ls_columnas[], ls_label[],ls_tipo[]

li_cols = integer(adw_datos.Describe("Datawindow.column.count"))

li_total = UpperBound(as_columnas[])

FOR i = 1 TO li_cols
	ls_col = adw_datos.Describe("#"+string(i)+".name")
	FOR j = 1 TO li_total
		IF ls_col = as_columnas[j] THEN
			li_contador ++
			ls_columnas[li_contador] = as_columnas[j]
				ls_label[li_contador] = 	as_label[j]
				 ls_tipo[li_contador] = 	 as_tipo[j]
			EXIT
		END IF
	NEXT
NEXT
as_columnas[] = ls_columnas[]
as_label[] = ls_label[]
as_tipo[] = ls_tipo[]

RETURN 0
end function

on uo_dwsrv_utils.create
call super::create
end on

on uo_dwsrv_utils.destroy
call super::destroy
end on


forward
global type uo_appsrv_parametres from uo_appsrv_base
end type
end forward

global type uo_appsrv_parametres from uo_appsrv_base
end type
global uo_appsrv_parametres uo_appsrv_parametres

type variables
// DataStore para almacenar los valores por defecto
datastore	dsValors

// Indicador de si es la primera vez.
Boolean		Inicial = TRUE

// Parámetro PowerObject
PowerObject POParm

// Parámetro BO
PowerObject BOParm

// Blobs
BLOB			ibl_valor

// Ventanas pasadas por parámetro
Window		ventana[]

// Paso de parametros de datastores
datastore	iDS

end variables

forward prototypes
public function integer getvalor (string pnom, ref date pvalor)
public function integer getvalor (string pnom, ref string pvalor)
public function integer getvalor (string pnom, ref boolean pvalor)
public function integer getvalor (string pnom, ref decimal pvalor)
public function long getvalor (string pnom, ref long pvalor)
public function integer getvalor (string pnom, ref integer pvalor)
public function string getparmnames ()
public function integer getparmnumber ()
public function string getparmnames (integer ai_colnumber)
public function integer setcoltype (integer ai_colnumber, string as_coltype)
public function string getcoltype (integer ai_colnumber)
public function integer setcolcompara (integer ai_ColNumber, string as_compara)
public function string getcolcompara (integer ai_ColNumber)
public subroutine setnameslave (long a_lrow, string a_snom)
public function integer getvalor (string pnom, ref any pvalor)
public subroutine reset ()
public function string getparmnameslave (integer a_irow)
public function integer deletevalor (string pnom)
public function integer findvalor (string pnom)
public function string getfiltersentence ()
public function integer getvalor (string pnom, ref character pvalor)
public function integer setvalor (blob pvalor)
public function integer getvalor (ref blob pvalor)
public function integer SetValor (string pnom, string pvalor, string etiqueta)
public function integer setvalor (string pnom, boolean pvalor, string etiqueta)
public function integer setvalor (string pnom, boolean pvalor)
public function integer setvalor (string pnom, character pvalor)
public function integer setvalor (string pnom, character pvalor, string etiqueta)
public function integer setvalor (string pnom, date pvalor)
public function integer setvalor (string pnom, datetime pvalor)
public function integer setvalor (string pnom, datetime pvalor, string etiqueta)
public function integer setvalor (string pnom, date pvalor, string etiqueta)
public function integer setvalor (string pnom, decimal pvalor)
public function integer setvalor (string pnom, decimal pvalor, string etiqueta)
public function integer setvalor (string pnom, integer pvalor)
public function integer setvalor (string pnom, integer pvalor, string etiqueta)
public function integer setvalor (string pnom, long pvalor)
public function integer setvalor (string pnom, long pvalor, string etiqueta)
public function integer setvalor (string pnom, string pvalor)
public subroutine copy (datastore aparam)
public function integer getvalor (string pnom, ref datetime pvalor)
public function integer of_getresultset (ref resultset ars_valores)
public function integer of_setparametros (resultset ars_param)
end prototypes

public function integer getvalor (string pnom, ref date pvalor);// 
Integer	Posicio

if not isValid(dsValors) then return -1

setNull(pValor)

//Posicio = dsValors.Find("nom = '" + Upper(pNom) + "'", 1, dsValors.RowCount())
Posicio = dsValors.Find("nom = '" + pNom + "'", 1, dsValors.RowCount())
if Posicio = 0 then Return -1
If IsDate (dsValors.object.valor[Posicio]) Then
	pValor = Date(dsValors.object.valor[Posicio])
End If
return 1

end function

public function integer getvalor (string pnom, ref string pvalor);Integer	Posicio

setNull(pValor)

if not isValid(dsVAlors) then return -1

//Posicio = dsValors.Find("nom = '" + Upper(pNom) + "'", 1, dsValors.RowCount())
Posicio = dsValors.Find("nom = '" + pNom + "'", 1, dsValors.RowCount())
if Posicio = 0 then Return -1
pValor = dsValors.object.valor[Posicio]
return 1

end function

public function integer getvalor (string pnom, ref boolean pvalor);String	sValor
Integer	Posicio

if not isValid(dsValors) then return -1
pValor = False

//Posicio = dsValors.Find("nom = '" + Upper(pNom) + "'", 1, dsValors.RowCount())
Posicio = dsValors.Find("nom = '" + pNom + "'", 1, dsValors.RowCount())

if Posicio = 0 then Return -1

sValor = dsValors.object.valor[Posicio]

if isNull(sValor) Or LenA(Trim(sValor)) = 0 then Return -1

choose case Upper(MidA(Trim(sValor),1,1))
	case "1"
		pValor = True
	case "S"
		pValor = True
	case "T"
		pValor = True
	case "Y"
		pValor = True
	case "V"
		pValor = True
	case else
		pValor = False
end choose

return 1

end function

public function integer getvalor (string pnom, ref decimal pvalor);String	sValor
Integer	Posicio

if not isValid(dsValors) then return -1

setNull(pValor)

//Posicio = dsValors.Find("nom = '" + Upper(pNom) + "'", 1, dsValors.RowCount())
Posicio = dsValors.Find("nom = '" + pNom + "'", 1, dsValors.RowCount())
if Posicio = 0 then Return -1
sValor = dsValors.object.valor[Posicio]
If IsNumber (sValor) Then
	pValor = Dec(sValor)
End If
return 1

end function

public function long getvalor (string pnom, ref long pvalor);// 
Integer	Posicio

if not isValid(dsValors) then return -1

setNull(pValor)

//Posicio = dsValors.Find("nom = '" + Upper(pNom) + "'", 1, dsValors.RowCount())
Posicio = dsValors.Find("nom = '" + pNom + "'", 1, dsValors.RowCount())
if Posicio = 0 then Return -1
pValor = Long(dsValors.object.valor[Posicio])

return 1

end function

public function integer getvalor (string pnom, ref integer pvalor);// 
Integer	Posicio

if not isValid(dsValors) then return -1

setNull(pValor)

//Posicio = dsValors.Find("nom = '" + Upper(pNom) + "'", 1, dsValors.RowCount())
Posicio = dsValors.Find("nom = '" + pNom + "'", 1, dsValors.RowCount())
if Posicio = 0 then Return -1
pValor = Long(dsValors.object.valor[Posicio])

return 1

end function

public function string getparmnames ();Integer		li
String		RetString

for li=1 to this.dsValors.RowCount()
	if li = 1 then
		RetString = this.dsValors.object.nom[li]
	else
		RetString = RetString + ";" + this.dsValors.object.nom[li]
	end if
next

return RetString

end function

public function integer getparmnumber ();return this.dsValors.RowCount()

end function

public function string getparmnames (integer ai_colnumber);if ai_ColNumber > dsValors.RowCount() then return ""
return this.dsValors.object.nom[ai_ColNumber]

end function

public function integer setcoltype (integer ai_colnumber, string as_coltype);if ai_ColNumber > dsValors.Rowcount() then return -1
if isNull(as_ColType) or Trim(as_ColType) = "" then return -1

dsValors.object.tipo[ai_ColNumber] = as_ColType
return 1

end function

public function string getcoltype (integer ai_colnumber);if ai_ColNumber > dsValors.Rowcount() then return ""
return dsValors.object.tipo[ai_ColNumber]


end function

public function integer setcolcompara (integer ai_ColNumber, string as_compara);if ai_ColNumber > dsValors.Rowcount() then return -1

if isNull(as_Compara) or Trim(as_Compara) = "" then return -1

dsValors.object.compara[ai_ColNumber] = as_compara
return 1

end function

public function string getcolcompara (integer ai_ColNumber);if ai_ColNumber > dsValors.Rowcount() then return ""
return dsValors.object.compara[ai_ColNumber]


end function

public subroutine setnameslave (long a_lrow, string a_snom);//Usado por el servidor de link entre uo_datawindows y/o uo_datastores...
//Actualiza el nombre del campo que contiene el nombre del campo según el objeto que juega
//el papel de slave en la relación de link...
//tambien con el sharelink
IF dsValors.RowCount() < a_lRow then return
dsValors.SetItem( a_lRow, "nom_slave", a_sNom )
end subroutine

public function integer getvalor (string pnom, ref any pvalor);Integer	Posicio

if not isValid(dsValors) then return -1

setNull(pValor)

//Posicio = dsValors.Find("nom = '" + Upper(pNom) + "'", 1, dsValors.RowCount())
Posicio = dsValors.Find("nom = '" + pNom + "'", 1, dsValors.RowCount())
if Posicio = 0 then Return -1
pValor = dsValors.object.valor[Posicio]
return 1

end function

public subroutine reset ();// Inicializa la estructura de parámetros.
if isValid(dsValors) then this.dsValors.Reset()
Inicial = TRUE

end subroutine

public function string getparmnameslave (integer a_irow);if a_irow > dsValors.RowCount() then return ""
return this.dsValors.object.nom_slave[a_irow]

end function

public function integer deletevalor (string pnom);// Borramos el valor solicitado
Integer	Posicio
string	ls_Find
long		ll_Row

if not isValid(dsValors) then return -1

// Lo buscamos ...
//ls_Find = "nom = '" + Upper(pNom) + "'"
ls_Find = "nom = '" + pNom + "'"
ll_Row  = dsValors.RowCount()

Posicio = dsValors.Find( ls_Find, 1, ll_Row)

// Si no existe ... no hacemos nada, volvemos
if Posicio = 0 then return -1

// Si existe lo borramos
dsValors.DeleteRow(Posicio)

return 0

end function

public function integer findvalor (string pnom);// Buscamos el valor solicitado
Integer	Posicio
string	ls_Find
long		ll_Row

if not isValid(dsValors) then return -1

// Lo buscamos ...
//ls_Find = "nom = '" + Upper(pNom) + "'"
ls_Find = "nom = '" + pNom + "'"
ll_Row  = dsValors.RowCount()

Posicio = dsValors.Find( ls_Find, 1, ll_Row)

// Si no existe ... no hacemos nada, volvemos
if Posicio = 0 then return -1

// Si existe, retornamos la posición.
return  Posicio

end function

public function string getfiltersentence ();// Para las columnas y sus valores, retorna un string para realizar filtros sobre les DW hijas
if this.GetParmNumber() = 0 then return ""

string		Condicions[], Instruccio
Integer	Total, r
String		ls_Nom, ls_NomSlave, ls_Valor, ls_Tipo

Total = this.GetParmNumber()
for r=1 to Total
	ls_Nom = this.getParmNames(r)
	ls_NomSlave = this.getParmNameSlave(r)
	this.getValor(ls_Nom, ls_Valor)
	ls_Tipo    = this.getColType(r)
	
	choose case LeftA(ls_Tipo, 4)
		case "char"
			Condicions[UpperBound(Condicions) + 1] = &
				ls_NomSlave + " = '" + ls_valor + "'"
		case "date"
			if LeftA(ls_Tipo,5) = "datet" then
				Condicions[UpperBound(Condicions) + 1] = &
					"string( " + ls_NomSlave +", '"+ "dd/mm/yyyy hh:mm:ss" + "') = '" + string(datetime(ls_valor), "dd/mm/yyyy hh:mm:ss") + "'"
			else
				Condicions[UpperBound(Condicions) + 1] = &
					"string( " + ls_NomSlave + ", '"+ "dd/mm/yyyy" + "') = '" + string(date(ls_valor), "dd/mm/yyyy") + "'"
			end if
		case "deci"
			Condicions[UpperBound(Condicions) + 1] = &
				"string( " + ls_NomSlave + ", '00000000000000000,00000') = '" + string(dec(ls_valor), "00000000000000000,00000") + "'"
		case "numb","long"
			Condicions[UpperBound(Condicions) + 1] = &
				ls_NomSlave + " = " + ls_valor
		case "time"
			Condicions[UpperBound(Condicions) + 1] = &
				"string( " + ls_NomSlave + ", '"+ "hh:mm:ss" +"') = '" + string(time(ls_valor), "hh:mm:ss") + "'"
	end choose
next

for r=1 to UpperBound(Condicions)
	if r <> 1 then Instruccio = Instruccio + " AND "
	Instruccio = Instruccio + Condicions[r]
next

return Instruccio

end function

public function integer getvalor (string pnom, ref character pvalor);String		sValor
Integer	Posicio

if not isValid(dsValors) then return -1

setNull(pValor)

Posicio = dsValors.Find("nom = '" + pNom + "'", 1, dsValors.RowCount())
if Posicio = 0 then Return -1

sValor = dsValors.object.valor[Posicio]
pValor = sValor

return 1

end function

public function integer setvalor (blob pvalor);// Actualizamos el valor solicitado
ibl_valor = pvalor

RETURN 1
end function

public function integer getvalor (ref blob pvalor);// Actualitzamos el valor solicitado
pvalor = ibl_valor

RETURN 1
end function

public function integer SetValor (string pnom, string pvalor, string etiqueta);// Actualitzamos el valor solicitado
Integer	Posicio
string	ls_Find
long		ll_Row

if not isValid(dsValors) then return -1

// Lo buscamos ...
//ls_Find = "nom = '" + Upper(pNom) + "'"
ls_Find = "nom = '" + pNom + "'"
ll_Row  = dsValors.RowCount()

Posicio = dsValors.Find( ls_Find, 1, ll_Row)
if Posicio = 0 then 
	// Si no existe ... lo insertamos
	Posicio = dsValors.InsertRow(0)
//	dsValors.object.nom[Posicio] = Upper(pNom)
	dsValors.object.nom[Posicio] = pNom
	dsValors.object.tipo[Posicio] = "char"
end if
	
dsValors.object.valor[Posicio] = pValor
dsValors.object.etiqueta[Posicio] = Etiqueta

return Posicio
end function

public function integer setvalor (string pnom, boolean pvalor, string etiqueta);// Actualizamos el valor solicitado
Integer	Posicio
String	sValor

if pValor then 
	sValor = "True"
Else
	sValor = "False"
End If

return setvalor(pNom,sValor,Etiqueta)

end function

public function integer setvalor (string pnom, boolean pvalor);// Actualizamos el valor solicitado
Integer	Posicio
String	sValor

if pValor then 
	sValor = "True"
Else
	sValor = "False"
End If


return setvalor(pNom,sValor)

end function

public function integer setvalor (string pnom, character pvalor);// Actualizamos el valor solicitado
Integer	Posicio
String		sValor

sValor = pValor

return setvalor(pNom,sValor)

end function

public function integer setvalor (string pnom, character pvalor, string etiqueta);// Actualizamos el valor solicitado
Integer	Posicio
String		sValor

sValor = pValor

return setvalor(pNom,sValor,Etiqueta)

end function

public function integer setvalor (string pnom, date pvalor);// Actualizamos el valor solicitado
Integer	Posicio
String	sValor

sValor = String(pValor, "dd/mm/yyyy")

return setvalor(pNom,sValor)

end function

public function integer setvalor (string pnom, datetime pvalor);// Actualizamos el valor solicitado
Integer	Posicio
String	sValor

sValor = String(pValor, "dd/mm/yyyy hh:mm:ss")

return setvalor(pNom,sValor)

end function

public function integer setvalor (string pnom, datetime pvalor, string etiqueta);// Actualizamos el valor solicitado
Integer	Posicio
String	sValor

sValor = String(pValor, "dd/mm/yyyy hh:mm:ss")

return setvalor(pNom,sValor,Etiqueta)

end function

public function integer setvalor (string pnom, date pvalor, string etiqueta);// Actualizamos el valor solicitado
Integer	Posicio
String	sValor

sValor = String(pValor, "dd/mm/yyyy")

return setvalor(pNom,sValor,Etiqueta)

end function

public function integer setvalor (string pnom, decimal pvalor);// Actualizamos el valor solicitado
Integer	Posicio
String	sValor

sValor = String(pValor)

return setvalor(pNom,sValor)

end function

public function integer setvalor (string pnom, decimal pvalor, string etiqueta);// Actualizamos el valor solicitado
Integer	Posicio
String	sValor

sValor = String(pValor)

return setvalor(pNom,sValor,Etiqueta)

end function

public function integer setvalor (string pnom, integer pvalor);// Actualizamos el valor solicitado
Integer	Posicio
String	sValor

sValor = String(pValor)

return setvalor(pNom,sValor)

end function

public function integer setvalor (string pnom, integer pvalor, string etiqueta);// Actualizamos el valor solicitado
Integer	Posicio
String	sValor

sValor = String(pValor)

return setvalor(pNom,sValor,Etiqueta)

end function

public function integer setvalor (string pnom, long pvalor);// Actualizamos el valor solicitado
Integer	Posicio
String	sValor

sValor = String(pValor)

return setvalor(pNom,sValor)

end function

public function integer setvalor (string pnom, long pvalor, string etiqueta);// Actualizamos el valor solicitado
Integer	Posicio
String	sValor

sValor = String(pValor)

return setvalor(pNom,sValor,Etiqueta)

end function

public function integer setvalor (string pnom, string pvalor);// Actualizamos el valor solicitado
Integer	Posicio
string	ls_Find
long		ll_Row

if not isValid(dsValors) then return -1

// Lo buscamos ...
//ls_Find = "nom = '" + Upper(pNom) + "'"
ls_Find = "nom = '" + pNom + "'"
ll_Row  = dsValors.RowCount()

Posicio = dsValors.Find( ls_Find, 1, ll_Row)
if Posicio = 0 then 
	// Si no existe ... lo insertamos
	Posicio = dsValors.InsertRow(0)
//	dsValors.object.nom[Posicio] = Upper(pNom)
	dsValors.object.nom[Posicio] = pNom
	dsValors.object.tipo[Posicio] = "char"
end if
	
dsValors.object.valor[Posicio] = pValor

return Posicio
end function

public subroutine copy (datastore aparam);// Llena la estructura de parámetros con los que recibe.
aParam.RowsCopy(1, aParam.RowCount(), Primary!, this.dsValors, this.dsValors.RowCount() + 1, Primary!)

end subroutine

public function integer getvalor (string pnom, ref datetime pvalor);String				sValor
Integer				Posicio
n_Cst_conversio	lnv_Conversio

if not isValid(dsValors) then return -1

setNull(pValor)

//Posicio = dsValors.Find("nom = '" + Upper(pNom) + "'", 1, dsValors.RowCount())
Posicio = dsValors.Find("nom = '" + pNom + "'", 1, dsValors.RowCount())
if Posicio = 0 then Return -1
sValor = dsValors.object.valor[Posicio]
pValor = lnv_conversio.of_DateTime(sValor)
return 1

end function

public function integer of_getresultset (ref resultset ars_valores);SetNull(ars_Valores)
Return dsValors.GenerateResultset(ars_Valores)
end function

public function integer of_setparametros (resultset ars_param);// Cargamos el ds de parametros
If isNull(ars_Param) Or Not isValid(ars_Param) Then Return -1

dsValors.Reset()
dsValors.CreateFrom(ars_Param)

Return 1
end function

on uo_appsrv_parametres.create
call super::create
end on

on uo_appsrv_parametres.destroy
call super::destroy
end on

event constructor;// Creamos la DataStore con los valores por defecto.
dsValors = CREATE datastore
dsValors.DataObject = "ds_defvalues"


end event

event destructor;DESTROY dsValors

end event


release 7;
datawindow(units=0 timer_interval=0 color=1090385390 processing=1 HTMLDW=no print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no grid.lines=0 )
header(height=68 color="536870912" )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=68 color="536870912" )
table(column=(type=char(30) updatewhereclause=no name=nom dbname="nom" )
 column=(type=char(30) updatewhereclause=no name=nom_slave dbname="nom_slave" )
 column=(type=char(500) updatewhereclause=no name=valor dbname="valor" )
 column=(type=char(10) updatewhereclause=no name=tipo dbname="tipo" )
 column=(type=char(20) updatewhereclause=no name=compara dbname="compara" initial="=" )
 column=(type=char(50) updatewhereclause=no name=etiqueta dbname="etiqueta" )
 )
text(band=header alignment="2" text="Valor" border="6" color="33554432" x="462" y="8" height="52" width="937"  name=valor_t  font.face="MS Sans Serif" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="12632256" )
text(band=header alignment="2" text="Propietat" border="6" color="33554432" x="9" y="8" height="52" width="443"  name=nom_t  font.face="MS Sans Serif" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="12632256" )
column(band=detail id=1 alignment="0" tabsequence=10 border="0" color="33554432" x="9" y="4" height="60" width="443" format="[general]"  name=nom edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="MS Sans Serif" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=3 alignment="0" tabsequence=20 border="0" color="33554432" x="462" y="4" height="60" width="937" format="[general]"  name=valor edit.limit=0 edit.case=any edit.autoselect=yes  font.face="MS Sans Serif" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" )

forward
global type n_cst_dwobject_attr from nonvisualobject
end type
end forward

global type n_cst_dwobject_attr from nonvisualobject autoinstantiate
end type

type variables
Integer	ColumnID

String 	DWName
String 	DBName
String 	DataType

Boolean	esVisible
end variables

on n_cst_dwobject_attr.create
call super::create
TriggerEvent( this, "constructor" )
end on

on n_cst_dwobject_attr.destroy
TriggerEvent( this, "destructor" )
call super::destroy
end on


forward
global type uo_string from nonvisualobject
end type
end forward

global type uo_string from nonvisualobject autoinstantiate
end type

type variables
private CONSTANT string PRIVATEKEY = "1547895642821442"
end variables
forward prototypes
public function string gettoken (ref string as_source, string as_separator)
public function string replace (string as_source, string as_lookfor, string as_replacewith)
public function integer str2array (string as_origen, string as_separador, ref string as_lista[])
public function date of_date (string as_datetime)
public function time of_time (string as_datetime)
public function string getnextword (string strorg, long posicio, string separators)
public subroutine sortarray (ref string strarray[])
public function integer setkeyvalue (ref string source, string keyword, string keyvalue, string separator)
public function string getkeyvalue (string source, string keyword, string separator)
public function boolean of_codetext (boolean ab_code, ref string as_texto)
end prototypes

public function string gettoken (ref string as_source, string as_separator);Integer		li_p
String		ls_ret

li_p = PosA(as_source, as_separator)

if li_p = 0 then	
	ls_ret = as_source
	as_source = ""
else
	ls_ret = MidA(as_source, 1, li_p - 1)
	as_source = RightA(as_source, LenA(as_source) - ((li_p -1) + LenA(as_separator)))
end if

return ls_ret

end function

public function string replace (string as_source, string as_lookfor, string as_replacewith);// Sustituye todas las ocurrencias del string LookFor pel string ReplaceWidth
// sobre el string Source


Integer		li_Posicio = 1
Integer		li_LenLookFor

li_LenLookFor = LenA(as_LookFor)

li_Posicio = PosA(as_Source, as_LookFor, li_Posicio)

do while li_Posicio > 0
	as_Source = ReplaceA(as_Source, li_Posicio, li_LenLookFor, as_ReplaceWith)
	li_Posicio = PosA(as_Source, as_LookFor, li_Posicio + LenA(as_ReplaceWith))
loop

return as_Source

end function

public function integer str2array (string as_origen, string as_separador, ref string as_lista[]);// Ponemos todos los elementos del string Origen separados por el separador
// sobre la lista.
// Retorna el número de elementos.
Long     r

r = UpperBound(as_lista)
do while as_Origen <> ""
	r++
	as_lista[r] = GetToken(as_Origen, as_Separador)
loop

return UpperBound(as_lista)

end function

public function date of_date (string as_datetime);date		ld_rc = 1900-01-01
long		ll_count
string	ls_datetime[]


// Check arguments
if IsNull (as_datetime) then
	SetNull (ld_rc)
	return ld_rc
end if

// Validate datetime string ("1/1/95", "1/1/95 8:00", "1/1/95 8:00 PM")
ll_count = this.Str2array(as_datetime, " ", ls_datetime)
if ll_count <= 0 or ll_count > 3 then
	return ld_rc
end if

// Date string passed in
if ll_count = 1 then
	return Date (as_datetime)
end if

// Datetime string passed in
if ll_count = 2 or ll_count = 3 then
	return Date (ls_datetime[1])
end if

return ld_rc


end function

public function time of_time (string as_datetime);time	ltm_rc = 00:00:00.000000
long	ll_count
string	ls_datetime[]


if IsNull (as_datetime) then
	SetNull (ltm_rc)
	return ltm_rc
end if


ll_count = this.Str2array (as_datetime, " ", ls_datetime)
if ll_count <= 0 or ll_count > 3 then
	return ltm_rc
end if

if ll_count = 1 then
	return Time (as_datetime)
end if

if ll_count = 2 then
	return Time (ls_datetime[2])
end if

if ll_count = 3 then
	return Time (ls_datetime[2]+' '+ls_datetime[3])
end if

return ltm_rc
end function

public function string getnextword (string strorg, long posicio, string separators);// Retorna la siguiente parte teniendo en cuenta los separadores definidos.
Integer		PosicioFinal, tmpPos
Integer		r, Total

if Posicio = LenA(strOrg) then return ""

PosicioFinal = LenA(strOrg)
Total = LenA(Separators)
for r=1 to Total
	tmpPos = PosA(strOrg, MidA(Separators, r, 1), Posicio)
	if tmpPos = 0 then CONTINUE
	if PosicioFinal > tmpPos then PosicioFinal = tmpPos

next

return Trim(MidA(strOrg, Posicio, PosicioFinal - Posicio + 1))

end function

public subroutine sortarray (ref string strarray[]);// Ordena el array por orden alfabético
Integer			Total, r, i
String				tmpStr


Total = UpperBound(strArray)
for r=1 to Total
	for i=r to Total
		if strArray[r] > strArray[i] then
			tmpStr = strArray[r]
			strArray[r] = strArray[i]
			strArray[i] = tmpStr
		end if
	next
next

end subroutine

public function integer setkeyvalue (ref string source, string keyword, string keyvalue, string separator);// Suponiendo que el origen sea un string separado por SEPARATOR's, busca una entrada del tipos KEYWORD= y ahí pone el valor
// que recibe KEYVALUE.
Integer		Found = -1
Integer		KeyW, Sep, Equal
String			strTemp

// Comprovamo los parámetros
if isNull(Source) or isNull(KeyWord) or isNull(KeyValue) or isNull(Separator) then
	Integer		nullInt
	setNull(nullInt)
	return nullInt
end if

do
	KeyW = PosA(Lower(Source), Lower(KeyWord), KeyW + 1)
	if KeyW > 0 then
		strTemp = LeftTrim(RightA(Source, LenA(Source) - (KeyW + LenA(KeyWord) - 1)))
		if LeftA(strTemp, 1) = "=" then
			// Lo hemos encontrado
			Equal = PosA(Source, "=", KeyW + 1)
			Sep = PosA(Source, Separator, Equal + 1)
			if Sep > 0 then
				Source = LeftA(Source, Equal) + KeyValue + Separator + RightA(Source, LenA(source) - Sep)
			else
				Source = LeftA(Source, Equal) + KeyValue
			end if
			Found = 1
		end if
	end if
loop while KeyW > 0

return Found

end function

public function string getkeyvalue (string source, string keyword, string separator);// Retorna el valor del KeyWord dentro del SOURCE que está separado por SEPARATOR's
Boolean		Fin = FALSE
Long			KeyW, Sep, Equal
String			KeyValue

// Validamos los parámetros
if isNull(Source) or isNull(KeyWord) or isNull(Separator) then
	string		nullStr
	setNull(nullStr)
	return nullStr
end if

KeyValue = ""

do while not Fin
	KeyW = PosA(lower(Source), lower(KeyWord))
	if KeyW > 0 then
		Source = LeftTrim(RightA(Source, LenA(Source) - (KeyW + LenA(KeyWord) - 1)))
		if LeftA(Source, 1) = "=" then
			// Lo hemos encontrado
			Sep = PosA(Source, Separator, 2)
			if Sep > 0 then
				KeyValue = MidA(Source, 2, Sep - 2)
			else
				KeyValue = MidA(Source, 2)
			end if
			KeyValue = Trim(KeyValue)
			Fin = TRUE
		end if
	else
		Fin  = TRUE
	end if
loop

return KeyValue

end function

public function boolean of_codetext (boolean ab_code, ref string as_texto);//////////////////////////////////////////////////////////////////////////////
//
// Objeto: w_leeini
//
// Función: of_codetext
//
// Argumentos: boolean ab_code	
//		string as_texto	
//
// Retorno: string
//
// Descripción:
//
//////////////////////////////////////////////////////////////////////////////
//
// Historial de revisiones      Autor: 
//
// Fecha               Versión  Autor
// 09/05/2008          1.0               Versión inicial
//
//////////////////////////////////////////////////////////////////////////////
integer			li_largo, i, li_valor, li_key
string				ls_caracter, ls_code, ls_newtext, ls_key

li_largo = lenA(as_texto)

//cambiamos unos caracteres por otros. Nos aseguramos de que tengan siempre 3 cifras (ascii < 255)

IF ab_code = TRUE THEN
	FOR i = 1 TO li_largo
		ls_caracter = mid(as_texto, i, 1)
		li_key = mod(i, integer(mid(Fill(PRIVATEKEY, 100), i, 1)))
		li_valor = (Asc(ls_caracter) + 100  + li_key  ) * 2
		ls_newtext += string(li_valor)
	NEXT
ELSE
	FOR i = 1 TO li_largo/3
		ls_caracter = mid(as_texto, ((i -1) *3) +1, 3)
		li_key = mod(i, integer(mid(Fill(PRIVATEKEY, 100), i, 1)))
		li_valor = integer(ls_caracter)/2 - 100 - li_key
		ls_newtext += String(Char(li_valor))
	NEXT
END IF

as_texto = ls_newtext

RETURN TRUE
end function

on uo_string.create
call super::create
TriggerEvent( this, "constructor" )
end on

on uo_string.destroy
TriggerEvent( this, "destructor" )
call super::destroy
end on


forward
global type u_cst_base from userobject
end type
end forward

global type u_cst_base from userobject
integer width = 1504
integer height = 1016
boolean border = true
long backcolor = 79741120
long tabtextcolor = 33554432
long picturemaskcolor = 536870912
event resize pbm_size
event type string uecreateservice ( string serviceobjectname )
event getfocus pbm_setfocus
event uegetparametros ( )
event uepreconstructor ( )
event uepostconstructor ( )
event ueinitresize ( )
event ueinitdisparadores ( )
event ueopen ( )
end type
global u_cst_base u_cst_base

type variables
// Servidores para los objetos no visuales.
//s n_cst_winsrv_resize		srvResize


// Objeto Padre donde se inserta el objeto
Protected	window						iw_WParent
end variables

forward prototypes
public subroutine activesrvresize (boolean pactive)
public function integer of_setwindow (window aw_window)
end prototypes

event resize;

end event

event uecreateservice;// Devolvemos el nombre del objeto propuesto para seleccionar el estándar
return ServiceObjectName

end event

event type long getfocus();// Buscamos el elemento con el TABORDER mas pequeño y le damos el focus
Integer					r
DragObject				objControl, actControl
/*n_cst_winsrv_base		lnv_WinSrv_Base

lnv_WinSrv_Base = Create n_cst_winsrv_base

for r=1 to UpperBound(this.control)
	if lnv_WinSrv_Base.of_TypeOf(This.Control[r]) = lnv_WinSrv_Base.DRAGOBJECT Then
		if r=1 then
			objControl = this.control[r]
			CONTINUE
		end if
		
		actControl = this.control[r]
		if actControl.TabOrder < objControl.TabOrder then objControl = this.Control[r]
	end if
next

if isValid(objControl) then objControl.SetFocus()

destroy lnv_WinSrv_Base
*/
Return 0
end event

event uegetparametros();// Evento donde cargaremos los objetos que recibamos como parametro

end event

event uepreconstructor();// Es el primer evento que se ejecuta
end event

event uepostconstructor();// Este evento se ejecutara el modo POST después de ejecutar el constructor
end event

event ueinitresize();// Evento donde inicializaremos el resize
This.ActiveSrvResize(True)


end event

event ueInitDisparadores;// Evento donde inicializaremos los disparadores asociados al objeto
end event

event ueopen();integer 			i, Total
Pointer			Point

Point = SetPointer(HourGlass!)

// Evento que utilizaremos para recoger los parametros de la Ventana
This.Event ueGetParametros()

// Lanzamos dos enventos antes de hacer el Open y despues de hacer el Open
This.Event uePreConstructor()
This.Event Post uePostConstructor()

// Evento donde activaremos el servicio de Resize y registraremos 
// los objetos del Resize
This.Event ueInitResize()

// Evento desde donde cargaremos los disparadores de la ventana
This.Event ueInitDisparadores()

Total = UpperBound(Control[])
For i = 1 To Total
	Control[i].Event Dynamic ueOpen()
Next

SetPointer(Point)
end event

public subroutine activesrvresize (boolean pactive);// Activem el servei de Resize pel UserObject.


end subroutine

public function integer of_setwindow (window aw_window);iw_WParent = aw_Window

Return 1
end function

event destructor;// Destruimos todos los servicios que se hubieran creado.
ActiveSrvResize(FALSE)

end event

on u_cst_base.create
end on

on u_cst_base.destroy
end on

event rbuttondown;If isValid(iw_WParent) Then
	iw_WParent.Event rButtonDown(flags, xpos, ypos)
End If
end event


global type str_querymode from structure
	string		str_dataobject
	string		str_addwhere
	integer		str_seleccion
	boolean		str_nuevo
	long		str_id
end type


forward
global type n_cst_datetime from nonvisualobject
end type
end forward

global type n_cst_datetime from nonvisualobject autoinstantiate
end type

type variables
Protected:
// To support other languages, this array could be changed
// in the constructor event.
String 	is_month[12] = { &
	"Enero", "Febrero", "Marzo", "Abril", &
	 "Mayo",  "Junio", "Julio", "Agosto",  "Septiembre", &
	"Octubre",  "Noviembre", "Diciembre" }
	

// Default number of days in each month.  
// Leap years are handled in each function.
Integer	ii_DaysInMonth[12] = {31,28,31,30,31,30,31,31,30,31,30,31}

end variables

forward prototypes
public function date of_gregorian (long al_julian)
public function long of_days (long al_seconds)
public function long of_hours (long al_seconds)
public function long of_yearsafter (date ad_start, date ad_end)
public function long of_millisecsafter (time atm_start, time atm_end)
public function integer of_wait (datetime adtm_target)
public function integer of_wait (unsignedlong al_seconds)
public function boolean of_isvalid (datetime adtm_source)
public function date of_firstdayofmonth (date ad_source)
public function boolean of_isleapyear (date ad_source)
public function boolean of_isweekday (date ad_source)
public function boolean of_isweekend (date ad_source)
public function datetime of_relativedatetime (datetime adtm_start, long al_offset)
public function long of_secondsafter (datetime adtm_start, datetime adtm_end)
public function long of_monthsafter (date ad_start, date ad_end)
public function string of_monthname (integer ai_monthnumber)
public function string of_monthname (date ad_source)
public function boolean of_isvalid (time atm_source)
public function boolean of_isvalid (date ad_source)
public function date of_relativemonth (date ad_source, long al_month)
public function date of_relativeyear (date ad_source, long al_years)
public function long of_weeksafter (date ad_start, date ad_end)
public function long of_juliandaynumber (date ad_source)
public function long of_julian (date ad_source)
public function long of_weeknumber (date ad_source)
public function date of_lastdayofmonth (date ad_source)
public function integer of_dayofweek (date ad_source)
public function string of_validarhora (string as_hora)
public function long of_time2seconds (string as_hora)
end prototypes

public function date of_gregorian (long al_julian);//////////////////////////////////////////////////////////////////////////////
//
//	Function:  		of_Gregorian
//
//	Access:  		public
//
//	Arguments:
//	al_julian 		Julian date
//
//	Returns:  		date
//						Converted from julian.
//						If al_julian is NULL, function returns NULL.
//
//	Description:	Converts a julian date to gregorian date.
//						Note: Julian zero day is Jan. 1, year 0000.
//
//////////////////////////////////////////////////////////////////////////////
//
//	Revision History
//
//	Version
//	5.0   Initial version
//
//////////////////////////////////////////////////////////////////////////////
//
//	Copyright © 1996-1997 Sybase, Inc. and its subsidiaries.  All rights reserved.
//	Any distribution of the PowerBuilder Foundation Classes (PFC)
//	source code by other than Sybase, Inc. and its subsidiaries is prohibited.
//
//////////////////////////////////////////////////////////////////////////////

//Check parameters
If IsNull(al_julian) Then
	date ldt_null
	SetNull(ldt_null)
	Return ldt_null
End If

long ll_numqc
long ll_numq
long ll_numc
long ll_cent = 36524
long ll_quad = 1461
int li_year, li_month, li_day
int li_DaysInMonth[12] = {31,28,31,30,31,30,31,31,30,31,30,31}

ll_numqc = al_julian / 146097 // 4 centuries
li_year = int(ll_Numqc) * 400
al_julian -= (146097 * ll_numqc)

ll_numc = 0
If al_julian > (ll_cent + 1) Then
	al_julian -= (ll_cent + 1)
	li_year += 100
	ll_numc = al_julian / ll_cent
	li_year += int(ll_numc) * 100
	al_julian -= ll_numc * ll_cent
	ll_numc ++
End If

If (ll_numc > 0) and (al_julian > (ll_quad - 1)) Then
	al_julian -= (ll_quad - 1)
	li_year += 4
End If

ll_numq = al_julian / ll_quad
li_year += int(ll_numq) * 4
al_julian -= ll_numq* ll_quad

If (of_IsLeapYear(Date(li_year, 1, 1))) Then
	If al_julian >= 366 Then
		al_julian -=366
		li_year ++
	elseif (al_julian = 59) Then
		li_month = 2
		li_day = 29
		Return Date(li_year,li_month,li_day)
	elseif (al_julian > 59) Then
		al_julian --
	end if
end if

Do While al_julian >= 365
	al_julian -=365
	li_year ++
loop

li_month = 0

Do While (li_DaysinMonth[li_month+1] <= al_julian)
	al_julian -= li_DaysinMonth[li_month+1]
	li_month++
Loop

li_month ++
li_day = al_julian + 1

Return Date(li_year,li_month,li_day)

end function

public function long of_days (long al_seconds);//////////////////////////////////////////////////////////////////////////////
//
//	Function:  		of_Days
//
//	Access:  		public
//
//	Arguments:
//	al_seconds 		Number of seconds to convert to days.
//
//	Returns:  		long 
//						Number of whole days.
//						If any argument's value is NULL, function returns NULL.
//						If any argument's value is Invalid, function returns -1.
//
//	Description:  	Given the number of seconds, function will return the equivalient
//       			number of whole days
//
//////////////////////////////////////////////////////////////////////////////
//
//	Revision History
//
//	Version
//	5.0   Initial version
//
//////////////////////////////////////////////////////////////////////////////
//
//	Copyright © 1996-1997 Sybase, Inc. and its subsidiaries.  All rights reserved.
//	Any distribution of the PowerBuilder Foundation Classes (PFC)
//	source code by other than Sybase, Inc. and its subsidiaries is prohibited.
//
//////////////////////////////////////////////////////////////////////////////

long ll_result

//Check parameters
If IsNull(al_seconds) Then
	long ll_null
	SetNull(ll_null)
	Return ll_null
End If

If al_seconds < 0 Then
	Return -1
End If

//converts to hours and divide by 24
ll_result = (al_seconds / 3600) / 24

Return ll_result
end function

public function long of_hours (long al_seconds);//////////////////////////////////////////////////////////////////////////////
//
//	Function: 		of_Hours
//
//	Access:  		public
//
//	Arguments:
//	al_seconds		Number of seconds to be converted.
//
//	Returns:  		long
//						Number of whole hours eqivalent to the seconds passed.
//						If any argument's value is NULL, function returns NULL.
//						If any argument's value is Invalid, function returns -1.
//
//	Description:	Given a number of seconds, will return the equivalent
//						number of whole hours.
//
//////////////////////////////////////////////////////////////////////////////
//
//	Revision History
//
//	Version
//	5.0   Initial version
//
//////////////////////////////////////////////////////////////////////////////
//
//	Copyright © 1996-1997 Sybase, Inc. and its subsidiaries.  All rights reserved.
//	Any distribution of the PowerBuilder Foundation Classes (PFC)
//	source code by other than Sybase, Inc. and its subsidiaries is prohibited.
//
//////////////////////////////////////////////////////////////////////////////

long ll_result

//Check parameters
If IsNull(al_seconds) Then
	long ll_null
	SetNull(ll_null)
	Return ll_null
End If

If al_seconds < 0 Then
	Return -1
End If

//converts to hours (divide by 3600)
ll_result = al_seconds / 3600

Return ll_result
end function

public function long of_yearsafter (date ad_start, date ad_end);//////////////////////////////////////////////////////////////////////////////
//
//	Function:  		of_YearsAfter
//
//	Access:  		public
//
//	Arguments:
//	ad_start			Starting date.
//	ad_end			Ending date.
//
//	Returns:  		Long

//						Number of years difference.
//						If any argument's value is NULL, function returns NULL.
//						If any argument's value is Invalid, function returns NULL.
//
//	Description:	Given two dates will determine the number of whole 
//						years between the two dates.
//
//////////////////////////////////////////////////////////////////////////////
//
//	Revision History
//
//	Version
//	5.0   Initial version
//
//////////////////////////////////////////////////////////////////////////////
//
//	Copyright © 1996-1997 Sybase, Inc. and its subsidiaries.  All rights reserved.
//	Any distribution of the PowerBuilder Foundation Classes (PFC)
//	source code by other than Sybase, Inc. and its subsidiaries is prohibited.
//
//////////////////////////////////////////////////////////////////////////////

date ld_temp
int li_year, li_mult
double adb_start, adb_end

//Check paramemters
If IsNull(ad_start) or IsNull(ad_end) or &
	Not of_IsValid(ad_start) or Not of_IsValid(ad_end) Then
	long ll_null
	SetNull (ll_null)
	Return ll_null
End If

If ad_start > ad_end Then
	ld_temp = ad_start
	ad_start = ad_end
	ad_end = ld_temp
	li_mult = -1
else
	li_mult = 1
End If

li_year = year(ad_end) - year(ad_start)

adb_start = month(ad_start)
adb_start = adb_start + day(ad_start) / 100

adb_end = month(ad_end)
adb_end = adb_end + day(ad_end) / 100

If adb_start > adb_end Then
	li_year --
End If

Return li_year * li_mult

end function

public function long of_millisecsafter (time atm_start, time atm_end);//////////////////////////////////////////////////////////////////////////////
//
//	Function:  		of_MillisecsAfter
//
//	Access: 			public
//
//	Arguments:
//	atm_start 		The first time.
//	atm_end   		The second time.
//
//	Returns:  		long
//						The number of milliseconds between the two times.
//						If any argument's value is NULL, function returns NULL.
//
//	Description:  	Given two times will return the number of milliseconds
//						between the two. If the second time is less than the
//						first, the result will be negative.
//
//////////////////////////////////////////////////////////////////////////////
//
//	Revision History
//
//	Version
//	5.0   Initial version
//
//////////////////////////////////////////////////////////////////////////////
//
//	Copyright © 1996-1997 Sybase, Inc. and its subsidiaries.  All rights reserved.
//	Any distribution of the PowerBuilder Foundation Classes (PFC)
//	source code by other than Sybase, Inc. and its subsidiaries is prohibited.
//
//////////////////////////////////////////////////////////////////////////////

Long ll_start, ll_end
Long ll_temp

//Check parameters
If IsNull(atm_start) or IsNull(atm_end) Then
	long ll_null
	SetNull(ll_null)
	Return ll_null
End If

ll_start = Long (String (atm_start,"fff"))
ll_temp = Second(atm_start) * 1000
ll_start = ll_start + ll_temp
ll_temp = Minute(atm_start) * 60000
ll_start = ll_start + ll_temp
ll_temp = hour(atm_start) *  3600000
ll_start = ll_start + ll_temp

ll_end = Long (String (atm_end,"fff"))
ll_temp = Second(atm_end) * 1000
ll_end = ll_end + ll_temp
ll_temp = minute(atm_end) * 60000
ll_end = ll_end + ll_temp
ll_temp = hour(atm_end) * 3600000
ll_end = ll_end + ll_temp

return ll_end - ll_start
end function

public function integer of_wait (datetime adtm_target);//////////////////////////////////////////////////////////////////////////////
//
//	Function:  		of_Wait
//
//	Access:  		public
//
//	Arguments:
//	adtm_Target 	Target DateTime.
//
//	Returns:  		integer
//						1 if function waited the expected time.
//						If any argument's value is NULL, function returns NULL.
//						If any argument's value is Invalid, function returns -1.
//
//	Description:  	Given a datetime, will wait until datetime is reached.
//
//////////////////////////////////////////////////////////////////////////////
//
//	Revision History
//
//	Version
//	5.0   Initial version
//
//////////////////////////////////////////////////////////////////////////////
//
//	Copyright © 1996-1997 Sybase, Inc. and its subsidiaries.  All rights reserved.
//	Any distribution of the PowerBuilder Foundation Classes (PFC)
//	source code by other than Sybase, Inc. and its subsidiaries is prohibited.
//
//////////////////////////////////////////////////////////////////////////////

date 	ldt_value

//Check parameters
If IsNull(adtm_Target) Then
	long ll_null
	SetNull(ll_null)
	Return ll_null
End If

//There is only need to test the Date portion of the DateTime.
ldt_value = Date(adtm_Target)

//Check for invalid date
If Not of_IsValid(ldt_value) Then
	Return -1
End If

//Wait until Target datetime
DO UNTIL DateTime(Today(),Now()) >= adtm_Target
	Yield() //Yields control to other graphic objects, including objects that are not PB.
LOOP

Return 1

end function

public function integer of_wait (unsignedlong al_seconds);//////////////////////////////////////////////////////////////////////////////
//
//	Function:  		of_Wait
//
//	Access:  		public
//
//	Arguments:
//	al_seconds 		Wait this many Seconds.
//
//	Returns:  		integer
//						1 if function waited the expected time.
//						If any argument's value is NULL, function returns NULL.
//						If any argument's value is Invalid, function returns -1.
//
//	Description:  	Given a datetime, will wait until datetime is reached.
//
//////////////////////////////////////////////////////////////////////////////
//
//	Revision History
//
//	Version
//	5.0   Initial version
//
//////////////////////////////////////////////////////////////////////////////
//
//	Copyright © 1996-1997 Sybase, Inc. and its subsidiaries.  All rights reserved.
//	Any distribution of the PowerBuilder Foundation Classes (PFC)
//	source code by other than Sybase, Inc. and its subsidiaries is prohibited.
//
//////////////////////////////////////////////////////////////////////////////

datetime ldtm_target
integer	li_ret

//Check parameters
If IsNull(al_seconds) Then
	Return al_seconds
End If

//Check invalid parameters
If al_seconds <= 0 Then
	Return -1
End If

//Get the Target DateTime
ldtm_target = of_RelativeDatetime(DateTime(Today(),Now()), al_seconds)

//Perform the actual wait.
li_ret = of_Wait(ldtm_target)

Return li_ret

end function

public function boolean of_isvalid (datetime adtm_source);//////////////////////////////////////////////////////////////////////////////
//
//	Function:  		of_IsValid
//
//	Access:  		public
//
//	Arguments:
//	adtm_source		DateTime to test.
//
//	Returns:  		boolean
//						True if argument is a valid datetime.
//						If any argument's value is NULL, function returns False.
//						If any argument's value is Invalid, function returns False.
//
//	Description:  	Given a datetime, will determine if the Datetime is valid.
//
//////////////////////////////////////////////////////////////////////////////
//
//	Revision History
//
//	Version
//	5.0   Initial version
//
//////////////////////////////////////////////////////////////////////////////
//
//	Copyright © 1996-1997 Sybase, Inc. and its subsidiaries.  All rights reserved.
//	Any distribution of the PowerBuilder Foundation Classes (PFC)
//	source code by other than Sybase, Inc. and its subsidiaries is prohibited.
//
//////////////////////////////////////////////////////////////////////////////

date 	ldt_value

//Check parameters
If IsNull(adtm_source) Then
	Return False
End If

//There is only need to test the Date portion of the DateTime.
//Can't tell if time is invalid because 12am is 00:00:00:000000
ldt_value = Date(adtm_source)

//Check for invalid date
If Not of_IsValid(ldt_value) Then
	Return False
End If

Return True

end function

public function date of_firstdayofmonth (date ad_source);//////////////////////////////////////////////////////////////////////////////
//
//	Function:  		of_FirstDayOfMonth
//
//	Access:  		public
//
//	Arguments:
//	date	ad_source		Date to test.
//
//	Returns:  		date
//						The first date of the month passed.
//						If any argument's value is NULL, function returns NULL.
//						If any argument's value is Invalid, function 
//						returns 1900-01-01.
//
//	Description:  	Given a date, will determine the first day of the month.
//
//////////////////////////////////////////////////////////////////////////////
//
//	Revision History
//
//	Version
//	5.0   Initial version
//
//////////////////////////////////////////////////////////////////////////////
//
//	Copyright © 1996-1997 Sybase, Inc. and its subsidiaries.  All rights reserved.
//	Any distribution of the PowerBuilder Foundation Classes (PFC)
//	source code by other than Sybase, Inc. and its subsidiaries is prohibited.
//
//////////////////////////////////////////////////////////////////////////////

//Check parameters
If IsNull(ad_source) Then
	date ldt_null
	SetNull(ldt_null)
	Return ldt_null
End If

//Check for invalid date
If Not of_IsValid(ad_source) Then
	Return ad_source
End If

// Date (Year, Month, Day)
Return Date (Year(ad_source), Month(ad_source), 1)

end function

public function boolean of_isleapyear (date ad_source);//////////////////////////////////////////////////////////////////////////////
//
//	Function:  		of_IsLeapYear
//
//	Access:  		public
//
//	Arguments:
//	ad_source		Date which contains the year to be tested.
//
//	Returns:  		boolean
//						TRUE if year is a leap year.
//						FALSE if year is not a leap year.
//						If any argument's value is NULL, function returns NULL.
//						If any argument's value is Invalid, function returns NULL.
//
//	Description:  	Based on the year in the passed date, determine if it is a 
//						leap year.
//
//////////////////////////////////////////////////////////////////////////////
//
//	Revision History
//
//	Version
//	5.0   Initial version
//
//////////////////////////////////////////////////////////////////////////////
//
//	Copyright © 1996-1997 Sybase, Inc. and its subsidiaries.  All rights reserved.
//	Any distribution of the PowerBuilder Foundation Classes (PFC)
//	source code by other than Sybase, Inc. and its subsidiaries is prohibited.
//
//////////////////////////////////////////////////////////////////////////////

int li_year
boolean lb_null
SetNull(lb_null)

//Check parameters
If IsNUll(ad_source) Then
	Return lb_null
End If

//Check for invalid date
If Not of_IsValid(ad_source) Then
	Return lb_null
End If

//Get the year using the string function instead of Year()
li_year = integer(string(ad_source,'yyyy'))

If ( (Mod(li_year,4) = 0 And Mod(li_year,100) <> 0) Or (Mod(li_year,400) = 0) ) Then
	Return True
End If

Return False


end function

public function boolean of_isweekday (date ad_source);//////////////////////////////////////////////////////////////////////////////
//
//	Function:  		of_IsWeekday
//
//	Access:  		public
//
//	Arguments:
//	ad_source		Date to test.
//
//	Returns:			boolean
//						True if the date is a weekday.
//						False if the date is not a weekday.
//						If any argument's value is NULL, function returns NULL.
//						If any argument's value is Invalid, function returns NULL.
//
//	Description:  Given a date, will determine if the date is a weekday.
//
//////////////////////////////////////////////////////////////////////////////
//
//	Revision History
//
//	Version
//	5.0   Initial version
//
//////////////////////////////////////////////////////////////////////////////
//
//	Copyright © 1996-1997 Sybase, Inc. and its subsidiaries.  All rights reserved.
//	Any distribution of the PowerBuilder Foundation Classes (PFC)
//	source code by other than Sybase, Inc. and its subsidiaries is prohibited.
//
//////////////////////////////////////////////////////////////////////////////

//Check parameters
If IsNull(ad_source) or Not of_IsValid(ad_source) Then
	boolean lb_null
	SetNull(lb_null)
	Return lb_null
End If

If (DayNumber(ad_source) > 1) and (DayNumber(ad_source) < 7) Then
	Return True
End If

Return False

end function

public function boolean of_isweekend (date ad_source);//////////////////////////////////////////////////////////////////////////////
//
//	Function:  		of_IsWeekend
//
//	Access:  		public
//
//	Arguments:
//	ad_source		Date to test.
//
//	Returns:  		boolean
//						True if the date is a weekend.
//						If any argument's value is NULL, function returns NULL.
//						If any argument's value is Invalid, function returns NULL.
//
//	Description:  	Given a date, will determine if the date is a weekend.
//
//////////////////////////////////////////////////////////////////////////////
//
//	Revision History
//
//	Version
//	5.0   Initial version
//
//////////////////////////////////////////////////////////////////////////////
//
//	Copyright © 1996-1997 Sybase, Inc. and its subsidiaries.  All rights reserved.
//	Any distribution of the PowerBuilder Foundation Classes (PFC)
//	source code by other than Sybase, Inc. and its subsidiaries is prohibited.
//
//////////////////////////////////////////////////////////////////////////////

//Check parameters
If IsNull(ad_source) or Not of_IsValid(ad_source) Then
	boolean lb_null
	SetNull(lb_null)
	Return lb_null
End If

Return Not of_IsWeekday(ad_source)
end function

public function datetime of_relativedatetime (datetime adtm_start, long al_offset);//////////////////////////////////////////////////////////////////////////////
//
//	Function:  		of_RelativeDatetime
//
//	Access:  		public
//
//	Arguments:
//	adtm_start 		Starting datetime point of calculation.
//	al_offset     	Number of seconds before/after datetime to be returned.
//
//	Returns:		 	Datetime
//						Relative datetime.
//						If any argument's value is NULL, function returns NULL.
//						If any argument's value is Invalid, function returns 1900-01-01.
//
//	Description:  	Given a datetime, find the relative datetime +/- n seconds
//
//////////////////////////////////////////////////////////////////////////////
//
//	Revision History
//
//	Version
//	5.0   Initial version
//	5.0.03	Fix to return time as 00:00:00:000000 on invalid date check
//
//////////////////////////////////////////////////////////////////////////////
//
//	Copyright © 1996-1997 Sybase, Inc. and its subsidiaries.  All rights reserved.
//	Any distribution of the PowerBuilder Foundation Classes (PFC)
//	source code by other than Sybase, Inc. and its subsidiaries is prohibited.
//
//////////////////////////////////////////////////////////////////////////////

datetime ldt_null
date ld_sdate
time lt_stime
long ll_date_adjust
long ll_time_adjust, ll_time_test

//Check parameters
If IsNull(adtm_start) or IsNull(al_offset) Then
	SetNull(ldt_null)
	Return ldt_null
End If

//Check for invalid date
If Not of_IsValid(adtm_start) Then
	Return ldt_null
End If

//Initialize date and time portion
ld_sdate = date(adtm_start)
lt_stime = time(adtm_start)

//Find out how many days are contained
//Note: 86400 is # of seconds in a day
ll_date_adjust = al_offset /  86400
ll_time_adjust = mod(al_offset, 86400)

//Adjust date portion
ld_sdate = RelativeDate(ld_sdate, ll_date_adjust)

//Adjust time portion
//	Allow for time adjustments periods crossing over days
//	Check for time rolling forwards a day
If ll_time_adjust > 0 then
	ll_time_test = SecondsAfter(lt_stime,time('23:59:59'))
	If ll_time_test < ll_time_adjust Then
		ld_sdate = RelativeDate(ld_sdate,1)
		ll_time_adjust = ll_time_adjust - ll_time_test -1
		lt_stime = time('00:00:00')
	End If
	lt_stime = RelativeTime(lt_stime, ll_time_adjust)
//Check for time rolling backwards a day
ElseIf  ll_time_adjust < 0 then
	ll_time_test = SecondsAfter(lt_stime,time('00:00:00'))
	If   ll_time_test > ll_time_adjust Then
		ld_sdate = RelativeDate(ld_sdate,-1)
		ll_time_adjust = ll_time_adjust - ll_time_test +1
		lt_stime = time('23:59:59')
	End If
	lt_stime = RelativeTime(lt_stime, ll_time_adjust)
End If

return(datetime(ld_sdate,lt_stime))
end function

public function long of_secondsafter (datetime adtm_start, datetime adtm_end);//////////////////////////////////////////////////////////////////////////////
//
//	Function:  		of_SecondsAfter
//
//	Access:  		public
//
//	Arguments:
//	adtm_start 		Beginning time.
//	adtm_end   		Ending time.
//
//	Returns:  		long
//						Number of whole seconds between two date times.
//						If any argument's value is NULL, function returns NULL.
//						If any argument's value is Invalid, function returns NULL.
//
//	Description:  	Given two datetimes, return the number of seconds between 
//						the two.
//
//////////////////////////////////////////////////////////////////////////////
//
//	Revision History
//
//	Version
//	5.0   Initial version
//
//////////////////////////////////////////////////////////////////////////////
//
//	Copyright © 1996-1997 Sybase, Inc. and its subsidiaries.  All rights reserved.
//	Any distribution of the PowerBuilder Foundation Classes (PFC)
//	source code by other than Sybase, Inc. and its subsidiaries is prohibited.
//
//////////////////////////////////////////////////////////////////////////////

long ll_total_seconds, ll_day_adjust
date ld_sdate, ld_edate
time lt_stime, lt_etime

//Check parameters
If IsNull(adtm_start) or IsNull(adtm_end) or &
	Not of_IsValid(adtm_start) or Not of_IsValid(adtm_end) Then
	long ll_null
	SetNull(ll_null)
	Return ll_null
End If

ld_sdate = date(adtm_start)
ld_edate = date(adtm_end)

lt_stime = time(adtm_start)
lt_etime = time(adtm_end)

//Note: 86400 is number of seconds in a day.
If ld_sdate = ld_edate then 
	ll_total_seconds = secondsafter(	lt_stime,lt_etime)
Elseif ld_sdate < ld_edate Then
	ll_total_seconds = SecondsAfter(lt_stime,Time('23:59:59'))
	ll_day_adjust = DaysAfter(ld_sdate,ld_edate) -1
	If ll_day_adjust > 0 Then ll_total_seconds = ll_total_seconds + 86400 * ll_day_adjust
	ll_total_seconds = ll_total_seconds + SecondsAfter(Time('00:00:00'),lt_etime) +1
Else //end date < start date
	ll_total_seconds = SecondsAfter(lt_stime,Time('00:00:00'))
	ll_day_adjust = DaysAfter(ld_sdate,ld_edate) +1
	If ll_day_adjust < 0 Then ll_total_seconds = ll_total_seconds + 86400 * ll_day_adjust
	ll_total_seconds = ll_total_seconds + SecondsAfter(Time('23:59:59'),lt_etime) -1
end If

return ll_total_seconds

end function

public function long of_monthsafter (date ad_start, date ad_end);//////////////////////////////////////////////////////////////////////////////
//
//	Function:  		of_MonthsAfter
//
//	Access:  		public
//
//	Arguments:
//	ad_start			Starting date.
//	ad_end			Ending date.
//
//	Returns:  		Long
//						Number of whole months between the two dates.
//						If the end date is prior the start date, function returns
//						a negative number of months.
//						If any argument's value is NULL, function returns NULL.
//						If any argument's value is Invalid, function returns NULL.
//
//	Description:	Given two dates, returns the number of whole months 
// 					between the two.
//
//////////////////////////////////////////////////////////////////////////////
//
//	Revision History
//
//	Version
//	5.0   Initial version
//
//////////////////////////////////////////////////////////////////////////////
//
//	Copyright © 1996-1997 Sybase, Inc. and its subsidiaries.  All rights reserved.
//	Any distribution of the PowerBuilder Foundation Classes (PFC)
//	source code by other than Sybase, Inc. and its subsidiaries is prohibited.
//
//////////////////////////////////////////////////////////////////////////////

date 		ld_temp
integer 	li_month
integer	li_mult

//Check parameters
If IsNull(ad_start) or IsNull(ad_end) or &
	Not of_IsValid(ad_start) or Not of_IsValid(ad_end) Then
	long ll_null
	SetNull(ll_null)
	Return ll_null
End If

If ad_start > ad_end Then
	ld_temp = ad_start
	ad_start = ad_end
	ad_end = ld_temp
	li_mult = -1
else
	li_mult = 1
End If

li_month = (year(ad_end) - year(ad_start) ) * 12
li_month = li_month + month(ad_end) - month(ad_start)

If day(ad_start) > day(ad_end) Then 
	li_month --
End If

Return li_month * li_mult
end function

public function string of_monthname (integer ai_monthnumber);//////////////////////////////////////////////////////////////////////////////
//
//	Function:  		of_MonthName
//
//	Access:  		public
//
//	Arguments:
//	ai_monthnumber		Based on the the passed month number, determines the Month name.
//
//	Returns:  		string
//		the month.
//
//	Description:  	
//		Based on the the passed date, determines the Month name.
//
//////////////////////////////////////////////////////////////////////////////
//
//	Revision History
//
//	Version
//	6.0   Initial version
//
//////////////////////////////////////////////////////////////////////////////
//
//	Copyright © 1996-1997 Sybase, Inc. and its subsidiaries.  All rights reserved.
//	Any distribution of the PowerBuilder Foundation Classes (PFC)
//	source code by other than Sybase, Inc. and its subsidiaries is prohibited.
//
//////////////////////////////////////////////////////////////////////////////


//Check parameters
If IsNull(ai_monthnumber) or ai_monthnumber<0 or ai_monthnumber>12 Then
	Return '!'
End If

return is_month[ai_monthnumber]

end function

public function string of_monthname (date ad_source);//////////////////////////////////////////////////////////////////////////////
//
//	Function:  		of_MonthName
//
//	Access:  		public
//
//	Arguments:
//	ad_source		Date for which the Month name is desired
//
//	Returns:  		string
// 	The month.
//
//	Description:  	
//		Based on the the passed date, determines the Month name.
//
//////////////////////////////////////////////////////////////////////////////
//
//	Revision History
//
//	Version
//	6.0   Initial version
//
//////////////////////////////////////////////////////////////////////////////
//
//	Copyright © 1996-1997 Sybase, Inc. and its subsidiaries.  All rights reserved.
//	Any distribution of the PowerBuilder Foundation Classes (PFC)
//	source code by other than Sybase, Inc. and its subsidiaries is prohibited.
//
//////////////////////////////////////////////////////////////////////////////

//Check parameters
If IsNull(ad_source) Then
	Return '!'
End If

//Check for invalid date
If Not of_IsValid(ad_source) Then
	Return '!'
End If

Return of_MonthName( Month(ad_source) )

end function

public function boolean of_isvalid (time atm_source);//////////////////////////////////////////////////////////////////////////////
//
//	Function:  		of_IsValid
//
//	Access:  		public
//
//	Arguments:
//	adtm_source		DateTime to test.
//
//	Returns:  		boolean
//						True if argument is a valid time.
//						If any argument's value is NULL, function returns False.
//						If any argument's value is Invalid, function returns False.
//
//	Description:  	Given a time, will determine if the time is valid.
//
//////////////////////////////////////////////////////////////////////////////
//
//	Revision History
//
//	Version
//	6.0   Initial version
//
//////////////////////////////////////////////////////////////////////////////
//
//	Copyright © 1996-1997 Sybase, Inc. and its subsidiaries.  All rights reserved.
//	Any distribution of the PowerBuilder Foundation Classes (PFC)
//	source code by other than Sybase, Inc. and its subsidiaries is prohibited.
//
//////////////////////////////////////////////////////////////////////////////

integer 	li_hour
integer	li_minute
integer	li_second

// Initialize test values.
li_hour = Hour(atm_source)
li_minute = Minute(atm_source)
li_second = Second(atm_source)

// Check for nulls.
If IsNull(atm_source) Or IsNull(li_hour) or IsNull(li_minute) or IsNull(li_second) Then
	Return False
End If

// Check for invalid values.
If li_hour < 0 or li_minute < 0 or li_second < 0 Then
	Return False
End If

// Passed all testing.
Return True

end function

public function boolean of_isvalid (date ad_source);//////////////////////////////////////////////////////////////////////////////
//
//	Function:  		of_IsValid
//
//	Access:  		public
//
//	Arguments:
//	ad_source 			Date to test.
//
//	Returns:  		boolean
//						True if argument contains a valid date.
//						If any argument's value is NULL, function returns False.
//						If any argument's value is Invalid, function returns False.
//
//	Description:  	Given a date, will determine if the Date is valid.
//
//////////////////////////////////////////////////////////////////////////////
//
//	Revision History
//
//	Version
//	5.0   Initial version
// 5.0.04 Enhanced for more complete checking.
//	6.0.01 Remove invalid date comparison
//
//////////////////////////////////////////////////////////////////////////////
//
//	Copyright © 1996-1997 Sybase, Inc. and its subsidiaries.  All rights reserved.
//	Any distribution of the PowerBuilder Foundation Classes (PFC)
//	source code by other than Sybase, Inc. and its subsidiaries is prohibited.
//
//////////////////////////////////////////////////////////////////////////////

integer 	li_year
integer	li_month
integer	li_day

// Initialize test values.
li_year = Year(ad_source)
li_month = Month(ad_source)
li_day = Day(ad_source)

// Check for nulls.
If IsNull(ad_source) Or IsNull(li_year) or IsNull(li_month) or IsNull(li_day) Then
	Return False
End If

// Check for invalid values.
If	li_year <= 0 or li_month <= 0 or li_day <= 0 Then
	Return False
End If

// Passed all testing.
Return True

end function

public function date of_relativemonth (date ad_source, long al_month);//////////////////////////////////////////////////////////////////////////////
//
//	Function:  		of_RelativeMonth
//
//	Access:			Public
//
//	Arguments:
//	ad_source		Base date (starting poing).
//	al_month	 		Number of months to increment or decrement the base date by.
//
//	Returns:  		date 
//						The adjusted date.
//						If any argument's value is NULL, function returns NULL.
//						If any argument's value is Invalid, function returns 1900-01-01.
//
//	Description:  	Given a date, will return the date +/- the number of months passed
//						in the second parameter.
//
//////////////////////////////////////////////////////////////////////////////
//
//	Revision History	
//
//	Version
//	5.0   Initial version
//	5.0.03	Fixed - function would fail under some international date sets
// 7.0 	Removed a loop which determined the last day in month.  The loop was 
//			relying on the of_IsValid(date) function to find an invalid date.  
//			In PB 5.0.03+ a date variable can only contain a Null or a valid date
//			Used an ii_daysinmonth[] array instead.
//
//////////////////////////////////////////////////////////////////////////////
//
//	Copyright © 1996-1997 Sybase, Inc. and its subsidiaries.  All rights reserved.
//	Any distribution of the PowerBuilder Foundation Classes (PFC)
//	source code by other than Sybase, Inc. and its subsidiaries is prohibited.
//
//////////////////////////////////////////////////////////////////////////////

integer li_adjust_months, li_adjust_years
integer li_month, li_year, li_day
integer li_temp_month

//Check parameters
If IsNull(ad_source) or IsNull(al_month) Then
	date ldt_null
	SetNull(ldt_null)
	Return ldt_null
End If

//Check for invalid date
If Not of_IsValid(ad_source) Then
	Return ad_source
End If
	
//Number 12 is for the Twelve months in a year.
li_adjust_months = mod(al_month, 12)
li_adjust_years = (al_month / 12)

li_temp_month = Month(ad_source) + li_adjust_months
If li_temp_month > 12 Then
	// Add one more year and adjust for the month
	li_month = li_temp_month - 12
	li_adjust_years ++
ElseIf li_temp_month <= 0 Then
	// Subtract one more year and adjust for the month
	li_month = li_temp_month + 12
	li_adjust_years --
Else
	// No need for any adjustments
	li_month = li_temp_month
End If

li_year = Year(ad_source) + li_adjust_years
li_day = Day(ad_source)

// If the date is > than last in month set it to the last day
If li_day > ii_daysinmonth[li_month] Then
	If li_month = 2 and of_isleapyear(date(li_year, 01, 01)) Then
		li_day = 29
	Else
		li_day = ii_daysinmonth[li_month]
	end If
End IF

Return( Date(li_year, li_month, li_day))

end function

public function date of_relativeyear (date ad_source, long al_years);//////////////////////////////////////////////////////////////////////////////
//
//	Function:  		of_RelativeYear
//
//	Access:  		public
//
//	Arguments:
//	ad_source		Bbase date (starting point).
//	al_years			Number of years to increment or decrement the base date by.
//
//	Returns:  		date
//						The adjusted date
//						If any argument's value is NULL, function returns NULL.
//						If any argument's value is Invalid, function returns 1900-01-01.
//
//	Description:  	Given a date, will return the date +/- the number of years passed
//						in the second parameter.
//
//////////////////////////////////////////////////////////////////////////////
//
//	Revision History
//
//	Version
//	5.0   Initial version
//	5.0.03	Fixed - function would fail under some international date sets
// 7.0	Fixed invalid date calculations
//
//////////////////////////////////////////////////////////////////////////////
//
//	Copyright © 1996-1997 Sybase, Inc. and its subsidiaries.  All rights reserved.
//	Any distribution of the PowerBuilder Foundation Classes (PFC)
//	source code by other than Sybase, Inc. and its subsidiaries is prohibited.
//
//////////////////////////////////////////////////////////////////////////////

integer li_year, li_month, li_day

//Check parameters
If IsNull(ad_source) or IsNull(al_years) Then
	date ldt_null
	SetNull(ldt_null)
	Return ldt_null
End If

//Check for invalid date
If Not of_IsValid(ad_source) Then
	Return ad_source
End If

li_year = Year(ad_source) + al_years
li_month = Month(ad_source)
li_day = Day(ad_source)

//Check for a valid day (i.e., February 30th is never a valid date)
If li_day > ii_daysinmonth[li_month] Then
   If li_month = 2 and &
      of_isleapyear(date(li_year, 01, 01)) Then
         li_day = 29
   Else
         li_day = ii_daysinmonth[li_month]
   end If
End IF

Return( Date(li_year, li_month, li_day))
end function

public function long of_weeksafter (date ad_start, date ad_end);//////////////////////////////////////////////////////////////////////////////
//
//	Function: 		of_WeeksAfter
//
//	Access:  		public
//
//	Arguments:
//	ad_start 		Starting date.
//	ad_end			Ending date.
//
//	Returns:  		Long
//						Number of whole weeks between the two dates.
//						If any argument's value is NULL, function returns NULL.
//						If any argument's value is Invalid, function returns NULL.
//
//	Description:  	Given two dates, will determine the number of whole
//						weeks between the two.
//
//////////////////////////////////////////////////////////////////////////////
//
//	Revision History
//
//	Version
//	5.0   Initial version
//
//////////////////////////////////////////////////////////////////////////////
//
//	Copyright © 1996-1997 Sybase, Inc. and its subsidiaries.  All rights reserved.
//	Any distribution of the PowerBuilder Foundation Classes (PFC)
//	source code by other than Sybase, Inc. and its subsidiaries is prohibited.
//
//////////////////////////////////////////////////////////////////////////////

//Check parameters
If IsNull(ad_start) or IsNull(ad_end) or & 
	Not of_IsValid(ad_start) or Not of_IsValid(ad_end) Then
	long ll_null
	SetNull(ll_null)
	Return ll_null
End If

Return Daysafter(ad_start,ad_end) / 7
end function

public function long of_juliandaynumber (date ad_source);//////////////////////////////////////////////////////////////////////////////
//
//	Function:  		of_JulianDayNumber
//
//	Access:  		public
//
//	Arguments:
//	ad_source 		Date to test
//
//	Returns:  		long
//						Number of the day (ex. 1/1/95=1 and 12/31/95=365)
//						If ad_source is NULL, function returns NULL.
//
//	Description:  	Given a date, will determine the day number within the same
//						year.
//
//////////////////////////////////////////////////////////////////////////////
//
//	Revision History
//
//	Version
//	5.0   Initial version
// 5.0.03	Add date validity check
//
//////////////////////////////////////////////////////////////////////////////
//
//	Copyright © 1996-1997 Sybase, Inc. and its subsidiaries.  All rights reserved.
//	Any distribution of the PowerBuilder Foundation Classes (PFC)
//	source code by other than Sybase, Inc. and its subsidiaries is prohibited.
//
//////////////////////////////////////////////////////////////////////////////

//Check parameters
If IsNull(ad_source) Then
	long ll_null
	SetNull (ll_null)
	Return ll_null
End If

//Check for invalid date
If Not of_IsValid(ad_source) Then
	Return -1
End If

// Get the days after the last day of the Previous Year.
Return daysafter(Date((Year(ad_source) - 1),12,31), ad_source)
end function

public function long of_julian (date ad_source);//////////////////////////////////////////////////////////////////////////////
//
//	Function:  		of_Julian	
//
//	Access:  		public
//
//	Arguments:
//	ad_source		Date to be converted
//
//	Returns:  		long 
//						Date as a julian
//						If any argument's value is NULL, function returns NULL.
//						If any argument's value is Invalid, function returns -1.
//
//	Description:  	Converts a date to Julian format.
//						Note: Julian zero day is Jan. 1, year 0000.
//
//////////////////////////////////////////////////////////////////////////////
//
//	Revision History
//
//	Version
//	5.0   Initial version
//
//////////////////////////////////////////////////////////////////////////////
//
//	Copyright © 1996-1997 Sybase, Inc. and its subsidiaries.  All rights reserved.
//	Any distribution of the PowerBuilder Foundation Classes (PFC)
//	source code by other than Sybase, Inc. and its subsidiaries is prohibited.
//
//////////////////////////////////////////////////////////////////////////////

//Check parameters
If IsNull(ad_source) Then
	long ll_null
	SetNull(ll_null)
	Return ll_null
End If

//Check for invalid date
If Not of_IsValid(ad_source) Then
	Return -1
End If

Return DaysAfter(Date(0000,01,01),ad_source)

end function

public function long of_weeknumber (date ad_source);////////////////////////////////////////////////////////////////////////////////
//
//	Function:  		of_WeekNumber
//
//	Access:  		public
//
//	Arguments:
//	ad_source		Date to be determined.
//
//	Returns:  		long 
//						If any argument's value is NULL, function returns NULL.
//						If any argument's value is Invalid, function returns -1.
//
//	Description:  	Obtains the week number that corresponds to the date from 
//						the begining of the year.
//
//////////////////////////////////////////////////////////////////////////////
//
//	Revision History
//
//	Version
//	5.0   Initial version
//
//////////////////////////////////////////////////////////////////////////////
//
//	Copyright © 1996-1997 Sybase, Inc. and its subsidiaries.  All rights reserved.
//	Any distribution of the PowerBuilder Foundation Classes (PFC)
//	source code by other than Sybase, Inc. and its subsidiaries is prohibited.
//
//////////////////////////////////////////////////////////////////////////////
date		ld_first_ofyear
integer	li_weeknumber
integer	li_leftover_days

//Check parameters
If IsNull(ad_source) Then
	long ll_null
	SetNull(ll_null)
	Return ll_null
End If

//Check for invalid date
If Not of_IsValid(ad_source) Then
	Return -1
End If

//Set to the first of the same year. 
ld_first_ofyear = Date(Year(ad_source), 01, 01)

//Get the number of weeks passed from the begining of the year.
li_weeknumber = of_WeeksAfter (ld_first_ofyear, ad_source)

//Get the leftover days.
li_leftover_days = Mod(DaysAfter (ld_first_ofyear, ad_source), 7)

//If needed, increment the weeks count by one.
If (of_DayOfWeek(ld_first_ofyear) + li_leftover_days) >= 8 then
	li_weeknumber ++
End If

Return li_weeknumber

end function

public function date of_lastdayofmonth (date ad_source);//////////////////////////////////////////////////////////////////////////////
//
//	Function:  		of_LastDayOfMonth
//
//	Access:  		public
//
//	Arguments: 
//	ad_source 		Date to test.
//
//	Returns:  		date
//						The last date of the month passed.
//						If any argument's value is NULL, function returns NULL.
//						If any argument's value is Invalid, function returns 1900-01-01.
//
//	Description:  	Given a date, will determine the last day of the month.
//
//////////////////////////////////////////////////////////////////////////////
//
//	Revision History
//
//	Version
//	5.0   Initial version
//	5.0.03	Fixed - function would fail under some international date sets
// 7.0	Removed a loop which relied on an invalid date.  
//
//////////////////////////////////////////////////////////////////////////////
//
//	Copyright © 1996-1997 Sybase, Inc. and its subsidiaries.  All rights reserved.
//	Any distribution of the PowerBuilder Foundation Classes (PFC)
//	source code by other than Sybase, Inc. and its subsidiaries is prohibited.
//
//////////////////////////////////////////////////////////////////////////////

integer li_year, li_month, li_day

//Check parameters
If IsNull(ad_source) Then
	date ldt_null
	SetNull(ldt_null)
	Return ldt_null
End If

//Check for invalid date
If Not of_IsValid(ad_source) Then
	Return ad_source
End If

li_year = Year(ad_source)
li_month = Month(ad_source)

If li_month = 2 and of_isleapyear(date(li_year, 01, 01)) Then
	li_day = 29
Else
	li_day = ii_daysinmonth[li_month]
end If

Return (Date(li_year, li_month, li_day))

end function

public function integer of_dayofweek (date ad_source);//////////////////////////////////////////////////////////////////////////////
//
//	Function:  		of_DayOfWeek
//
//	Access:  		public
//
//	Arguments:
//	ad_source		Date which contains the day to be determined.
//
//	Returns:  		integer
//						1 - If the Day is Sunday.
//						2 - If the Day is Monday
//						3 - If the Day is Tuesday.
//						4 - If the Day is Wednesday.
//						5 - If the Day is Thursday.
//						6 - If the Day is Friday.
//						7 - If the Day is Saturday.
//						If any argument's value is NULL, function returns NULL.
//
//	Description:  	Based on the the passed date, determines the day of the week.
//
//////////////////////////////////////////////////////////////////////////////
//
//	Revision History
//
//	Version
//	5.0   Initial version
//	5.0.02   Fixed - function would fail under some international date sets
//		Function duplicates PowerScript DayNumber function.
//	5.0.03	Add parameter and invalid date checking
// 6.0	 	Marked obsolete Replaced by DayNumber(...)
//
//////////////////////////////////////////////////////////////////////////////
//
//	Copyright © 1996-1997 Sybase, Inc. and its subsidiaries.  All rights reserved.
//	Any distribution of the PowerBuilder Foundation Classes (PFC)
//	source code by other than Sybase, Inc. and its subsidiaries is prohibited.
//
//////////////////////////////////////////////////////////////////////////////

//Check parameters
If IsNull(ad_source) Then
	long ll_null
	SetNull(ll_null)
	Return ll_null
End If

//Check for invalid date
If Not of_IsValid(ad_source) Then
	Return -1
End If

return DayNumber (ad_source)

end function

public function string of_validarhora (string as_hora);////////////////////////////////////////////////////////////////////////////////
// Función		: of_Convertir
// Comentarios	: Coge un String y lo convierte en formato HH:MM
//					  El String se puede entrar de las siguientes formas:
//						H.M / H:M / H,M / H M / H
//	Argumentos	:
// Retorno		:
// Modificaciones:
//		Fecha		Autor		Comentarios
//		--------	--------	--------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////
BOOLEAN	lb_found
STRING	ls_horaOK, ls_separador[]
INTEGER	li_tab, li_horas, li_minutos, li_pos

ls_separador[1] = '.'
ls_separador[2] = ','
ls_separador[3] = ':'
ls_separador[4] = ' '

lb_found = FALSE
FOR li_tab = 1 TO UpperBound(ls_separador[])
	li_pos = PosA(as_hora,ls_separador[li_tab])
	IF li_pos > 0 THEN
		li_horas = INTEGER(MidA(as_hora, 1, li_pos - 1))
		
		// Si viene en formato HH:MM o en formato HH:MM:SS.
		// Siempre trabajamos en formato HH:MM
		IF IsNumber(MidA(as_hora, li_pos + 1)) THEN
			li_minutos = INTEGER(MidA(as_hora, li_pos + 1))
		ELSE
			li_minutos = INTEGER(MidA(as_hora, li_pos + 1, 2))
		END IF
		lb_found = TRUE
		EXIT
	END IF
NEXT

IF NOT lb_found AND LenA(TRIM(as_hora)) > 0 THEN
	IF IsNumber(as_hora) THEN
		li_horas = INTEGER(as_hora)
	END IF
END IF

IF li_horas > 23 THEN li_horas = 23
IF li_minutos > 59 THEN li_minutos = 59

ls_horaOK = STRING(li_horas,'00')+':'+STRING(li_minutos,'00')

RETURN ls_horaOK
end function

public function long of_time2seconds (string as_hora);INTEGER	li_horas, li_minutos
LONG	ll_seconds

li_horas = INTEGER(MidA(as_hora,1,2))
li_minutos = INTEGER(MidA(as_hora,4,2))

ll_seconds = li_horas * 3600 + li_minutos * 60

RETURN ll_seconds

end function

on n_cst_datetime.create
call super::create
TriggerEvent( this, "constructor" )
end on

on n_cst_datetime.destroy
TriggerEvent( this, "destructor" )
call super::destroy
end on


global type str_perfilobjetos from structure
	string		ss_objeto
	boolean		sb_enabled
	boolean		sb_visible
end type


global type str_perfiles from structure
	menu		m_menu
	long		l_handle
	integer		i_nivel
	string		s_transaccion
	string		s_ventana
	string		s_texto
	string		s_ventanapadre
	string		s_objeto
end type


global type str_opcion from structure
	string		ss_ventana
	string		ss_transaccion
	string		ss_literal
	string		ss_ventanapadre
	character		sc_modo
	blob		sbl_datos
end type




































































































































forward
global type w_response_gtintuge from w_response_base
end type
end forward

global type w_response_gtintuge from w_response_base
integer width = 2194
integer height = 1136
event ue_postretrieve ( )
end type
global w_response_gtintuge w_response_gtintuge

type variables
long		il_intid


integer	ii_estadobotones

end variables

forward prototypes
public function integer of_botones (integer ai_modo)
public function integer of_setdefaultvalues ()
public function integer of_asigna_ug_crm_borrar ()
end prototypes

event ue_postretrieve();// Una vez ha finalizado el retrieve, filtramos la 
// DDDW de las unidades de gestión para mostrar sólo
// las UG que puede visualizar el usuario

String								ls_filter, ls_UGES
DataWindowChild					ldwChild
n_cst_bo_estructuragestion		lnv_EstGest

If dw_1.GetChild("ugeid", ldwChild) < 0 Then Return

App.inv_Connect.of_CreateInstanceAppl(lnv_EstGest, "n_cst_bo_estructuragestion")

If lnv_EstGest.of_GetUGesUsuario(App.srvUsers.Codi, ls_UGEs) > 0 Then

	ls_filter = "ugeid IN (" + ls_UGES + ")"
	ldwChild.SetFilter(ls_filter)
	ldwChild.Filter()

End If

App.inv_Connect.of_DestroyInstanceAppl(lnv_EstGest)
end event

public function integer of_botones (integer ai_modo);/*Esta función habilita y deshabilita botones
en función del estado.
Se centraliza aquí para poder aplicar permisos
de acceso.*/

CHOOSE CASE ai_modo
	CASE II_ACCESO_ALTA
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False	/*porque debe guardar
												 alguna antes de salir */
		pb_modificar.enabled = False
		pb_alta.enabled = False
		pb_borrar.enabled = False
		pb_salir.enabled = FALSE	//NUNCA permitimos salir
	
	CASE II_ACCESO_MODIFICACION
		pb_aceptar.enabled = True
		pb_cancelar.enabled = False
		pb_modificar.enabled = False
		pb_alta.enabled = False
		pb_borrar.enabled = False
		pb_salir.enabled = False	
		
	CASE II_INSERTROW
		pb_aceptar.enabled = False
		pb_cancelar.enabled = True
		pb_modificar.enabled = False
		pb_alta.enabled = False
		pb_borrar.enabled = True
		pb_salir.enabled = False
		
	CASE II_MODIFICAR
		pb_aceptar.enabled = True
		pb_cancelar.enabled = FALSE //Sólo podrá guardar la fecha. Sin vuelta atrás
		pb_modificar.enabled = False
		pb_alta.enabled = False
		pb_borrar.enabled = False
		pb_salir.enabled = False
		
	CASE II_MODIFICAR_CANCELABLE
		pb_aceptar.enabled = True
		pb_cancelar.enabled = TRUE
		pb_modificar.enabled = False
		pb_alta.enabled = False
		pb_borrar.enabled = False
		pb_salir.enabled = False
		
	CASE II_PREPARED_BORRABLE
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		/*19.02.2009*/
		IF ii_modo = II_MODIFICACION THEN
			pb_modificar.Enabled = FALSE
			pb_borrar.enabled = FALSE
		ELSE
			pb_modificar.enabled = True
			pb_borrar.enabled = True
		END IF
		pb_alta.enabled = True
		pb_salir.enabled = True
	
	CASE II_PREPARED_NOBORRABLE
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		/*19.02.2009*/
		IF ii_modo = II_MODIFICACION THEN
			pb_modificar.Enabled = FALSE
			pb_borrar.enabled = FALSE
		ELSE
			pb_modificar.enabled = True
			pb_borrar.enabled = True
		END IF
		pb_alta.enabled = True
		pb_salir.enabled = True
		
	CASE II_TRASBORRAR
		pb_aceptar.enabled = TRUE
		pb_cancelar.enabled = TRUE
		pb_modificar.enabled = False
		pb_alta.enabled = FALSE
		pb_borrar.enabled = FALSE
		pb_salir.enabled = TRUE
		
	CASE II_TRASGUARDAR
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		/*19.02.2009*/
		IF ii_modo = II_MODIFICACION THEN
			pb_modificar.Enabled = FALSE
			pb_borrar.enabled = FALSE
		ELSE
			pb_modificar.enabled = True
			pb_borrar.enabled = True
		END IF
		pb_alta.enabled = True
		pb_salir.enabled = True
		
		pb_aceptar.default = False
		pb_salir.default = True

END CHOOSE

ii_estadobotones = ai_modo

RETURN 0
end function

public function integer of_setdefaultvalues ();//el interlocutor tiene que ser el que venga de la otra ventana
//para todas las filas que se creen
dw_1.Modify("intid.Initial = '" + string(il_intid) + "'")
//comentado 21.02.2008
//dw_1.Modify('ugeid.protect ="0~tif (ugeid = ' + string(il_ugeid) + ', 1, 0)" ')

RETURN 0
end function

public function integer of_asigna_ug_crm_borrar ();long			ll_total, i, ll_ugeid
boolean		lb_found = FALSE


ll_total = dw_1.RowCount()

FOR i = 1 TO ll_total
	ll_ugeid = dw_1.GetItemNumber(i, "ugeid")
	
	IF ll_ugeid = il_ugeid THEN
		lb_found = TRUE
		EXIT
	END IF
NEXT

IF lb_found = FALSE THEN
	i = dw_1.InsertRow(0)
	dw_1.SetItem(i, "ugeid", il_ugeid)
ELSE
	ib_pregunta_salir = FALSE
	//Provocamos el evento para activar los botones
	IF ii_modo = II_ACCESO_ALTA THEN
		dw_1.Event EditChanged (i, dw_1.Object.ugeid, String(il_ugeid))
	END IF
END IF

dw_1.SetRow(i)
dw_1.SetColumn("riufecini")
dw_1.SetFocus()

RETURN 0
end function

event ue_aceptar;//istr_par.s_accion = 'aceptar'
this.PostEvent("ue_close")
end event

event ue_close;Close(This)




end event

event ue_insertrow;call super::ue_insertrow;dw_1.setcolumn('ugeid')


string	ls_modify
//"0~tif (isrownew() , 1, 0)"
ls_modify = "riufecini.protect=~"0~tif (isrownew() , 0, 1)~" "+&
				"riufecfin.protect=~"0~tif (isrownew() , 0, 1)~" "+&
				"ugeid.protect=~"0~tif (isrownew() , 0, 1)~""
ls_modify = dw_1.Modify(ls_modify)

/*21.02.2008 
IF dw_1.RowCount() = 1 THEN
	dw_1.SetItem(1,"ugeid", il_ugeid)
END IF
*/
end event

event ue_delete();Long	ll_fila

ll_fila = dw_1.GetRow()
IF ll_fila > 0 THEN
	IF dw_1.GetItemNumber(ll_fila, "ugeid") = il_ugeid THEN
		App.srvMsgBox.MessageBox(App.MsgBoxTitle,  'No está permitido eliminar ' + &
				'la Unidad de Gestión inicial')
		RETURN
	ELSE
		dw_1.deleterow(ll_fila)
	END IF
	
	IF ll_fila > 1 THEN
		dw_1.SelectRow(ll_fila, TRUE)
	ELSE
		dw_1.SelectRow(1, TRUE)
	END IF
END IF


f_desabled(dw_1)

of_botones(II_TRASBORRAR)
end event

event ue_save();long						ll_intugeid
integer					li_retorno
blob						lblb_datos
n_cst_do_gtintuge		luo_intuge

dw_1.AcceptText()

li_retorno = THIS.Event ue_presave()

IF li_retorno < 0 THEN RETURN

SetPointer(Hourglass!)


App.inv_Connect.of_CreateInstanceDatos(luo_intuge,"n_cst_do_gtintuge")

dw_1.GetFullState(lblb_datos)

ll_intugeid = luo_intuge.of_updateblob( lblb_datos)

IF ll_intugeid >= 0 THEN
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  'Información almacenada correctamente.')
	ib_pregunta_salir = FALSE
Else
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  luo_intuge.of_geterrortexto())
END IF
	
App.inv_Connect.of_DestroyInstance(luo_intuge)


IF ll_intugeid < 0 THEN
	RETURN
END IF

THIS.Event ue_retrieve()

of_botones(II_TRASGUARDAR)

f_desabled(dw_1)
end event

event ue_presave;long			ll_fila, ll_total
date			ldt_fecini, ldt_fecfin
integer		li_retorno = 0
string		ls_campo, ls_mensaje

SetPointer(Hourglass!)

ll_total = dw_1.RowCount()

FOR ll_fila = 1 TO ll_total
	ldt_fecini = dw_1.GetItemDate(ll_fila, "riufecini")
	ldt_fecfin = dw_1.GetItemDate(ll_fila, "riufecfin")
	
	IF IsNull(ldt_fecini) THEN
		ls_mensaje = "Debe introducir la fecha de inicio ."
		
		ls_campo = "riufecini"
		li_retorno = -1
		EXIT
	END IF
	
	IF NOT IsNull(ldt_fecfin) AND ldt_fecfin <= ldt_fecini THEN
		ls_mensaje = "La fecha de fin debe ser mayor que la de inicio ."
		
		ls_campo = "riufecini"
		li_retorno = -1
		EXIT
	END IF
	
	IF  ldt_fecini > Today() THEN
		ls_mensaje = "La fecha de inicio no puede ser superior al día de hoy ."
		
		ls_campo = "riufecini"
		li_retorno = -1
		EXIT
	END IF
	
NEXT

IF li_retorno = -1 THEN
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  ls_mensaje)
	dw_1.SetFocus()
	dw_1.SetRow(ll_fila)
	dw_1.SetColumn(ls_campo)
END IF

RETURN li_retorno
end event

event ue_enabled;f_enabled(dw_1)


dw_1.SetColumn('riufecini')

long		ll_fila
integer	li_modo = II_MODIFICAR


ll_fila = dw_1.GetRow()
IF ll_fila > 0 THEN
	IF NOT IsNull(dw_1.GetItemDate(ll_fila, "riufecini")) THEN
		li_modo = II_MODIFICAR_CANCELABLE
	END IF
	dw_1.SetFocus()
END IF

of_botones(li_modo)
end event

event ue_desabled();of_botones(II_PREPARED_BORRABLE)

Event ue_retrieve()

f_desabled(dw_1)



end event

event ue_retrieve;blob						lblb_datos
integer					li_ret
string					ls_where
n_cst_do_gtintuge		luo_intuge

App.inv_Connect.of_CreateInstanceDatos(luo_intuge,"n_cst_do_gtintuge")

ls_where = 'intid = '  + string(il_intid)
luo_intuge.of_Addwhere(ls_where)
li_ret = luo_intuge.of_Retrieveblob(lblb_datos)

dw_1.SetFullState(lblb_datos)

IF li_ret < 0 THEN
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  luo_intuge.of_geterrortexto())
END IF

//PBD 18.04.2008
//Filtramos las Unidades de Gestión en función del usuario
of_getugesusuario()

of_setdefaultvalues()

dw_1.ResetUpdate()

App.inv_Connect.of_DestroyInstance(luo_intuge)
end event

event open;call super::open;
blob									lblb_datos
long									ll_fila
integer								li_ret

str_interlocutor_eu						lstr_interlocutor
n_cst_do_unidadgestion			lnv_do_unidadgestion
n_cst_do_gtintuge					luo_intuge

lstr_interlocutor = Message.PowerObjectParm

il_intid = lstr_interlocutor.str_intid
//28.01.2008 La unidad de gestión no llegará desde CRM
//il_ugeid = lstr_interlocutor.str_ugeid
ii_modo  = lstr_interlocutor.str_modo


App.inv_Connect.of_CreateInstanceDatos(luo_intuge,"n_cst_do_gtintuge")

//Para cargar el dw_child
luo_intuge.of_addwhere("riuid = 0")
luo_intuge.of_retrieveblob( lblb_datos)
dw_1.SetFullState(lblb_datos)

App.inv_Connect.of_DestroyInstance(luo_intuge)


of_setdefaultvalues() //para que cree filas con intid relleno

/*
//la unidad de gestión que venga del CRM no será modificable
dw_1.SetItem(ll_fila, "ugeid", il_ugeid)

ll_fila = dw_1.GetItemNumber(ll_fila, "intid")
*/

IF ii_modo = II_ALTA THEN

	ll_fila = dw_1.InsertRow(0)
	
	of_botones(II_ACCESO_ALTA)
	dw_1.SetRow(dw_1.RowCount())
	dw_1.SetColumn("riufecini")
	dw_1.SetFocus()
	//PBD 18.04.2008
	//Filtramos las Unidades de Gestión en función del usuario
	of_getugesusuario()
	
ELSEIF ii_modo = II_MODIFICACION THEN 
	Event ue_retrieve()
	
	//28.02.2008
	of_botones(II_TRASGUARDAR)
	ib_pregunta_salir = FALSE
	
	Event ue_desabled()
	
	//of_botones(II_MODIFICAR_CANCELABLE)
	//IF dw_1.RowCount() = 0 THEN dw_1.InsertRow(0)
//28.01.2008
	//of_asigna_ug_crm()
END IF

of_setdefaultvalues()

end event

on w_response_gtintuge.create
call super::create
end on

on w_response_gtintuge.destroy
call super::destroy
end on

event closequery;integer			li_retorno

IF ib_pregunta_salir = TRUE THEN
	li_retorno = App.srvMsgBox.MessageBox(App.MsgBoxTitle,  &
	'No se ha guardado unidad de gestión y es obligatoria',Information!)
	li_retorno = 2
	
	IF li_retorno = 2 THEN
		RETURN 1
	END IF
END IF
end event

type p_icono from w_response_base`p_icono within w_response_gtintuge
end type

type st_titulo from w_response_base`st_titulo within w_response_gtintuge
string text = "Unidades de Gestión del Interlocutor"
end type

type pb_borrar from w_response_base`pb_borrar within w_response_gtintuge
end type

type pb_modificar from w_response_base`pb_modificar within w_response_gtintuge
end type

type pb_salir from w_response_base`pb_salir within w_response_gtintuge
integer x = 1979
end type

type pb_aceptar from w_response_base`pb_aceptar within w_response_gtintuge
end type

type pb_cancelar from w_response_base`pb_cancelar within w_response_gtintuge
end type

type pb_alta from w_response_base`pb_alta within w_response_gtintuge
end type

type dw_1 from w_response_base`dw_1 within w_response_gtintuge
integer width = 2135
string dataobject = "d_do_gtintuge"
end type

event dw_1::rowfocuschanged;call super::rowfocuschanged;setcolumn('ugeid')
end event

event itemchanged;
Choose Case getcolumnname()
	Case 'ugeid', 'riufecini', 'riufecfin'
		of_botones(ii_modificar_cancelable)
//		IF il_fila >1 THEN
//			pb_aceptar.enabled = True
//			pb_cancelar.enabled = False
//			pb_modificar.enabled = False
//			pb_alta.enabled = False
//			pb_borrar.enabled = True
//			pb_salir.enabled = False
//		Else
//			pb_aceptar.enabled = True
//			pb_cancelar.enabled = False
//			pb_modificar.enabled = False
//			pb_alta.enabled = False
//			pb_borrar.enabled = False
//			pb_salir.enabled = False	
//		END IF


End Choose		

end event

event editchanged;
Choose Case getcolumnname()
	Case 'ugeid', 'riufecini', 'riufecfin'
		of_botones(ii_modificar)
//		IF il_fila >1 THEN
//			pb_aceptar.enabled = True
//			pb_cancelar.enabled = False
//			pb_modificar.enabled = False
//			pb_alta.enabled = False
//			pb_borrar.enabled = True
//			pb_salir.enabled = False
//		Else
//			pb_aceptar.enabled = True
//			pb_cancelar.enabled = False
//			pb_modificar.enabled = False
//			pb_alta.enabled = False
//			pb_borrar.enabled = False
//			pb_salir.enabled = False	
//		END IF
End Choose	
end event

type st_fondo from w_response_base`st_fondo within w_response_gtintuge
end type


forward
global type w_form_interlocutor from w_form_base
end type
type dw_2 from datawindow within w_form_interlocutor
end type
type st_1 from statictext within w_form_interlocutor
end type
end forward

global type w_form_interlocutor from w_form_base
integer height = 2348
event m_accquery ( )
dw_2 dw_2
st_1 st_1
end type
global w_form_interlocutor w_form_interlocutor

type variables
//PBD Req. 2824 Controlar por seguridad los accesos a los checkbox
//"es cliente" y "tercero" 
boolean		ib_intescli = TRUE, ib_intester = TRUE

//JBR 31/10/2007 COntrolar también por seguridad el acceso al checkbox "COlaborador/Cta. Participe"
boolean		ib_colaborador = TRUE
end variables

forward prototypes
public function integer of_asigna_valores ()
public function integer of_retrieve_zonas (long al_intid)
public function integer of_abririnterlocutor ()
public function boolean of_validacampos ()
end prototypes

event m_accquery();//Se quiere poder controlar por permisos los checkbox intescli y intester PBD 24.01.2007
string		ls_modify
IF ib_intescli = FALSE THEN
	ls_modify = dw_1.modify("intescli.protect ='1' intescli.tabsequence = 0 intescli.border ='2'")
END IF

IF ib_intester = FALSE THEN
	ls_modify = dw_1.modify("intester.protect ='1' intester.tabsequence = 0 intester.border ='2'")
END IF

//Se quiere poder controlar por permisos el checkbox intespart JBR 19.09.2007
IF ib_colaborador = FALSE THEN
	ls_modify = dw_1.modify("intespart.protect ='1' intespart.tabsequence = 0 intespart.border ='2'")
END IF

ls_modify = ""
end event

public function integer of_asigna_valores ();//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			w_form_interlocutor
//
//	Función:			of_asigna_valores
//
//	Descripción	  : Asignamos los valores recibidos de CRM
//
//	Usada en:	   Mantenimiento de interlocutores. Alta/Modificación
//
//	Argumentos:		(None)
//					  
//	Retorno:			0 OK													<br></br>
//						1 Error												<br></br>
//																				<br></br><div><b>
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios									</div><div>
//	--------	--------	---------------------------------		</div><div>
//	PBD 		05/10/07		Creación		</div>
//
///////////////////////////////////////////////////////////////////////////////
Integer 							li_valor, li_fila, li_ret, li_rtn
long								ll_edad, ll_null
date								ld_null
string							ls_error, ls_entidad_legal
Blob	  							lb_blobdw
n_cst_datetime 				lnvo_edad


SetNull(ld_null)
SetNull(ll_null)

//	dw_1.object.intid[1]     		 =  App.is_parametros[1]
dw_1.object.crmintid[1]  		 =  App.is_parametros[2]
dw_1.object.intnombre[1]  		 =  App.is_parametros[3]
dw_1.object.intdninif[1] 		 =  App.is_parametros[4]

/*
// FRG 24/04/2009. Para los NIE q empiezan por Y y Z, se quita el 0 q se añade desde SIEBEL.
if Upper(Left(App.is_parametros[4],1)) = 'Y' or Upper(Left(App.is_parametros[4],1)) = 'Z' then
	dw_1.object.intdninif[1] 		 =  Left(App.is_parametros[4],1) + Mid(App.is_parametros[4], 3)
else
	dw_1.object.intdninif[1] 		 =  App.is_parametros[4]
end if
*/
IF len(App.is_parametros[5]) > 0 THEN
	dw_1.object.intvtonicnif[1] 	 =  datetime(date(App.is_parametros[5]))
ELSEIF ii_modo = II_MODIFICACION THEN 		//21.02.2008 Si es una modificación consistente en borrar la fecha de vencimiento, hay que borrarla
	dw_1.object.intvtonicnif[1] 	 =  ld_null
END IF

//dw_1.object.intentlegal[1]  	 =  App.is_parametros[6]
IF len(App.is_parametros[6]) > 0 THEN
	dw_1.object.viaid[1] 	 		 =  integer(App.is_parametros[6])
ELSEIF ii_modo = II_MODIFICACION THEN 		//21.02.2008
	dw_1.object.viaid[1] 	 =  ll_null
END IF
dw_1.object.intnomvia[1] 		 =  App.is_parametros[7]
dw_1.object.intnumvia[1] 		 =  App.is_parametros[8]
//PBD 28.04.2008
IF trim(App.is_parametros[8]) = "" THEN
	dw_1.object.intnumvia[1] = "S/N"
END IF

dw_1.object.intescvia[1] 		 =  App.is_parametros[9]
dw_1.object.intpisvia[1] 		 =  App.is_parametros[10]
dw_1.object.intpuevia[1] 		 =  App.is_parametros[11]

IF len(App.is_parametros[12]) > 0 THEN
	dw_1.object.pobsid[1] 		    =  long(App.is_parametros[12])
ELSEIF ii_modo = II_MODIFICACION THEN 		//21.02.2008
	dw_1.object.pobsid[1] 	 =  ll_null
END IF

IF len(App.is_parametros[13]) > 0 THEN
	dw_1.object.pobcodpos[1] 		 =  App.is_parametros[13]
ELSEIF ii_modo = II_MODIFICACION THEN
	dw_1.object.pobcodpos[1] = ""
END IF

dw_1.object.inttelef1[1] 		 =  App.is_parametros[16]
dw_1.object.inttelef2[1] 		 =  App.is_parametros[17]
dw_1.object.inttelefm[1] 		 =  App.is_parametros[18]
dw_1.object.intteleff[1] 		 =  App.is_parametros[19]
dw_1.object.intpagweb[1] 		 =  App.is_parametros[20]
dw_1.object.inte_mail[1] 		 =  App.is_parametros[21]

IF len(App.is_parametros[22]) > 0 THEN
	dw_1.object.intnacionalidad[1] =  long(App.is_parametros[22])
ELSEIF ii_modo = II_MODIFICACION THEN 		//21.02.2008
	dw_1.object.intnacionalidad[1] 	 =  ll_null
END IF

IF len(App.is_parametros[23]) > 0 THEN
	dw_1.object.inttratam[1] 		 =  App.is_parametros[23]
ELSEIF ii_modo = II_MODIFICACION THEN 		//21.02.2008
	dw_1.object.inttratam[1] 	 =  ""
END IF

IF len(App.is_parametros[24]) > 0 THEN
	dw_1.object.intfeccum[1] 		 =  date(App.is_parametros[24])
	ll_Edad = lnvo_edad.of_yearsafter(date(App.is_parametros[24]),today())
	if isnull(ll_Edad) then ll_Edad = 0
	dw_1.object.atinterlocutor_edad[1] = ll_edad
ELSEIF ii_modo = II_MODIFICACION THEN 		//21.02.2008
	dw_1.object.intfeccum[1] 	 =  ld_null
	dw_1.object.atinterlocutor_edad[1] = ll_null
END IF
//App.il_ugeid						 =  len(App.is_parametros[26])

// FRG 22/12/2011
/*dw_1.Object.intester[1] = 'N'
dw_1.Object.intescli[1] = 'N'
dw_1.Object.intespart[1] = 'N'
CHOOSE CASE Upper(Left(app.is_parametros[25], 2))
	CASE 'CL'
		dw_1.Object.intescli[1] = 'S'
	CASE 'CO'
		dw_1.Object.intespart[1] = 'S'
	CASE 'TE'
		dw_1.Object.intester[1] = 'S'
END CHOOSE*/
dw_1.Object.intsaprh[1] = app.is_parametros[26]
dw_1.Object.intsapter[1] = app.is_parametros[27]
dw_1.Object.intsapacre[1] = app.is_parametros[28]
CHOOSE CASE Trim(Upper(app.is_parametros[29]))
	CASE 'CASTELLANO'
		dw_1.Object.intidioma[1] = 1
	CASE 'CATALAN', 'CATALÁN'
		dw_1.Object.intidioma[1] = 2
	CASE 'EUSKERA'
		dw_1.Object.intidioma[1] = 3
	CASE 'GALLEGO'
		dw_1.Object.intidioma[1] = 4
	CASE 'VALENCIANO'
		dw_1.Object.intidioma[1] = 5
END CHOOSE		
/*dw_1.Object.intnomcon[1] = app.is_parametros[30]
dw_1.Object.intfecani[1] = Date(app.is_parametros[31])
dw_1.Object.intnumhij[1] = Long(app.is_parametros[32])*/

dw_1.Object.intester[1] = 'N'
dw_1.Object.intescli[1] = 'N'
dw_1.Object.intespart[1] = 'N'
if app.is_parametros[33] = 'Y' then dw_1.Object.intescli[1] = 'S'
if app.is_parametros[34] = 'Y' then dw_1.Object.intester[1] = 'S'
if app.is_parametros[35] = 'Y' then dw_1.Object.intespart[1] = 'S'

// FRG 14/09/2018
ls_entidad_legal = App.is_parametros[36]
CHOOSE CASE Upper(ls_entidad_legal)
	CASE 'SOCIEDAD CIVIL'
		dw_1.object.intentlegal[1] =  'SC'
	CASE ELSE
		if Pos(ls_entidad_legal, 'SICA') > 0 then
			dw_1.object.intentlegal[1] =  'PF'
		else
			if Pos(ls_entidad_legal, 'DICA') > 0 then
				dw_1.object.intentlegal[1] =  'PJ'
			else
				if Pos(ls_entidad_legal, 'BIEN') > 0 then
					dw_1.object.intentlegal[1] =  'CB'
				end if
			end if
		end if
END CHOOSE

/// Fin FRG 14/09/2018


if IsNull(app.is_parametros[37]) or Trim(app.is_parametros[37]) = '' then
	dw_1.Object.codempleadosap[1] = ll_null
else	
	dw_1.Object.codempleadosap[1] = Long(app.is_parametros[37])
end if

Return 1
end function

public function integer of_retrieve_zonas (long al_intid);n_cst_do_zonacliente			luo_zonacliente
blob								lb_blobZona


App.inv_Connect.of_CreateInstanceDatos(luo_zonacliente,&
		"n_cst_do_zonacliente")

luo_zonacliente.of_SetDataobject("d_do_interlocutor_zonas")
luo_zonacliente.of_addwhere ("gtgrupo_cli.intid = " + string(al_intid))
luo_zonacliente.of_RetrieveBlob(lb_blobZona)

App.inv_Connect.of_DestroyInstance(luo_zonacliente)

THIS.dw_2.SetFullState(lb_blobZona) 


RETURN 0
end function

public function integer of_abririnterlocutor ();//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			w_form_interlocutor
//
//	Función:			of_abririnterlocutor
//
//	Descripción	  : Cargamos en pantalla los datos del mantenimiento
//
//	Usada en:	   Mantenimiento de interlocutor. Alta/Modificación
//
//	Argumentos:		(None)
//					  
//	Retorno:			0 OK													<br></br>
//						1 Error												<br></br>
//																				<br></br><div><b>
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios									</div><div>
//	--------	--------	---------------------------------		</div><div>
//	PBD 		05/10/07		Creación		</div>
//
///////////////////////////////////////////////////////////////////////////////
Integer 							li_valor, li_retorno
long								ll_intid, ll_row
string								ls_nif, ls_entidad_legal, ls_error, ls_info, ls_entidad_legal_ini
Blob    							lb_blobModelo
str_interlocutor				lstr_int
neg_interlocutor				lnv_int
Integer 							li_rtn
n_cst_do_crm_interlocutor	lnv_do_crm_interlocutor


IF Long(App.is_parametros[1]) = 0 THEN
	ii_modo = II_ALTA
	// FRG NUEVO 23/05/2018
	// Si el ID siccod viene vacio, miramos si existe el DNI, y si existe, lo devolvemos a CRM y terminamos.
	app.inv_connect.of_createinstanceappl(lnv_int, 'neg_interlocutor')
	li_rtn = lnv_int.of_getinterlocutor(App.is_parametros[4], lstr_int, ls_error)
	DESTROY lnv_int
	if li_rtn = 1 then
		if NOT ISNull(lstr_int.crmintid) and Trim(lstr_int.crmintid) <> '' then	
		else
/*		MessageBox(this.title, "El DNI/NIF existe en SICCOD pero no tiene relación con SIEBEL", Exclamation!)
			App.il_intid = lstr_int.intid	//25.01.2008 Al terminar la grabación, cerramos la ventana*/
			ii_modo = II_MODIFICACION
			ll_intid = lstr_int.intid
//			dw_1.Object.intid[1] = lstr_int.intid
		end if
	end if
	//1|84551|1-T9X89|BATRES VAZQUEZ, MARTA|02651507K||4|BRUSELAS|26||||31569|28100|28|1|||||||1|||||||Castellano||||N|N|N|Persona Física||MARTA.BATRES
	//// Fin FRG 23/05/2018
ELSE
	ii_modo = II_MODIFICACION
	ll_intid = long(App.is_parametros[1])
END IF


IF of_validadatos() = FALSE THEN
	RETURN -1
END IF

IF of_validacampos() = FALSE THEN
	RETURN -1
END IF

//PBD 17.04.2008 Obtenemos los permisos para las categorías
dw_1.Event uesetparametros()

App.inv_Connect.of_CreateInstanceDatos(lnv_do_crm_interlocutor,&
		"n_cst_do_crm_interlocutor")

/*
Si estamos en alta asignamos los valores SetItem* y luego obtenemos
los dddw

En modificación hacemos un retrieve de BBDD y luego los SetItem*
*/


IF ii_modo = II_ALTA THEN
	li_retorno = of_asigna_valores()
	
	// FRG 23/05/2018
/*	if li_retorno = -10 then
		Return 0
	end if*/
	////

	If li_retorno <= -1 Then
		App.inv_Connect.of_DestroyInstance(lnv_do_crm_interlocutor)
		App.of_parametro_retorno(This, App.ii_valor)
		RETURN -1
	END IF

	dw_1.GetFullState(lb_blobModelo) 
	li_valor = lnv_do_crm_interlocutor.of_recuperadddw(lb_blobModelo)

	THIS.dw_1.SetFullState(lb_blobModelo) 
	
ELSEIF ii_modo = II_MODIFICACION THEN
	
	lnv_do_crm_interlocutor.of_addwhere( "intid = " + string(ll_intid))
	li_valor = lnv_do_crm_interlocutor.of_retrieveblob(lb_blobModelo)
	
	dw_1.SetFullState(lb_blobModelo)
	
	IF li_valor >= 0 THEN
		li_retorno = of_asigna_valores()	
	END IF
		
	//03.04.2008 PBD
	dw_1.GetFullState(lb_blobModelo)
	li_valor = lnv_do_crm_interlocutor.of_recuperadddw(lb_blobModelo)
	dw_1.SetFullState(lb_blobModelo)
	//03.04.2008 PBD
	
	of_retrieve_zonas(ll_intid)
	
END IF

IF dw_1.RowCount() >= 0 THEN
	ll_row = dw_1.GetRow()
	IF ll_row > 0 THEN
		ls_nif = dw_1.GetItemString(ll_row, "intdninif")
		ls_entidad_legal = dw_1.GetItemString(ll_row, "intentlegal")
		ls_entidad_legal_ini = ls_entidad_legal
		ll_intid = dw_1.GetItemNumber(ll_row, "intid")
		li_retorno = lnv_do_crm_interlocutor.of_cambianif(ls_nif, ll_intid, ls_entidad_legal)
		
		IF li_retorno < 0 THEN
			ls_error = lnv_do_crm_interlocutor.of_geterrortexto()
			ls_info = lnv_do_crm_interlocutor.of_geterrorinfo()
			
			App.srvMsgBox.MessageBox(App.MsgBoxTitle,  ls_error, ls_info)
			App.il_intid = -1
			RETURN -1
			
		ELSE
			IF ls_entidad_legal <> ls_entidad_legal_ini OR IsNull(ls_entidad_legal_ini) THEN
				dw_1.SetItem(ll_row, "intentlegal", ls_entidad_legal)
			END IF
		END IF		
	END IF
END IF
	
App.inv_Connect.of_DestroyInstance(lnv_do_crm_interlocutor)

//17.04.2008 Aplicamos los permisos a las categorías
Event m_accquery()

RETURN 0
end function

public function boolean of_validacampos ();//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			w_form_interlocutor
//
//	Función:			of_validacampos
//
//	Descripción	  : Validamos que todos los parámetros tienen valores coherentes
//
//	Usada en:	   Apertura del mantenimiento a crear/modificar
//
//	Argumentos:		(None)
//					  
//	Retorno:																	<div>
//						TRUE		Si son correctos						</div><div>
//						FALSE		Si se produce algún error			</div><br></br>
//
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios									</div><div>
//	--------	--------	---------------------------------		</div><div>
//	PBD 		05/10/07		Creación		</div>
//
///////////////////////////////////////////////////////////////////////////////
boolean		lb_retorno = FALSE

//5			DATE		intvtonicnif[1] 	
//6			LONG		viaid[1] 	
//12		LONG		pobsid
//14		LONG		provincia
//15		LONG		país
//22		LONG		nacionalidad
//24		DATE		intfeccum
if Trim(App.is_parametros[32]) = '' then SetNUll(App.is_parametros[32])

IF Upper(trim(App.is_parametros[4])) <> trim(App.is_parametros[4]) THEN
	App.srvmsgbox.MessageBox("DNI/NIF/CIF no válido.",'No se admiten caracteres en minúsculas.',Information!)

ELSEIF of_isnumber(App.is_parametros[6]) = FALSE THEN
	App.srvmsgbox.MessageBox("Tipo de vía no válido",'',Information!)

ELSEIF of_isnumber(App.is_parametros[12]) = FALSE THEN
	App.srvmsgbox.MessageBox("Población no válida",'',Information!)

ELSEIF of_isnumber(App.is_parametros[14]) = FALSE THEN
	App.srvmsgbox.MessageBox("Provincia no válida",'',Information!)

ELSEIF of_isnumber(App.is_parametros[15]) = FALSE THEN
	App.srvmsgbox.MessageBox("País no válido",'',Information!)

ELSEIF of_isnumber(App.is_parametros[22]) = FALSE THEN
	App.srvmsgbox.MessageBox("Nacionalidad no válida",'',Information!)
	
ELSEIF of_isdate(App.is_parametros[5]) = FALSE THEN
	App.srvmsgbox.MessageBox("Fecha de vencimiento no válida",'',Information!)
	
ELSEIF of_isdate(App.is_parametros[24]) = FALSE THEN
	App.srvmsgbox.MessageBox("Fecha de nacimiento no válida",'',Information!)

////Tipo de vía
//IF Long(App.is_parametros[6]) <= 0 THEN
//	App.srvmsgbox.MessageBox("Código de tipo de vía no válido",'',Information!)
//	RETURN FALSE
//END IF
////Unidad de gestión (Puede ser 0 = todo el mundo lo ve)
//IF Long(App.is_parametros[26]) < 0 THEN
//	App.srvmsgbox.MessageBox("Unidad de gestión no válida",'',Information!)
//	RETURN FALSE
//END IF
/*
elseif NOT ISNull(App.is_parametros[31]) and NOT of_isdate(App.is_parametros[31]) THEN
		App.srvmsgbox.MessageBox("Fecha de aniversario no válida",'',Information!)
ELSEif NOT ISNull(App.is_parametros[32]) and NOT IsNumber(App.is_parametros[32]) then
			App.srvmsgbox.MessageBox("Nº de hijos no válido",'',Information!)*/
else
	lb_retorno = TRUE
END IF

RETURN lb_retorno
end function

event m_accok;///////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			w_form_interlocutor
//
//	Evento:			m_accok
//
//	Descripción	  : Guardamos los datos del mantenimiento
//
//	Usada en:	   Mantenimiento de interlocutor. Alta/Modificación
//
//	Argumentos:		(None)
//					  
//	Retorno:			(None)												
//																				<br></br><div><b>
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios									</div><div>
//	--------	--------	---------------------------------		</div><div>
//	PBD 		05/10/07		Creación		</div>
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
blob											lb_blobModelo
long											ll_intid, ll_pos
string										ls_error, ls_info, ls_guidcrm, ls_nombre, ls_apellidos, ls_nombre_completo
m_main										lm_menu
n_cst_do_crm_interlocutor				lnv_do_crm_interlocutor
pointer										lp_pointer
str_interlocutor_eu						lstr_parametros
//neg_ws										lnv_ws
integer										li_rtn
str_ws_envios								lstr_ws_envios
DataWindowChild							ldwChild
neg_interlocutor							lnv_interlocutor
Date											ldt_fecha

		/*************PRUEBA***************/
//		lstr_parametros.str_intid = 670
//		lstr_parametros.str_modo =	 II_ALTA
//		lstr_parametros.str_tag = "eu_interlocutor_r1"
//		OpenWithParm (w_response_gtintuge, lstr_parametros)
//		
//		RETURN
		/*************PRUEBA***************/

If IsNull(dw_1.object.feccrereg[1]) Then		
	dw_1.object.feccrereg[1] = Datetime(Today(),Now())		
End If
dw_1.AcceptText()

IF dw_1.ModifiedCount() + dw_1.DeletedCount() = 0 THEN
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,"No se ha realizado ningún cambio")
	RETURN
END IF

If dw_1.object.formalegal[1] = '' or isnull(dw_1.object.formalegal[1]) Then
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,"La Forma Legal es obligatoria")
	Return
End If


App.inv_Connect.of_CreateInstanceDatos(lnv_do_crm_interlocutor,"n_cst_do_crm_interlocutor")

lp_pointer = SetPointer(HourGlass!)


dw_1.GetFullState(lb_blobModelo) 
ll_intid = lnv_do_crm_interlocutor.of_updateblob(lb_blobModelo)

//SetPointer(lp_pointer)

dw_1.SetFullState(lb_blobModelo) 

IF ll_intid < 0 THEN
	ls_error = lnv_do_crm_interlocutor.of_geterrortexto()
	ls_info  = lnv_do_crm_interlocutor.of_geterrorinfo()
	App.srvMsgBox.MessageBox(App.MsgBoxTitle , ls_error, ls_info)
	Return
END IF

//App.inv_Connect.of_DestroyInstance(lnv_do_crm_interlocutor)

////AMA 19/03/2019 Llamada al CRM
//	If IsNull(dw_1.object.guidcrm[1]) or Trim(dw_1.object.guidcrm[1]) = '' Then
//		lstr_ws_envios.tipo = 'CREAR '
//	Else
//		lstr_ws_envios.tipo = 'ACTUALIZAR'
//		lstr_ws_envios.campo21 = dw_1.object.guidcrm[1]
//	End If
//	
//	lstr_ws_envios.campo1  = dw_1.object.crmintid[1]
//	lstr_ws_envios.campo2  = string(ll_intid)
//	lstr_ws_envios.campo3  = dw_1.object.intdninif[1]
//
//	ls_nombre_completo = dw_1.object.intnombre[1]
//	ll_pos = Pos(ls_nombre_completo,',')
//	ls_apellidos = Mid(ls_nombre_completo,1,Pos(ls_nombre_completo,',') - 1)
//	ls_nombre = Mid(ls_nombre_completo, ll_pos +1, len(ls_nombre_completo))
//	
//	lstr_ws_envios.campo4  = ls_apellidos
//	lstr_ws_envios.campo5  = ls_nombre
//	If IsNull(dw_1.object.guidcrm[1]) or Trim(dw_1.object.guidcrm[1]) = '' Then
//	ldt_fecha = Date(dw_1.object.feccrereg[1])
//		lstr_ws_envios.campo6 = String(ldt_fecha, 'yyyy-mm-dd') + 'T00:00:00'
//	else
//		lstr_ws_envios.campo6 = String(Today(), 'yyyy-mm-dd') + 'T00:00:00'		
//	end if
//	lstr_ws_envios.campo7  = dw_1.object.inttelef1[1]
//	lstr_ws_envios.campo8  = dw_1.object.inttelef2[1]
//	lstr_ws_envios.campo9  = dw_1.object.inttelefm[1]
//	lstr_ws_envios.campo10 = dw_1.object.intteleff[1]
//	lstr_ws_envios.campo11 = dw_1.object.intpagweb[1]
//	If IsNull(dw_1.object.inte_mail[1]) or Trim(dw_1.object.inte_mail[1]) = '' Then
//		lstr_ws_envios.campo12 = 'desconocido@desconocido.es'
//	Else
//		lstr_ws_envios.campo12 = dw_1.object.inte_mail[1]
//	End If
//	If IsNull(dw_1.object.intfeccum[1]) Then
//	else
//		lstr_ws_envios.campo13 = String(Date(dw_1.object.intfeccum[1]), 'yyyy-mm-dd') + 'T00:00:00'
//	end if
//	If IsNull(dw_1.object.inttratam[1]) or Trim(dw_1.object.inttratam[1]) = '' Then
//	else
//		If Trim(dw_1.object.inttratam[1]) = 'SRA' Then
//			lstr_ws_envios.campo14 = '754310001'
//		Elseif Trim(dw_1.object.inttratam[1]) = 'SR'  or Trim(dw_1.object.inttratam[1]) = 'DON' Then
//			lstr_ws_envios.campo14 = '754310000'
//		Else
//			lstr_ws_envios.campo14 = ''
//		End If
//	End If
//	If IsNull(dw_1.object.intvtonicnif[1]) Then
//	else
//		lstr_ws_envios.campo15 = String(Date(dw_1.object.intvtonicnif[1]), 'yyyy-mm-dd') + 'T00:00:00'
//	End If
//	lstr_ws_envios.campo16 = dw_1.object.intsaprh[1]
//	lstr_ws_envios.campo17 = dw_1.object.intsapter[1]
//	lstr_ws_envios.campo18 = dw_1.object.intsapacre[1]
//	lstr_ws_envios.campo19 = String(dw_1.object.codempleadosap[1])
//	If dw_1.Object.formalegal[1] = 'Autónomo' Then
//		lstr_ws_envios.campo20 = 'AUT'
//	Else
//		lstr_ws_envios.campo20 = dw_1.object.formalegal[1]
//	End If
//
//	//Envio a CRM del interlocutores
//	//App.inv_Connect.of_CreateInstanceAppl(lnv_ws,"neg_ws")
//	//li_rtn = lnv_ws.of_envio_interlocutores(lstr_ws_envios,ls_error)	
//	//If isValid(lnv_ws) Then App.inv_Connect.of_DestroyInstanceAppl(lnv_ws)
//	
//
//	li_rtn = lnv_do_crm_interlocutor.of_envio_interlocutores(lstr_ws_envios,ls_error)
//	//If isValid(lnv_ws) Then App.inv_Connect.of_DestroyInstanceAppl(lnv_ws)
//	
//	If li_rtn <> 1 Then
//		App.srvMsgBox.MessageBox(App.MsgBoxTitle , 'No se ha creado el contacto en CRM. Se debe avisar al equipo de Soporte de SICCOD/TI España.', ls_error)
//	End If
//
//	If li_rtn = 1 then
//		ls_guidcrm = Mid(ls_error,13,Pos(ls_error,'"}]}')-13)
//	
//		If lstr_ws_envios.tipo = 'ACTUALIZAR' Then	
//			ls_guidcrm = dw_1.object.guidcrm[1]
//		End If
//	
//		//Grabar el Guidcrm		
//		App.inv_Connect.of_CreateInstanceAppl(lnv_interlocutor,"neg_interlocutor")
//		li_rtn = lnv_interlocutor.of_update_guidcrm( ll_intid, ls_guidcrm, lstr_ws_envios.campo20, ls_error )
//		If li_rtn <> 1 Then
//			App.srvMsgBox.MessageBox(App.MsgBoxTitle , 'Se ha producido un error de sincronización con SICCOD. Se debe avisar al equipo de Soporte de SICCOD/TI España.', ls_error)
//		End If
//		lnv_interlocutor.of_SetComplete()
//		//If isValid(lnv_ws) Then App.inv_Connect.of_DestroyInstanceAppl(lnv_ws)
//		
//	End If
//
//App.inv_Connect.of_DestroyInstance(lnv_do_crm_interlocutor)
//	//End If
//
////Envio del correo, hay que revisarlo y hacerlo bien.	
////	If li_rtn <> 1 Then
////		Long					Row
////		String				ls_Asunto, ls_Mensaje, ls_MailTo[]
////		n_cst_mail			lnv_Mail
////		
////		//ls_Asunto   = "Mensaje de Error de la Aplicación - " + string(today()) + " - " + string(now(),"HH:MM:SS") 
////		ls_Asunto   = "Error en el envio a CRM del nuevo interlocutor con id siccod- " + string(ll_intid) + ". Fecha: " + string(today()) + " - " + string(now(),"HH:MM:SS") 
////		
////		Row = dw_1.GetRow()
////		ls_Mensaje  = "Id Interlocutor Siccod  : " + string(ll_intid) + '~r~n'
////		ls_Mensaje += "Interlocutor : "            + dw_1.object.intnombre[1]  + '~r~n'
////		ls_Mensaje += "Fecha   :                   " + string(Today(), 'yyyy-mm-dd')    + '~r~n'
////		//ls_Mensaje += "Objeto        : " + dw_1.GetItemString(Row, "object")   + '~r~n'
////		//ls_Mensaje += "Evento        : " + dw_1.GetItemString(Row, "event")    + '~r~n'
////		//ls_Mensaje += "Linea Número  : " + dw_1.GetItemString(Row, "line")
////		
////		//Definir quien recibe los correos
////		ls_Mailto[1] = "Manel Pérez"
////		ls_Mailto[2] = "Manel2"
////		
////		lnv_Mail.of_EnviarCorreu(ls_Asunto, ls_Mensaje, ls_MailTo)
////
////	end if
//
////AMA 19/03/2019
SetPointer(lp_pointer)



IF ll_intid > 0 THEN
	
	App.srvMsgBox.MessageBox(App.MsgBoxTitle , 'Información almacenada satisfactoriamente')

	dw_1.ResetUpdate()
	
//	IF ii_modo = II_ALTA THEN 
		lm_menu = THIS.MenuID
		lm_menu.m_03.m_0301.Enabled = FALSE
//	END IF
	
App.il_intid = ll_intid	//valor que se retornará a CRM

/*28.01.2008 La unidad de gestión no se recibe
	
	//Puede ser 0 = todo el mundo lo ve
	IF App.il_ugeid > 0 THEN
*/	
		
//		lstr_parametros.str_ugeid = App.il_ugeid
		lstr_parametros.str_intid = 		ll_intid
		lstr_parametros.str_modo =	ii_modo
		lstr_parametros.str_tag = "eu_interlocutor_r1"
		
		OpenWithParm (w_response_gtintuge, lstr_parametros)
		
	
		
	//25.01.2008 Al terminar la grabación, cerramos la ventana
	THIS.Event ue_exitapp()
	RETURN
ELSE
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  ls_error, ls_info)
END IF
/*ELSE
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  ls_error, ls_info)
	App.il_intid = -1
	
END IF
*/
end event

event ue_postopen;call super::ue_postopen;integer							li_retorno, ll_ret
str_interlocutor				lstr_int
neg_interlocutor				lnv_int
neg_parametros					lnv_parametros


Integer 							li_rtn
string							ls_error, ls_letra, ls_filter
DataWindowChild				ldwc_child
DataStore						lds_datos
Blob								lb_datos
Long								ll_total, ll_ins, i

li_retorno = of_abririnterlocutor()

IF li_retorno < 0 THEN
	crm_siccod.il_codretorno = -1
	RETURN FALSE
END IF

//////////////////////////
ls_letra = Mid(dw_1.object.intdninif[1],1,1)
If ii_modo = II_ALTA Then
//	If Match(ls_letra, "^[A-Za-z]") = True Then
	if ls_letra = 'X' or ls_letra = 'Y' or ls_letra = 'Z' or IsNumber(ls_letra) then
		//dW_1.Object.formalegal[1] = 'AUT'
		dw_1.GetChild("formalegal", ldwc_child)
		ll_ins = ldwc_child.InsertRow(0)
		ldwc_child.SetItem(ll_ins, "abreviatura", 'AUT')
		ldwc_child.SetItem(ll_ins, "forma_legal", 'Autónomo')
		dw_1.object.formalegal[1] = 'AUT'
		dw_1.Object.intentlegal[1] = 'PF'
		dw_1.Object.formalegal.protect = 1
		ldwc_child.SetRow(1)
	else
	
	// Cargamos los componentes
		App.inv_Connect.of_CreateInstanceAppl(lnv_parametros, 'neg_parametros')
		ll_ret = lnv_parametros.of_getformaslegales( lb_datos, ls_error)
		if ll_ret = 1 then
			lds_datos = CREATE DataStore
			lds_datos.SetFullState(lb_datos)
			ll_total = lds_datos.RowCount()
			
			dw_1.GetChild("formalegal", ldwc_child)
			ll_ins = ldwc_child.InsertRow(0)
			ldwc_child.SetItem(ll_ins, "abreviatura", 0)
			ldwc_child.SetItem(ll_ins, "forma_legal", '<Ninguno>')
			// los cargo en la child
			for i = 1 to ll_total
				if lds_datos.Object.letra_documento[i] = ls_letra then
					ll_ins = ldwc_child.InsertRow(0)
					ldwc_child.SetItem(ll_ins, "abreviatura", lds_datos.Object.abreviatura[i])
					ldwc_child.SetItem(ll_ins, "forma_legal", lds_datos.Object.forma_legal[i])
				end if
			next
			ldwc_child.SetRow(1)
			//dw_1.Object.intentlegal[1] = ldwc_child.GetItemString(1,"tipo_entidad_legal")
			dw_1.Object.intentlegal[1] = 'PJ'
			
			DESTROY lds_datos
		end if
		App.inv_Connect.of_DestroyInstance(neg_parametros)
	End if
else
	if ls_letra = 'X' or ls_letra = 'Y' or ls_letra = 'Z' or IsNumber(ls_letra) then
		//dW_1.Object.formalegal[1] = 'AUT'
		dw_1.GetChild("formalegal", ldwc_child)
		ll_ins = ldwc_child.InsertRow(0)
		ldwc_child.SetItem(ll_ins, "abreviatura", 'AUT')
		ldwc_child.SetItem(ll_ins, "forma_legal", 'Autónomo')
		dw_1.object.formalegal[1] = 'AUT'
		dw_1.Object.intentlegal[1] = 'PF'
		dw_1.Object.formalegal.protect = 1
		ldwc_child.SetRow(1)
	Else
		dw_1.GetChild("formalegal", ldwc_child)
		ldwc_child.Setfilter("letra_documento = '"+ ls_letra +" '")
		ldwc_child.Filter()
	End If
end if




///////////////////////
//AMA 01/04/2019 Filtramos el tipo de documento segun la letra del dni
//	ls_letra = Mid(dw_1.object.intdninif[1],1,1)
////	If Match(ls_letra, "^[A-Za-z]") = True Then
//	if ls_letra = 'X' or IsNumber(ls_letra) then
//		dW_1.Object.formalegal[1] = 'N/A'
//		dW_1.Object.formalegal.protect = 1
//	else
//		If dw_1.GetChild("formalegal", ldwChild) = 1 Then
//			ls_filter = "letra_documento = '" + ls_letra +"'"
//			ll_ret =	ldwChild.SetFilter(ls_filter)
//			ll_ret = ldwChild.Filter()
//			
//		End If	
//	end if
//AMA 01/04/2019


// FRG NUEVO 23/05/2018
// Si el ID siccod viene vacio, miramos si existe el DNI, y si existe, lo devolvemos a CRM y terminamos.
app.inv_connect.of_createinstanceappl(lnv_int, 'neg_interlocutor')
li_rtn = lnv_int.of_getinterlocutor(App.is_parametros[4], lstr_int, ls_error)
DESTROY lnv_int
if li_rtn = 1 then
	if NOT ISNull(lstr_int.crmintid) and Trim(lstr_int.crmintid) <> '' then	
		if lstr_int.crmintid <> App.is_parametros[2] then
			MessageBox(this.title, "El DNI/NIF ya existe tanto en SIEBEL como en SICCOD: se está duplicando. Por favor confirme la información.", Exclamation!)
//			SetNull(App.il_intid)
			THIS.Event ue_exitapp()
			RETURN FALSE
		end if
	end if
end if
//1|84551|1-T9X89|BATRES VAZQUEZ, MARTA|02651507K||4|BRUSELAS|26||||31569|28100|28|1|||||||1|||||||Castellano||||N|N|N|Persona Física||MARTA.BATRES
//// Fin FRG 23/05/2018

RETURN TRUE
end event

on w_form_interlocutor.create
int iCurrent
call super::create
this.dw_2=create dw_2
this.st_1=create st_1
iCurrent=UpperBound(this.Control)
this.Control[iCurrent+1]=this.dw_2
this.Control[iCurrent+2]=this.st_1
end on

on w_form_interlocutor.destroy
call super::destroy
if IsValid(MenuID) then destroy(MenuID)
destroy(this.dw_2)
destroy(this.st_1)
end on

event ue_preopen;call super::ue_preopen;
is_campos[] =  {"ID Interlocutor", &
/* 2 */	"ID Interlocutor Siebel", 	&
/* 3 */ "Nombre de Interlocutor", 	&
/* 4 */ "Número Identificación fiscal", &
/* 5 */ "Fecha de vencimiento DNI", & 
/* 6 */ "tipo vía", &
/* 7 */	"Nombre de la Via", &
/* 8 */ "Numero Via", &
/* 9 */ "valor de la Escalera", &
/* 10 */ "Numero del Piso", &
/* 11 */ "Numero de Puerta", &
/* 12 */ "Localidad", &
/* 13 */"Codigo Postal", &
/* 14 */ "Provincia", &
/* 15 */ "Pais", &
/* 16 */ "Telefono[1]", &
/* 17 */ "Telefono[2]", &
/* 18 */ "Telefono Movil", &
/* 19 */"FAX", &
/* 20 */ "Pagina Web", &
/* 21 */ "Correo Electronico", &
/* 22 */ "Nacionalidad", &
/* 23 */ "Tratamiento", &
/* 24 */ "Fecha de Nacimiento", &
/* 25 */ "Tipo Contacto", &
/* 26 */ "Codigo Interlocutor SAP", &
/* 27 */ "Código Deudor SAP", &
/* 28 */ "Código Acreedor SAP", &
/* 29 */ "Idioma", &
/* 30 */ "Conyuge", &
/* 31 */ "Aniversario", &
/* 32 */ "Nº Hijos", &
/* 33 */ "Es cliente", &
/* 34 */ "Es tercero", &
/* 35 */ "Es participe", &
/* 36 */ "", &
/* 37 */ "Cod Cliente SAP" &
}

ib_canbenull[5] = TRUE
ib_canbenull[6] = TRUE
ib_canbenull[7] = TRUE
ib_canbenull[8] = TRUE
ib_canbenull[9] = TRUE
ib_canbenull[10] = TRUE
ib_canbenull[11] = TRUE
ib_canbenull[12] = TRUE
ib_canbenull[12] = TRUE
ib_canbenull[13] = TRUE
ib_canbenull[14] = TRUE
ib_canbenull[15] = TRUE
ib_canbenull[16] = TRUE
ib_canbenull[17] = TRUE
ib_canbenull[18] = TRUE
ib_canbenull[19] = TRUE
ib_canbenull[20] = TRUE
ib_canbenull[21] = TRUE
ib_canbenull[22] = TRUE
ib_canbenull[23] = TRUE
ib_canbenull[24] = TRUE
//ib_canbenull[26] = TRUE

// FRG 22/12/2011
ib_canbenull[25] = TRUE // Tipo Contacto
ib_canbenull[26] = TRUE // C. Interlocutor SAP
ib_canbenull[27] = TRUE // Codigo Deudor SAP
ib_canbenull[28] = TRUE // Codigo Acreedor SAP
ib_canbenull[29] = TRUE // Idioma
ib_canbenull[30] = TRUE // Conyuge
ib_canbenull[31] = TRUE // Aniversario
ib_canbenull[32] = TRUE // Nº Hijos
ib_canbenull[37] = TRUE // Codigo empleado SAP

RETURN TRUE
end event

event ue_exitapp;call super::ue_exitapp;w_siccod_frame				lw_mdi


//AMA 22/03/2019 Hacemos override
//App.srvmsgbox.MessageBox(App.MsgBoxTitle,'Se ha completado la grabación. A continuación se cerrará Siccod')

//25.01.2008 Al terminar la grabación, cerramos la ventana
//lw_mdi = THIS.ParentWindow()
//lw_mdi.ii_avisar = 0
//Close(lw_mdi)
Close(this)
RETURN

//AMA 22/03/2019
end event

type dw_1 from w_form_base`dw_1 within w_form_interlocutor
event uesetparametros ( )
string dataobject = "d_do_crm_interlocutor"
end type

event dw_1::uesetparametros();
//PBD 25.01.2007. Req. 2824 Se valida por permisos
//el acceso a los checks de cliente y tercero
//creando dos nuevas categorías, modcliente y modtercero
integer			li_total
boolean			lb_enabled, lb_visible
string			ls_Modify

li_total = i_cst_manteniment.of_getcategoria("modcliente",lb_enabled,lb_visible)

IF li_total = 0 OR li_total = -2 THEN
	IF lb_enabled = FALSE THEN	
		ib_intescli = FALSE
	END IF
END IF

li_total = i_cst_manteniment.of_getcategoria("modtercero",lb_enabled,lb_visible)

IF li_total = 0 OR li_total = -2 THEN
	IF lb_enabled = FALSE THEN	
		ib_intester = FALSE
	END IF
END IF

//JBR 19.09.2007
// Control del check de Colaboradores y Cuenta Participes sólo para perfil con acceso
li_total = i_cst_manteniment.of_getcategoria("modcolaborador",lb_enabled,lb_visible)

IF li_total = 0 OR li_total = -2 THEN
	IF lb_enabled = FALSE THEN	
		ib_colaborador = FALSE
	END IF
END IF


end event

event dw_1::itemchanged;call super::itemchanged;//DataWindowChild				ldwc_child
//
//dw_1.GetChild("formalegal", ldwc_child)
//
//IF Dwo.name = "formalegal" THEN
//	dw_1.Object.intentlegal[1] = ldwc_child.GetItemString(ldwc_child.GetRow(),"tipo_entidad_legal")
//END IF
end event

type dw_2 from datawindow within w_form_interlocutor
integer x = 27
integer y = 1516
integer width = 2651
integer height = 620
boolean bringtotop = true
string title = "none"
string dataobject = "d_do_interlocutor_zonas"
boolean livescroll = true
end type

type st_1 from statictext within w_form_interlocutor
integer x = 27
integer y = 1440
integer width = 2651
integer height = 76
boolean bringtotop = true
integer textsize = -10
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
long backcolor = 15780518
string text = "Zonas del Interlocutor"
boolean focusrectangle = false
end type


release 10.5;
datawindow(units=0 timer_interval=0 color=1073741824 processing=1 HTMLDW=no print.printername="" print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.canusedefaultprinter=yes print.prompt=no print.buttons=no print.preview.buttons=no print.cliptext=no print.overrideprintjob=no print.collate=yes print.preview.outline=yes hidegrayline=no grid.lines=0 )
header(height=80 color="67108864" )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=72 color="536870912" )
table(column=(type=long update=yes updatewhereclause=yes key=yes name=riuid dbname="gtintuge.riuid" )
 column=(type=long update=yes updatewhereclause=yes name=intid dbname="gtintuge.intid" )
 column=(type=long update=yes updatewhereclause=yes name=ugeid dbname="gtintuge.ugeid" )
 column=(type=date update=yes updatewhereclause=yes name=riufecini dbname="gtintuge.riufecini" )
 column=(type=date update=yes updatewhereclause=yes name=riufecfin dbname="gtintuge.riufecfin" )
 column=(type=datetime update=yes updatewhereclause=yes name=feccrereg dbname="gtintuge.feccrereg" )
 column=(type=char(10) update=yes updatewhereclause=yes name=codusucid dbname="gtintuge.codusucid" )
 retrieve="  SELECT gtintuge.riuid,   
         gtintuge.intid,   
         gtintuge.ugeid,   
         gtintuge.riufecini,   
         gtintuge.riufecfin,   
         gtintuge.feccrereg,   
         gtintuge.codusucid  
    FROM gtintuge   
" update="gtintuge" updatewhere=0 updatekeyinplace=yes  sort="ugeid A riufecini A " )
text(band=header alignment="0" text="Unidad de Gestión" border="4" color="33554432" x="9" y="8" height="60" width="759" html.valueishtml="0"  name=ugeid_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header alignment="0" text="Fecha Inicio" border="4" color="33554432" x="777" y="8" height="60" width="334" html.valueishtml="0"  name=riufecini_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header alignment="0" text="Fecha Fin" border="4" color="33554432" x="1120" y="8" height="60" width="334" html.valueishtml="0"  name=riufecfin_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=3 alignment="0" tabsequence=10 border="0" color="33554432" x="9" y="8" height="60" width="759" format="[general]" html.valueishtml="0"  name=ugeid visible="1" dddw.name=d_dddw_unidadgestion dddw.displaycolumn=ugedescri dddw.datacolumn=ugeid dddw.percentwidth=0 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=no dddw.case=any dddw.vscrollbar=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=4 alignment="0" tabsequence=20 border="0" color="33554432" x="777" y="8" height="60" width="334" format="dd/mm/yyyy" html.valueishtml="0"  name=riufecini visible="1" editmask.mask="dd/mm/yyyy" editmask.focusrectangle=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=5 alignment="0" tabsequence=30 border="0" color="33554432" x="1120" y="8" height="60" width="334" format="dd/mm/yyyy" html.valueishtml="0"  name=riufecfin visible="1" editmask.mask="dd/mm/yyyy" editmask.focusrectangle=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" encodeselflinkargs="1" netscapelayers="0" pagingmethod=0 generatedddwframes="1" )
xhtmlgen() cssgen(sessionspecific="0" )
xmlgen(inline="0" )
xsltgen()
jsgen()
export.xml(headgroups="1" includewhitespace="0" metadatatype=0 savemetadata=0 )
import.xml()
export.pdf(method=0 distill.custompostscript="0" xslfop.print="0" )
export.xhtml()
 
release 8;
datawindow(units=0 timer_interval=0 color=16777215 processing=1 HTMLDW=no print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no grid.lines=0 )
header(height=80 color="80269524" )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=72 color="536870912" )
table(column=(type=long update=yes updatewhereclause=yes key=yes name=gtgrupo_cli_rclid dbname="gtgrupo_cli.rclid" )
 column=(type=long updatewhereclause=yes name=gtgrupo_cli_zonid dbname="gtgrupo_cli.zonid" )
 column=(type=long updatewhereclause=yes name=intid dbname="gtgrupo_cli.intid" )
 column=(type=date updatewhereclause=yes name=gtgrupo_cli_rclfecent dbname="gtgrupo_cli.rclfecent" )
 column=(type=date updatewhereclause=yes name=gtgrupo_cli_rclfecsal dbname="gtgrupo_cli.rclfecsal" )
 column=(type=datetime updatewhereclause=yes name=gtgrupo_cli_feccrereg dbname="gtgrupo_cli.feccrereg" )
 column=(type=char(10) updatewhereclause=yes name=gtgrupo_cli_codusucid dbname="gtgrupo_cli.codusucid" )
 column=(type=long updatewhereclause=yes name=atzona_ugeid dbname="atzona.ugeid" )
 column=(type=char(35) updatewhereclause=yes name=atzona_zondescri dbname="atzona.zondescri" )
 column=(type=long updatewhereclause=yes name=htorganigestion_intid dbname="htorganigestion.intid" )
 column=(type=date updatewhereclause=yes name=htorganigestion_orgfecini dbname="htorganigestion.orgfecini" )
 column=(type=date updatewhereclause=yes name=htorganigestion_orgfecfin dbname="htorganigestion.orgfecfin" )
 retrieve="  SELECT gtgrupo_cli.rclid,   
         gtgrupo_cli.zonid,   
         gtgrupo_cli.intid,   
         gtgrupo_cli.rclfecent,   
         gtgrupo_cli.rclfecsal,   
         gtgrupo_cli.feccrereg,   
         gtgrupo_cli.codusucid,   
         atzona.ugeid,   
         atzona.zondescri,   
         htorganigestion.intid,   
         htorganigestion.orgfecini,   
         htorganigestion.orgfecfin  
    FROM gtgrupo_cli,   
         atzona LEFT OUTER JOIN gtzona_nodo ON gtzona_nodo.zonid = atzona.zonid,   
         htorganigestion
   WHERE ( atzona.zonid     				 = gtgrupo_cli.zonid ) and  
         ( htorganigestion.orgid 		 = gtzona_nodo.orgid )  and
			( ( gtgrupo_cli.rclfecent     <= TODAY) AND ( TODAY <= gtgrupo_cli.rclfecsal     OR gtgrupo_cli.rclfecsal     IS NULL)) AND
			( ( gtzona_nodo.rzlfecent     <= TODAY) AND ( TODAY <= gtzona_nodo.rzlfecsal     OR gtzona_nodo.rzlfecsal     IS NULL)) AND
			( ( htorganigestion.orgfecini <= TODAY) AND ( TODAY <= htorganigestion.orgfecfin OR htorganigestion.orgfecfin IS NULL)) " update="gtgrupo_cli" updatewhere=0 updatekeyinplace=yes  sort="intid A atzona_zondescri A " )
text(band=header alignment="0" text="Zona" border="4" color="0" x="9" y="12" height="60" width="494" html.valueishtml="0"  name=atzona_zondescri_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header alignment="0" text="Fec.Entrada" border="4" color="0" x="512" y="12" height="60" width="297" html.valueishtml="0"  name=gtgrupo_cli_rclfecent_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header alignment="0" text="U.Gestión" border="4" color="0" x="818" y="12" height="60" width="553" html.valueishtml="0"  name=atzona_ugeid_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header alignment="0" text="Zona Asignada A" border="4" color="0" x="1381" y="12" height="60" width="773" html.valueishtml="0"  name=htorganigestion_intid_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header alignment="0" text="Fec. Ini Asig." border="4" color="0" x="2162" y="12" height="60" width="315" html.valueishtml="0"  name=htorganigestion_orgfecini_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=9 alignment="0" tabsequence=32766 border="0" color="0" x="9" y="4" height="60" width="494" format="[general]" html.valueishtml="0"  name=atzona_zondescri visible="1" edit.limit=35 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=4 alignment="0" tabsequence=32766 border="0" color="0" x="512" y="4" height="60" width="297" format="dd/mm/yyyy" html.valueishtml="0"  name=gtgrupo_cli_rclfecent visible="1" edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=8 alignment="0" tabsequence=32766 border="0" color="0" x="818" y="4" height="60" width="553" format="[general]" html.valueishtml="0"  name=atzona_ugeid visible="1" dddw.name=d_dddw_unidadgestion dddw.displaycolumn=ugedescri dddw.datacolumn=ugeid dddw.percentwidth=0 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=no dddw.case=any dddw.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=10 alignment="0" tabsequence=32766 border="0" color="0" x="1381" y="4" height="60" width="773" format="[general]" html.valueishtml="0"  name=htorganigestion_intid visible="1" dddw.name=d_dddw_interlocutor dddw.displaycolumn=intnombre dddw.datacolumn=intid dddw.percentwidth=0 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=no dddw.case=any dddw.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=11 alignment="0" tabsequence=32766 border="0" color="0" x="2162" y="4" height="60" width="315" format="[general]" html.valueishtml="0"  name=htorganigestion_orgfecini visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" netscapelayers="0" )

global type str_interlocutor_eu from structure
	long		str_ugeid
	long		str_intid
	long		str_modo
	date		str_fecha
	long		str_socid
	string		str_tag
end type


release 10.5;
datawindow(units=0 timer_interval=0 color=1073741824 processing=0 HTMLDW=no print.printername="" print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.canusedefaultprinter=yes print.prompt=no print.buttons=no print.preview.buttons=no print.cliptext=no print.overrideprintjob=no print.collate=yes print.preview.outline=yes hidegrayline=no )
header(height=0 color="536870912" )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=60 color="536870912" )
table(column=(type=char(4) update=yes updatewhereclause=yes key=yes name=abreviatura dbname="xtformalegal.abreviatura" )
 column=(type=char(50) update=yes updatewhereclause=yes name=forma_legal dbname="xtformalegal.forma_legal" )
 column=(type=char(1) update=yes updatewhereclause=yes name=letra_documento dbname="xtformalegal.letra_documento" )
 column=(type=char(2) update=yes updatewhereclause=yes name=tipo_entidad_legal dbname="xtformalegal.tipo_entidad_legal" )
 retrieve="  SELECT xtformalegal.abreviatura,   
         xtformalegal.forma_legal,   
         xtformalegal.letra_documento,   
         xtformalegal.tipo_entidad_legal  
    FROM xtformalegal   
" update="xtformalegal" updatewhere=1 updatekeyinplace=no  sort="forma_legal A " )
column(band=detail id=2 alignment="0" tabsequence=32766 border="0" color="33554432" x="18" y="0" height="64" width="1166" format="[general]" html.valueishtml="0"  name=forma_legal visible="1" edit.limit=50 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" encodeselflinkargs="1" netscapelayers="0" pagingmethod=0 generatedddwframes="1" )
xhtmlgen() cssgen(sessionspecific="0" )
xmlgen(inline="0" )
xsltgen()
jsgen()
export.xml(headgroups="1" includewhitespace="0" metadatatype=0 savemetadata=0 )
import.xml()
export.pdf(method=0 distill.custompostscript="0" xslfop.print="0" )
export.xhtml()
 








































































































































forward
global type w_form_local from w_form_base
end type
type st_4 from statictext within w_form_local
end type
type dw_zonas from datawindow within w_form_local
end type
type dw_maquinas from datawindow within w_form_local
end type
type st_3 from statictext within w_form_local
end type
type st_2 from statictext within w_form_local
end type
type dw_huecos from datawindow within w_form_local
end type
end forward

global type w_form_local from w_form_base
integer x = 192
integer y = 436
integer width = 3767
integer height = 2216
st_4 st_4
dw_zonas dw_zonas
dw_maquinas dw_maquinas
st_3 st_3
st_2 st_2
dw_huecos dw_huecos
end type
global w_form_local w_form_local

type variables


end variables

forward prototypes
public function integer of_asigna_valores ()
public function integer of_abrirlocal ()
public function integer of_retrieve_huecos (long al_locid)
public function integer of_retrieve_maquinas (long al_locid)
public function integer of_retrieve_zonas (long al_locid)
public function boolean of_validacampos ()
end prototypes

public function integer of_asigna_valores ();//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			w_form_local
//
//	Función:			of_asigna_valores
//
//	Descripción	  : Asignamos los valores recibidos de CRM
//
//	Usada en:	   Mantenimiento de locales. Alta/Modificación
//
//	Argumentos:		(None)
//					  
//	Retorno:			0 OK													<br></br>
//						1 Error												<br></br>
//																				<br></br><div><b>
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios									</div><div>
//	--------	--------	---------------------------------		</div><div>
//	PBD 		05/10/07		Creación		</div>
//
///////////////////////////////////////////////////////////////////////////////
CONSTANT string					DIASCIERRE = "LMXJVSDWN"
string								ls_compar, ls_nulo
long									ll_ugeid, ll_nulo

dw_1.object.crmlocid[1]  	=  App.is_parametros[2]
dw_1.object.locnombre[1]  	=  App.is_parametros[3]
dw_1.object.tloid[1] 		=  long(App.is_parametros[4])
dw_1.object.locregime[1] 	=  App.is_parametros[5]
dw_1.object.viaid[1]  		=  long(App.is_parametros[6])
dw_1.object.locnomvia[1] 	=  App.is_parametros[7]
dw_1.object.locnumvia[1] 	=  App.is_parametros[8]
//PBD 28.04.2008
IF trim(App.is_parametros[8]) = "" THEN
	dw_1.object.locnumvia[1] = "S/N"
END IF
//Esto hay que verlo, porque los campos de dirección están duplicados
dw_1.object.pobsid[1] 		=  long(App.is_parametros[9])
dw_1.object.crmpobid[1] 	=  App.is_parametros[9] //PBD 19.12.2008
dw_1.object.crmcpoid[1] 	=  App.is_parametros[10]
dw_1.object.crmprvid[1] 	=  App.is_parametros[11]

dw_1.object.loctelef1[1] 	=  App.is_parametros[12]
dw_1.object.loctelef2[1] 	=  App.is_parametros[13]
dw_1.object.loctelefm[1] 	=  App.is_parametros[14]
dw_1.object.locteleff[1] 	=  App.is_parametros[15]
dw_1.object.locpagweb[1] 	=  App.is_parametros[16]
dw_1.object.loce_mail[1] 	=  App.is_parametros[17]
dw_1.object.locdiare1[1] 	=  App.is_parametros[18]

//PBD 28.01.2008

IF App.is_parametros[19] = "" THEN
	dw_1.object.locdiare2[1] = dw_1.object.locdiare1[1] 
ELSE
	dw_1.object.locdiare2[1] 	=  App.is_parametros[19]
END IF

IF App.is_parametros[20] = "" THEN
	dw_1.object.locdiare3[1] = dw_1.object.locdiare1[1] 
ELSE
	dw_1.object.locdiare3[1] 	=  App.is_parametros[20]
END IF

dw_1.object.locperiod[1] 	=  long(App.is_parametros[21])

IF pos(DIASCIERRE, Upper(App.is_parametros[22])) = 0 THEN
	dw_1.object.locdiacie[1] 	=  "W"						//Desconocido
ELSE
	dw_1.object.locdiacie[1] 	=  App.is_parametros[22]
END IF

dw_1.object.lochorlab[1] 	=  App.is_parametros[23]

//PBD 03.03.2008 No se permite modificar la UG por Siebel
IF ii_modo = II_MODIFICACION THEN
	ll_ugeid = dw_1.GetItemNumber(1,"atlocal_ugeid")
	IF ll_ugeid <> long(App.is_parametros[24]) THEN
		App.srvmsgbox.MessageBox("No se permite modificar la Unidad de Gestión del local",'',Information!)
		RETURN -1
	END IF
ELSE
	dw_1.object.atlocal_ugeid[1]	= long(App.is_parametros[24])	
END IF

App.il_ugeid						= long(App.is_parametros[24])
dw_1.object.locdiacom[1]	= long(App.is_parametros[25])

ls_compar = Upper(Trim(App.is_parametros[26]))
IF ls_compar = "Y" THEN ls_compar = "S"
dw_1.object.loccompar[1]	= ls_compar//02.11.2010 locales compartidos demanda 391

// FRG. 21/12/2011
if Trim(App.is_parametros[27]) = '' or IsNull(App.is_parametros[27]) then
	SetNull(ll_nulo)
	dw_1.Object.nodolocalid[1] = ll_nulo
else
	if NOT IsNumber(App.is_parametros[27]) then
		App.srvmsgbox.MessageBox("El Nodo Local no es numérico",'',Information!)
		RETURN -1
	else
		dw_1.Object.nodolocalid[1] = Long(App.is_parametros[27])
	end if
end if
dw_1.Object.atlocal_locnumayu[1] = App.is_parametros[28]
dw_1.Object.locgesmaq[1] = App.is_parametros[29]
if Trim(App.is_parametros[30]) = '' then
	SetNull(ls_nulo)
	dw_1.Object.locordesta[1] = ls_nulo
else
	dw_1.Object.locordesta[1] = App.is_parametros[30]
end if
dw_1.Object.locobsvia[1] = App.is_parametros[31]

dw_1.Object.locblocktramite[1] = 0
dw_1.Object.loceordserv[1] = 0

// TIPO LOCAL(TIPO SALA SIEBEL) Nos mandan descripcion, q ponemos. El ID se asocia al grabar, pq se buscara, y si no existe se crea.
dw_1.Object.tiposalaaadd[1] = App.is_parametros[35]

//VMQ 2016/06/02 Se añaden los dos campos nuevos (crmpuntoventaid - 36 y deydeid 200 )
// De momento, NO son obligatorios
If len(App.is_parametros[36]) > 0 then 
	// se mira la longitud de la cadena
	dw_1.Object.crmpuntoventaid[1] = Right(Trim(App.is_parametros[36]),36)
Else
	dw_1.Object.crmpuntoventaid[1] = ""
End If
If len(App.is_parametros[37]) > 0 then 
	dw_1.Object.deydeid[1] = Right(Trim(App.is_parametros[37]),200)
else
	dw_1.Object.deydeid[1] = ""
End if

string ls_datos
long ll_pos

//VMQ 2016/07/08 Se añaden los dos campos nuevos (longitud y latitud)
If len(App.is_parametros[38]) > 0 then 
	ll_pos = Pos(App.is_parametros[38], ".")
	ls_datos = Replace(App.is_parametros[38], ll_pos, 1, "," )
	dw_1.Object.loclongitud[1] = Dec(ls_datos)
Else
	dw_1.Object.loclongitud[1] = 0.0
End If
If len(App.is_parametros[39]) > 0 then 
	ll_pos 							= Pos(App.is_parametros[39], ".")
	ls_datos 						= Replace(App.is_parametros[39], ll_pos, 1, "," )
	dw_1.Object.loclatitud[1] 	= Dec(ls_datos) 
else
	dw_1.Object.loclatitud[1] = 0.0
End if
 
// Al modificar campos, se actualizan los campos de fecha y de usuario
dw_1.Object.codusucid[1] = App.srvusers.codi
dw_1.Object.feccrereg[1] = today()

Return 1

end function

public function integer of_abrirlocal ();//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			w_form_local
//
//	Función:			of_abrirlocal
//
//	Descripción	  : Cargamos en pantalla los datos del mantenimiento
//
//	Usada en:	   Mantenimiento de locales. Alta/Modificación
//
//	Argumentos:		(None)
//					  
//	Retorno:			0 OK													<br></br>
//						1 Error												<br></br>
//																				<br></br><div><b>
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios									</div><div>
//	--------	--------	---------------------------------		</div><div>
//	PBD 		05/10/07		Creación		</div>
//
///////////////////////////////////////////////////////////////////////////////
Integer 							li_valor, li_retorno
long								ll_locid
Blob    							lb_blobModelo

n_cst_do_crm_local 			luo_do_crm_local

SetPointer(Hourglass!)

IF Long(App.is_parametros[1]) = 0 THEN
	ii_modo = II_ALTA
ELSE
	ii_modo = II_MODIFICACION
	ll_locid = long(App.is_parametros[1])
END IF


/*
Si estamos en alta asignamos los valores SetItem* y luego obtenemos
los dddw

En modificación hacemos un retrieve de BBDD y luego los SetItem*
*/

IF of_validadatos() = FALSE THEN
	RETURN -1
END IF

IF of_validacampos() = FALSE THEN
	RETURN -1
END IF

App.inv_Connect.of_CreateInstanceDatos(luo_do_crm_local,&
		"n_cst_do_crm_local")



IF ii_modo = II_ALTA THEN
	li_retorno = of_asigna_valores()


	If li_retorno < 0 Then
		App.inv_Connect.of_DestroyInstance(luo_do_crm_local)
		App.of_parametro_retorno(This, App.ii_valor)
		RETURN -1
	END IF

	dw_1.GetFullState(lb_blobModelo) 
	li_valor = luo_do_crm_local.of_recuperadddw(lb_blobModelo)
	THIS.dw_1.SetFullState(lb_blobModelo) 
	
ELSEIF ii_modo = II_MODIFICACION THEN
	
	luo_do_crm_local.of_setDataobject(dw_1.dataobject)
	
	luo_do_crm_local.of_addwhere( "atlocal.locid = " + string(ll_locid))
	li_valor = luo_do_crm_local.of_retrieveblob(lb_blobModelo)
	
	dw_1.SetFullState(lb_blobModelo)
	
	IF li_valor >= 0 THEN
		li_retorno = of_asigna_valores()
		
		If li_retorno < 0 Then
			App.inv_Connect.of_DestroyInstance(luo_do_crm_local)
			App.of_parametro_retorno(This, App.ii_valor)
			RETURN -1
		END IF
		
		
	END IF

/*Recuperamos los datawindows secundarios en el mantenimiento*/
	
	of_retrieve_zonas(ll_locid)
	of_retrieve_maquinas(ll_locid)
	of_retrieve_huecos(ll_locid)
		
END IF

App.inv_Connect.of_DestroyInstance(luo_do_crm_local)

RETURN 0
end function

public function integer of_retrieve_huecos (long al_locid);n_cst_do_hueco					luo_hueco
blob								lb_blobZona


Long				ll_huecoID, ll_grpID
String				ls_grpNombre, ls_SocEO
powerobject		lpo_Source
Long				i, RowCount, ll_ret
n_cst_bo_terceros		lnv_Terceros	//PBD 19.07.06 antes era de instancia


SetPointer(HourGlass!)


App.inv_Connect.of_CreateInstanceDatos(luo_hueco,&
		"n_cst_do_hueco")

luo_hueco.of_SetDataobject("d_do_ubicacionhue_local")
luo_hueco.of_addwhere ("athueco.locid = " + string(al_locid))
luo_hueco.of_RetrieveBlob(lb_blobZona)

App.inv_Connect.of_DestroyInstance(luo_hueco)

THIS.dw_huecos.SetFullState(lb_blobZona) 

/*******************************************************/


RowCount = dw_huecos.RowCount()

App.inv_Connect.of_CreateInstanceAppl(lnv_Terceros,"n_cst_bo_terceros")		

For i = 1 To RowCount
	ll_huecoID = dw_huecos.GetItemNumber(i, "hueid")

	ll_ret = lnv_Terceros.of_GetGrupoElemento(ll_huecoID,"H",Today(),ll_grpID,ls_grpNombre)
	If ll_ret > 0 Then
		dw_huecos.SetItem(i, "grpnombre", ls_grpNombre)
	End If
	
Next

App.inv_Connect.of_DestroyInstanceAppl(lnv_Terceros)		

This.SetRedraw(True)
SetPointer(Arrow!)
RETURN 0
end function

public function integer of_retrieve_maquinas (long al_locid);n_cst_do_ubicacionmaq			luo_maqloc
blob									lb_blobZona

string								ls_filter
long									ll_ret, rowcount, i
long									ll_huecoid, ll_maqid, ll_grpid
string								ls_grpnombre, ls_soceo

n_cst_bo_terceros					lnv_Terceros
n_cst_bo_maquinas					lnv_Maquinas

SetPointer(HourGlass!)


App.inv_Connect.of_CreateInstanceDatos(luo_maqloc,&
		"n_cst_do_ubicacionmaq")

luo_maqloc.of_SetDataobject("d_do_ubicacionmaq_local")
luo_maqloc.of_addwhere ("htubicacionmaq.locid = " + string(al_locid))
luo_maqloc.of_RetrieveBlob(lb_blobZona)

App.inv_Connect.of_DestroyInstance(luo_maqloc)

THIS.dw_maquinas.SetFullState(lb_blobZona) 

/*************************************************/
// Una vez finaliza el Retrieve, filtramos las rows que 
// tengan fecha de salida
ls_Filter = "isNull(fechasalida)"
ll_ret = dw_maquinas.SetFilter(ls_Filter)
ll_ret = dw_maquinas.Filter()

// ManelP. 30/09/2003
// Para los huecos que quedan busco a que grupo de terceros
// pertenecen

App.inv_Connect.of_CreateInstanceAppl(lnv_Terceros,"n_cst_bo_terceros")	
App.inv_Connect.of_CreateInstanceAppl(lnv_Maquinas,"n_cst_bo_maquinas")	

RowCount = dw_maquinas.RowCount()
For i = 1 To RowCount
	ll_huecoID = dw_maquinas.GetItemNumber(i, "hueid")
	ll_maqID   = dw_maquinas.GetItemNumber(i, "htubicacionmaq_maqid")
	
//	ll_ret = inv_Terceros.of_GetGrupoElemento(ll_huecoID,"H",Today(),ll_grpID,ls_grpNombre)
//	If ll_ret > 0 Then
//		dw_maquinas.SetItem(i, "grpnombre", ls_grpNombre)
//	End If
	ll_ret = lnv_Terceros.of_GetGrupoElemento(ll_maqID,"M",Today(),ll_grpID,ls_grpNombre)
	If ll_ret > 0 Then
		dw_maquinas.SetItem(i, "grpnombre", ls_grpNombre)
	End If
	
	ls_SocEO = lnv_MAquinas.of_getSocEOMaquina(ll_maqID, "DO")
	If LenA(ls_SocEO) >= 0 Then
		dw_maquinas.SetItem(i, "soc_eo", ls_socEO)
	End If
Next

App.inv_Connect.of_DestroyInstance(lnv_Maquinas)
App.inv_Connect.of_DestroyInstanceAppl(lnv_Terceros)	



RETURN 0
end function

public function integer of_retrieve_zonas (long al_locid);n_cst_do_zonalocal			luo_zonalocal
blob								lb_blobZona


SetPointer(HourGlass!)

App.inv_Connect.of_CreateInstanceDatos(luo_zonalocal,&
		"n_cst_do_zonalocal")

luo_zonalocal.of_SetDataobject("d_do_local_zonas")
luo_zonalocal.of_addwhere ("gtzona_local.locid = " + string(al_locid))
luo_zonalocal.of_RetrieveBlob(lb_blobZona)

App.inv_Connect.of_DestroyInstance(luo_zonalocal)

THIS.dw_zonas.SetFullState(lb_blobZona) 


RETURN 0
end function

public function boolean of_validacampos ();//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			w_form_local
//
//	Función:			of_validacampos
//
//	Descripción	  : Validamos que todos los parámetros tienen valores coherentes
//
//	Usada en:	   Apertura del mantenimiento a crear/modificar
//
//	Argumentos:		(None)
//					  
//	Retorno:																	<div>
//						TRUE		Si son correctos						</div><div>
//						FALSE		Si se produce algún error			</div><br></br>
//
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios									</div><div>
//	--------	--------	---------------------------------		</div><div>
//	PBD 		05/10/07		Creación		</div>
//
///////////////////////////////////////////////////////////////////////////////
boolean						lb_retorno = TRUE
CONSTANT 	string			DIAS = "LMXJVSD"
CONSTANT string			DIASCIERRE = "LMXJVSDWN"

/*is_campos = { &
"ID Local Siccod", "ID Local Siccod", "Nombre del Local", + &
"Tipo de Local","Regimen de Propiedad","Tipo de Via", + &
"Domicilio","Número","Localidad",+&
"Código Postal","Provincia","Teléfono 1",+&
"Teléfono 2","Móvil","Fax",+&
"URL","eMail","Día de recaudación 1",+&
"Día de recaudación 2","Día de recaudación 3","Periodo",+&
"Día de Cierre","lochorlab","Unidad de Gestión",&
"Día de visita comercial"&
}*/

//Tipo de Local
IF NOT of_isnumber(App.is_parametros[4]) THEN
	App.srvmsgbox.MessageBox("Tipo de Local no válido",'',Information!)
	RETURN FALSE
END IF

//Tipo de Via
IF NOT of_isnumber(App.is_parametros[6]) THEN
	App.srvmsgbox.MessageBox("Tipo de Via no válido",'',Information!)
	RETURN FALSE
END IF

//Localidad
IF NOT of_isnumber(App.is_parametros[9]) THEN
	App.srvmsgbox.MessageBox("Localidad no válida",'',Information!)
	RETURN FALSE
END IF

//Provincia
IF NOT of_isnumber(App.is_parametros[11]) THEN
	App.srvmsgbox.MessageBox("Provincia no válida",'',Information!)
	RETURN FALSE
END IF

//Periodo
IF NOT of_isnumber(App.is_parametros[21]) THEN
	App.srvmsgbox.MessageBox("Periodo no válido",'',Information!)
	RETURN FALSE
END IF

/*************************************************/
//28.01.2008
//Validamos que el día de recaudación 1 esté relleno y sea coherente
//y que los días 2,3 y de cierre, si están rellenos, sea con valores coherentes

//Día de recaudación 1
IF App.is_parametros[18] = "" OR pos(DIAS, Upper(App.is_parametros[18])) = 0 THEN
	App.srvmsgbox.MessageBox("Día de recaudación no válido",'',Information!)
	RETURN FALSE
END IF

//Día de recaudación 2
IF  App.is_parametros[19] <>"" AND pos(DIAS, Upper(App.is_parametros[19])) = 0 THEN
	App.srvmsgbox.MessageBox("Día de recaudación 2 no válido",'',Information!)
	RETURN FALSE
END IF

//Día de recaudación 3
IF App.is_parametros[20] <>"" AND pos(DIAS, Upper(App.is_parametros[20])) = 0 THEN
	App.srvmsgbox.MessageBox("Día de recaudación 3 no válido",'',Information!)
	RETURN FALSE
END IF

//Día de cierre
IF App.is_parametros[22] <>"" AND pos(DIASCIERRE, Upper(App.is_parametros[22])) = 0 THEN
	App.srvmsgbox.MessageBox("Día de cierre no válido",'',Information!)
	RETURN FALSE
END IF

//Unidad de gestión
IF NOT of_isnumber(App.is_parametros[24]) THEN
	App.srvmsgbox.MessageBox("Unidad de gestión no válida",'',Information!)
	RETURN FALSE
END IF

//Día de visita comercial. Es un número entre 1 y 21 (día hábil)
IF App.is_parametros[25]<>'' AND &
		(Long(App.is_parametros[25]) <= 0 OR Long(App.is_parametros[25]) > 21 )	THEN
	App.srvmsgbox.MessageBox("Día de visita comercial no válido",'Debe ser un número entre 1 y 21',Information!)
	RETURN FALSE
END IF

//02.11.2010 Local Compartido es Y ó N
IF Upper(Trim(App.is_parametros[26]))<>'Y' AND Upper(Trim(App.is_parametros[26]))<>'N' THEN
	App.srvmsgbox.MessageBox("Local compartido no válido",'El valor de "local compartido" debe ser Sí(Y) ó No(N)',Information!)
	RETURN FALSE
END IF

RETURN lb_retorno
end function

event m_accok;//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			w_form_local
//
//	Evento:			m_accok
//
//	Descripción	  : Guardamos los datos del mantenimiento
//
//	Usada en:	   Mantenimiento de locales. Alta/Modificación
//
//	Argumentos:		(None)
//					  
//	Retorno:			(None)												
//																				<br></br><div><b>
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios									</div><div>
//	--------	--------	---------------------------------		</div><div>
//	PBD 		05/10/07		Creación		</div>
//
///////////////////////////////////////////////////////////////////////////////
blob											lb_blobModelo
long											ll_locid, ll_ret
string										ls_error, ls_info	

str_interlocutor_eu							lstr_parametros
m_main									lm_menu
n_cst_do_crm_local						lnv_do_crm_local, lnv_do_local

SetPointer(HourGlass!)

dw_1.AcceptText()

/**************PRUEBA*********************************/
//	lstr_parametros.str_ugeid = App.il_ugeid
//	lstr_parametros.str_intid = 1
//	lstr_parametros.str_modo =	 II_ALTA
//	lstr_parametros.str_tag = "eu_local_r1"
//	
//		OpenWithParm (w_response_htcambccostloc, lstr_parametros)
//	
//	RETURN
/**************PRUEBA*********************************/


IF dw_1.ModifiedCount() + dw_1.DeletedCount() = 0 THEN
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,"No se ha realizado ningún cambio")
	RETURN
END IF

App.inv_Connect.of_CreateInstanceDatos(lnv_do_crm_local,"n_cst_do_crm_local")

dw_1.GetFullState(lb_blobModelo) 
ll_locid = lnv_do_crm_local.of_updateblob(lb_blobModelo)

dw_1.SetFullState(lb_blobModelo) 

IF ll_locid < 0 THEN
	ls_error = lnv_do_crm_local.of_geterrortexto()
	ls_info  = lnv_do_crm_local.of_geterrorinfo()
END IF

App.inv_Connect.of_DestroyInstance(lnv_do_crm_local)

IF ll_locid > 0 THEN
	
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  'Información almacenada satisfactoriamente')
	
	dw_1.ResetUpdate()
	
//	IF ii_modo = II_ALTA THEN 
		lm_menu = THIS.MenuID
		lm_menu.m_03.m_0301.Enabled = FALSE
//	END IF
	
	App.il_locid = ll_locid	//valor que se retornará a CRM
		
	lstr_parametros.str_ugeid = App.il_ugeid
	lstr_parametros.str_intid = ll_locid
	lstr_parametros.str_modo =	 ii_modo
	lstr_parametros.str_tag = "eu_local_r1"
	
	
	IF ii_modo = II_ALTA THEN	//25.02.2008 Sólo se abre en caso de alta
		//Unidades de Gestión
		OpenWithParm (w_response_htcambugeloc, lstr_parametros)
	END IF
	
	lstr_parametros.str_tag = "eu_local_r2"
	
	IF ii_modo = II_ALTA THEN	//25.02.2008 Sólo se abre en caso de alta
		//Centros de coste
		OpenWithParm (w_response_htcambccostloc, lstr_parametros)
	END IF
	
	lstr_parametros.str_tag = "eu_local_r3"
	
	IF ii_modo = II_ALTA THEN
		OpenWithParm (w_response_local_nuecons, lstr_parametros)
		
	// Comprobamos si está a null el campo (típico en alta que no es nueva 
	// construcción y en ese caso le ponemos al campo una "N"
	
	App.inv_Connect.of_CreateInstanceDatos(lnv_do_local,"n_cst_do_local")
	ll_ret = lnv_do_local.of_setlocnuecons(ll_locid)
	App.inv_Connect.of_DestroyInstance(lnv_do_crm_local)
	
	END IF
		
	//25.01.2008 Al terminar la grabación, cerramos la ventana
	THIS.Event ue_exitapp()
	RETURN
	
ELSE
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  ls_error, ls_info)
	App.il_locid = -1
	
END IF
end event

event ue_postopen;integer		li_retorno

li_retorno = of_abrirlocal()

IF li_retorno < 0 THEN
	crm_siccod.il_codretorno = -1
	RETURN FALSE
END IF

RETURN TRUE
end event

on w_form_local.create
int iCurrent
call super::create
this.st_4=create st_4
this.dw_zonas=create dw_zonas
this.dw_maquinas=create dw_maquinas
this.st_3=create st_3
this.st_2=create st_2
this.dw_huecos=create dw_huecos
iCurrent=UpperBound(this.Control)
this.Control[iCurrent+1]=this.st_4
this.Control[iCurrent+2]=this.dw_zonas
this.Control[iCurrent+3]=this.dw_maquinas
this.Control[iCurrent+4]=this.st_3
this.Control[iCurrent+5]=this.st_2
this.Control[iCurrent+6]=this.dw_huecos
end on

on w_form_local.destroy
call super::destroy
if IsValid(MenuID) then destroy(MenuID)
destroy(this.st_4)
destroy(this.dw_zonas)
destroy(this.dw_maquinas)
destroy(this.st_3)
destroy(this.st_2)
destroy(this.dw_huecos)
end on

event ue_preopen;call super::ue_preopen;
is_campos = { &
/* 1 */"ID Local Siccod", &
/* 2 */"ID Local Siccod", &
/* 3 */"Nombre del Local", + &
/* 4 */"Tipo de Local", &
/* 5 */"Regimen de Propiedad", &
/* 6 */"Tipo de Via", + &
/* 7 */"Domicilio", &
/* 8 */"Número", &
/* 9 */"Localidad",+&
/* 10 */"Código Postal" ,&
/* 11 */"Provincia", &
/* 12 */"Teléfono 1", &
/* 13 */"Teléfono 2", &
/* 14 */"Móvil", &
/* 15 */"Fax", &
/* 16 */"URL", &
/* 17 */"eMail", &
/* 18 */"Día de recaudación 1", &
/* 19 */"Día de recaudación 2", &
/* 20 */"Día de recaudación 3", &
/* 21 */"Periodo", &
/* 22 */"Día de Cierre", &
/* 23 */"Hora de visita", &
/* 24 */"Unidad de Gestión",&
/* 25 */"Dia de visita comercial",&
/* 26 */"Local compartido",&
/* 27 */"Nodo BGT Local",&
/* 28 */"Nº Ayuntamiento",&
/* 29 */"GESMAQ",&
/* 30 */"Orden Estadistica",&
/* 31 */"Observaciones Vía",&
/* 32 */"Fecha Cambio UG",&
/* 33 */"Local Nueva Construccion",&
/* 34 */"Fecha Construccion",&
/* 35 */"Tipo Sala AADD",&
/* 36 */"ID Sala PdV",&
/* 37 */"ID Deyde",&
/* 38 */"Longitud GPS",&
/* 39 */"Latitud GPS"&
}
// FRG Nuevos por integracioncon desde 36 CRM
//2|0|1-2YMBHQ|PRUEBA 0706|3|A|7|Avd. Bruselas 26||32016|28490|28|654321654|963258741|||||D|||7|W|00000000|12||N|||||||N|||bfd2e04f-df02-e611-8104-5065f38a6ae2|b21926b7-9707-e611-80f5-5065f38a3b12|||MARIAJOSE.MARTIN
// 36 ID Sala PdV
// 37 ID Deyde
// Longitud GPS
// Latitud GPS


ib_canbenull[8] = TRUE
ib_canbenull[12] = TRUE
ib_canbenull[13] = TRUE
ib_canbenull[14] = TRUE
ib_canbenull[15] = TRUE
ib_canbenull[16] = TRUE
ib_canbenull[17] = TRUE
ib_canbenull[19] = TRUE
ib_canbenull[20] = TRUE
//PBD 28.01.2008
ib_canbenull[22] = TRUE
ib_canbenull[23] = TRUE
//PBD 05.01.2008
ib_canbenull[25] = TRUE

// FRG 
ib_canbenull[26] = TRUE 
ib_canbenull[27] = TRUE // Nodo BGT
ib_canbenull[28] = TRUE // Nº Ayuntamiento
ib_canbenull[29] = TRUE // GESMAQ
ib_canbenull[30] = TRUE // O.E.
ib_canbenull[31] = TRUE // Obs. Via
ib_canbenull[32] = TRUE // F.C.UG
ib_canbenull[33] = TRUE // Local NC.
ib_canbenull[34] = TRUE // Fecha NC.
ib_canbenull[35] = TRUE // Tipo de Sala
ib_canbenull[36] = TRUE // ID PdV
ib_canbenull[37] = TRUE // ID Deyde
ib_canbenull[38] = TRUE // Longitud
ib_canbenull[39] = TRUE // Latitud


RETURN TRUE
end event

type dw_1 from w_form_base`dw_1 within w_form_local
integer x = 169
integer width = 3150
integer height = 1276
string dataobject = "d_do_crm_mntlocal"
end type

event dw_1::editchanged;call super::editchanged;long			ll_length, i
string			ls_char
boolean		lb_changed = FALSE


IF row > 0 THEN
	IF dwo.name = 'locordesta' THEN
		ll_length = len(data)
		
		FOR i = ll_length TO 1 STEP -1
			ls_char = Mid(data,i, 1)
			
			IF IsNumber(ls_char) OR Upper(ls_char) = lower( ls_char) THEN
				data = left(data, i -1) + mid(data, i +1)
				lb_changed = TRUE
			ELSEIF pos('ÁÉÍÓÚ', Upper(ls_char)) > 0 THEN
				data = left(data, i -1) + mid(data, i +1)
				lb_changed = TRUE
			ELSEIF Upper(ls_char) <> ls_char THEN
				data = Upper(data)
				lb_changed = TRUE
			END IF
		NEXT
		
		IF lb_changed = TRUE THEN
			THIS.SetText(data)
			This.SelectText ( LEN(data) + 1, 0 ) 
		END IF
	END IF
END IF
end event

type st_4 from statictext within w_form_local
integer x = 37
integer y = 1708
integer width = 3621
integer height = 104
boolean bringtotop = true
integer textsize = -10
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
long backcolor = 15780518
string text = " Zonas"
boolean border = true
boolean focusrectangle = false
end type

type dw_zonas from datawindow within w_form_local
integer x = 37
integer y = 1808
integer width = 3621
integer height = 304
integer taborder = 40
boolean bringtotop = true
string title = "none"
string dataobject = "d_do_local_zonas"
boolean livescroll = true
end type

type dw_maquinas from datawindow within w_form_local
integer x = 37
integer y = 1396
integer width = 2624
integer height = 316
integer taborder = 30
boolean bringtotop = true
string title = "none"
string dataobject = "d_do_ubicacionmaq_local"
boolean livescroll = true
end type

type st_3 from statictext within w_form_local
integer x = 37
integer y = 1296
integer width = 2624
integer height = 104
boolean bringtotop = true
integer textsize = -10
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
long backcolor = 15780518
string text = " Máquinas Activas"
boolean border = true
boolean focusrectangle = false
end type

type st_2 from statictext within w_form_local
boolean visible = false
integer x = 37
integer y = 1296
integer width = 1001
integer height = 104
integer textsize = -10
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
long backcolor = 15780518
string text = " Huecos"
boolean border = true
boolean focusrectangle = false
end type

type dw_huecos from datawindow within w_form_local
boolean visible = false
integer x = 37
integer y = 1392
integer width = 1001
integer height = 316
integer taborder = 20
string title = "Huecos"
string dataobject = "d_do_ubicacionhue_local"
boolean livescroll = true
end type


release 8;
datawindow(units=0 timer_interval=0 color=1073741824 processing=1 HTMLDW=no print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no grid.lines=0 selected.mouse=no )
header(height=116 color="67108864" )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=76 color="536870912" )
table(column=(type=long update=yes updatewhereclause=yes name=htubicacionmaq_cumid dbname="htubicacionmaq.cumid" )
 column=(type=long updatewhereclause=yes name=locid dbname="htubicacionmaq.locid" )
 column=(type=long updatewhereclause=yes name=hueid dbname="htubicacionmaq.hueid" )
 column=(type=long updatewhereclause=yes name=htubicacionmaq_maqid dbname="htubicacionmaq.maqid" )
 column=(type=datetime updatewhereclause=yes name=htubicacionmaq_cumfmovfi dbname="htubicacionmaq.cumfmovfi" )
 column=(type=long updatewhereclause=yes name=hueemp dbname="athueco.hueemp" )
 column=(type=date updatewhereclause=yes name=hvauthuecoact_huafecfin dbname="htubicacionmaq.huafecfin" )
 column=(type=char(10) updatewhereclause=yes name=atmaquina_maqsersap dbname="atmaquina.maqsersap" )
 column=(type=date updatewhereclause=yes name=atmaquina_maqfecfab dbname="atmaquina.maqfecfab" )
 column=(type=char(35) updatewhereclause=yes name=atmodelo_tmodescri dbname="atmodelo.tmodescri" )
 column=(type=char(35) updatewhereclause=yes name=xttipomaquina_tmadescri dbname="xttipomaquina.tmadescri" )
 column=(type=datetime updatewhereclause=yes name=fechasalida dbname="fechasalida" )
 column=(type=long updatewhereclause=yes name=orsid dbname="htubicacionmaq.orsid" )
 column=(type=char(36) updatewhereclause=yes name=grpnombre dbname="htubicacionmaq.grpnombre" )
 column=(type=char(36) updatewhereclause=yes name=soc_eo dbname="htubicacionmaq.soc_eo" )
 column=(type=char(10) updatewhereclause=yes name=atmaquina_maqnserie dbname="atmaquina.maqnserie" )
 retrieve="  SELECT distinct htubicacionmaq.cumid,   
         htubicacionmaq.locid,   
         htubicacionmaq.hueid,   
         htubicacionmaq.maqid,   
         htubicacionmaq.cumfmovfi, 
         athueco.hueemp,   
         hvauthuecoact.huafecfin,   
			atmaquina.maqsersap,
			atmaquina.maqfecfab,
			atmodelo.tmodescri,
			xttipomaquina.tmadescri,
		   ( select min(cumfmovfi) from htubicacionmaq as d 
				where d.maqid = htubicacionmaq.maqid and 
				 	   d.cumfmovfi > htubicacionmaq.cumfmovfi and d.cummovrea ='S') as fechasalida,
			hvpdteordenser.orsid as orsid,
			~"                                    ~" as grpnombre,
			~"                                    ~" as soc_eo,
			atmaquina.maqnserie
    FROM htubicacionmaq,
		    OUTER (hvauthuecoact),
			OUTER (hvpdteordenser),
			atmaquina,
			atmodelo,
			athueco,
			xttipomaquina
   WHERE ( hvauthuecoact.hueid  = htubicacionmaq.hueid )
     AND ( atmaquina.maqid      = htubicacionmaq.maqid )
     AND ( atmodelo.tmoid       = atmaquina.tmoid)
	  AND ( xttipomaquina.tmaid  = atmodelo.tmaid )
	  AND ( athueco.hueid        = htubicacionmaq.hueid ) 
	  AND ( hvpdteordenser.maqid = htubicacionmaq.maqid ) 


"  sort="hueemp A " )
text(band=header alignment="0" text="
Modelo" border="4" color="0" x="325" y="12" height="100" width="530" html.valueishtml="0"  name=atmodelo_tmodescri_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header alignment="0" text="Fecha
Entrada" border="4" color="0" x="1655" y="12" height="100" width="206" html.valueishtml="0"  name=htubicacionmaq_cumfmovfi_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header alignment="0" text="
Año/Serie" border="4" color="33554432" x="864" y="12" height="100" width="283" html.valueishtml="0"  name=c_datosmaq_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header alignment="0" text="Sociedad-E.O.
Documental Máq." border="4" color="0" x="1157" y="12" height="100" width="489" html.valueishtml="0"  name=t_1 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header alignment="0" text="O.S.
Pdte." border="4" color="0" x="2377" y="12" height="100" width="142" html.valueishtml="0"  name=hvpdteordenser_orsid_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header alignment="0" text="Tipo
Máq." border="4" color="0" x="192" y="12" height="100" width="123" html.valueishtml="0"  name=xttipomaquina_tmadescri_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header alignment="0" text="Nº Hue" border="4" color="33554432" x="87" y="12" height="100" width="96" html.valueishtml="0"  name=hueemp_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=header alignment="0" text="Grupo Máquinas
Tercero" border="4" color="0" x="1870" y="8" height="104" width="498" html.valueishtml="0"  name=grpnombre_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
compute(band=detail alignment="0" expression="bitmap( If( isnull( orsid ) or orsid =0,'','Imatges\borrado.bmp') ) "border="0" color="33554432" x="9" y="4" height="60" width="69" format="[GENERAL]" html.valueishtml="0"  name=compute_1 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=10 alignment="0" tabsequence=32766 border="0" color="33554432" x="325" y="4" height="60" width="530" format="[general]" html.valueishtml="0"  name=atmodelo_tmodescri visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=5 alignment="0" tabsequence=32766 border="0" color="33554432" x="1655" y="4" height="60" width="206" format="dd/mm/yy" html.valueishtml="0"  name=htubicacionmaq_cumfmovfi visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
compute(band=detail alignment="0" expression="atmaquina_maqnserie + '/' +  atmaquina_maqsersap "border="0" color="0" x="864" y="4" height="60" width="283" format="[GENERAL]" html.valueishtml="0"  name=c_datosmaq visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="16777215" )
compute(band=detail alignment="0" expression=" soc_eo "border="0" color="33554432" x="1157" y="4" height="60" width="489" format="[GENERAL]" html.valueishtml="0"  name=compute_2 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=11 alignment="0" tabsequence=32766 border="0" color="33554432" x="192" y="4" height="60" width="123" format="[general]" html.valueishtml="0"  name=xttipomaquina_tmadescri visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=6 alignment="0" tabsequence=32766 border="0" color="33554432" x="87" y="4" height="60" width="96" format="[general]" html.valueishtml="0"  name=hueemp visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=13 alignment="2" tabsequence=32766 border="0" color="33554432" x="2377" y="4" height="60" width="142" format="[general]" html.valueishtml="0"  name=orsid visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=14 alignment="0" tabsequence=32766 border="0" color="33554432" x="1870" y="4" height="60" width="498" format="[general]" html.valueishtml="0"  name=grpnombre visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" netscapelayers="0" )

release 8;
datawindow(units=0 timer_interval=0 color=1073741824 processing=1 HTMLDW=no print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no grid.lines=0 selected.mouse=no )
header(height=124 color="67108864" )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=76 color="536870912" )
table(column=(type=long updatewhereclause=yes name=locid dbname="athueco.locid" )
 column=(type=long updatewhereclause=yes name=hueid dbname="athueco.hueid" )
 column=(type=long updatewhereclause=yes name=hueemp dbname="athueco.hueemp" )
 column=(type=date updatewhereclause=yes name=huafecfin dbname="athueco.huafecfin" )
 column=(type=char(36) updatewhereclause=yes name=grpnombre dbname="athueco.grpnombre" )
 retrieve="  SELECT distinct 
athueco.locid,
 athueco.hueid,
         athueco.hueemp,   
         hvauthuecoact.huafecfin,
			~"                                    ~" as grpnombre
    FROM athueco,
		    OUTER (hvauthuecoact)
   WHERE ( hvauthuecoact.hueid  = athueco.hueid )
"  sort="hueemp A " )
text(band=header alignment="0" text="Nº 
Hue" border="4" color="33554432" x="9" y="12" height="100" width="96" html.valueishtml="0"  name=hueemp_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header alignment="0" text="Fecha Fin Dcho Ofi" border="4" color="0" x="114" y="12" height="100" width="270" html.valueishtml="0"  name=huafecfin_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header alignment="0" text="Grupo Hueco Tercero" border="4" color="0" x="393" y="12" height="100" width="521" html.valueishtml="0"  name=grpnombre_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=3 alignment="0" tabsequence=32766 border="0" color="33554432" x="9" y="4" height="60" width="96" format="[general]" html.valueishtml="0"  name=hueemp visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=4 alignment="0" tabsequence=32766 border="0" color="33554432" x="114" y="4" height="60" width="270" format="[general]" html.valueishtml="0"  name=huafecfin visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=5 alignment="0" tabsequence=32766 border="0" color="33554432" x="393" y="4" height="60" width="521" format="[general]" html.valueishtml="0"  name=grpnombre visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" netscapelayers="0" )

release 8;
datawindow(units=0 timer_interval=0 color=16777215 processing=1 HTMLDW=no print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no grid.lines=0 selected.mouse=no )
header(height=80 color="80269524" )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=72 color="536870912" )
table(column=(type=long update=yes updatewhereclause=yes name=rzlid dbname="gtzona_local.rzlid" )
 column=(type=long updatewhereclause=yes name=gtzona_local_zonid dbname="gtzona_local.zonid" )
 column=(type=long updatewhereclause=yes name=locid dbname="gtzona_local.locid" )
 column=(type=date updatewhereclause=yes name=gtzona_local_rzlfecent dbname="gtzona_local.rzlfecent" )
 column=(type=date updatewhereclause=yes name=gtzona_local_rzlfecsal dbname="gtzona_local.rzlfecsal" )
 column=(type=datetime updatewhereclause=yes name=gtzona_local_feccrereg dbname="gtzona_local.feccrereg" )
 column=(type=char(10) updatewhereclause=yes name=gtzona_local_codusucid dbname="gtzona_local.codusucid" )
 column=(type=long updatewhereclause=yes name=atzona_ugeid dbname="atzona.ugeid" )
 column=(type=char(35) updatewhereclause=yes name=atzona_zondescri dbname="atzona.zondescri" )
 column=(type=long updatewhereclause=yes name=htorganigestion_intid dbname="htorganigestion.intid" )
 column=(type=date updatewhereclause=yes name=htorganigestion_orgfecini dbname="htorganigestion.orgfecini" )
 column=(type=date updatewhereclause=yes name=htorganigestion_orgfecfin dbname="htorganigestion.orgfecfin" )
 column=(type=char(30) updatewhereclause=yes name=comercial dbname="gtzona_local.comercial" )
 retrieve="  SELECT gtzona_local.rzlid,   
         gtzona_local.zonid,   
         gtzona_local.locid,   
         gtzona_local.rzlfecent,   
         gtzona_local.rzlfecsal,   
         gtzona_local.feccrereg,   
         gtzona_local.codusucid,   
         atzona.ugeid,   
         atzona.zondescri,   
         htorganigestion.intid,   
         htorganigestion.orgfecini,   
         htorganigestion.orgfecfin,
			~"                              ~" as comercial
    FROM gtzona_local,   
         atzona LEFT OUTER JOIN gtzona_nodo ON gtzona_nodo.zonid = atzona.zonid,   
         htorganigestion
   WHERE ( atzona.zonid     				 = gtzona_local.zonid ) and  
         ( htorganigestion.orgid 		 = gtzona_nodo.orgid )  and
			( ( gtzona_local.rzlfecent    <= TODAY) AND ( TODAY <= gtzona_local.rzlfecsal    OR gtzona_local.rzlfecsal    IS NULL)) AND
			( ( gtzona_nodo.rzlfecent     <= TODAY) AND ( TODAY <= gtzona_nodo.rzlfecsal     OR gtzona_nodo.rzlfecsal     IS NULL)) AND
			( ( htorganigestion.orgfecini <= TODAY) AND ( TODAY <= htorganigestion.orgfecfin OR htorganigestion.orgfecfin IS NULL)) 
"  sort="atzona_zondescri A " )
text(band=header alignment="0" text="Fec. Entrada" border="4" color="0" x="434" y="8" height="60" width="306" html.valueishtml="0"  name=gtzona_local_rzlfecent_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=header alignment="0" text="U.Gestión" border="4" color="0" x="750" y="8" height="60" width="690" html.valueishtml="0"  name=atzona_ugeid_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=header alignment="0" text="Zona" border="4" color="0" x="9" y="8" height="60" width="416" html.valueishtml="0"  name=atzona_zondescri_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=header alignment="0" text="Zona Asignada A" border="4" color="0" x="1449" y="8" height="60" width="910" html.valueishtml="0"  name=htorganigestion_intid_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=header alignment="0" text="Fec. Asig." border="4" color="0" x="2368" y="8" height="60" width="288" html.valueishtml="0"  name=htorganigestion_orgfecini_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header alignment="0" text="Comercial" border="4" color="0" x="2665" y="8" height="60" width="846" html.valueishtml="0"  name=comercial_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=9 alignment="0" tabsequence=32766 border="0" color="0" x="9" y="4" height="60" width="416" format="[general]" html.valueishtml="0"  name=atzona_zondescri visible="1" edit.limit=35 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=4 alignment="0" tabsequence=32766 border="0" color="0" x="434" y="4" height="60" width="306" format="dd/mm/yyyy" html.valueishtml="0"  name=gtzona_local_rzlfecent visible="1" edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=8 alignment="0" tabsequence=32766 border="0" color="0" x="750" y="4" height="60" width="690" format="[general]" html.valueishtml="0"  name=atzona_ugeid visible="1" dddw.name=d_dddw_unidadgestion dddw.displaycolumn=ugedescri dddw.datacolumn=ugeid dddw.percentwidth=0 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=no dddw.case=any dddw.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=10 alignment="0" tabsequence=32766 border="0" color="0" x="1449" y="4" height="60" width="910" format="[general]" html.valueishtml="0"  name=htorganigestion_intid visible="1" dddw.name=d_dddw_interlocutor dddw.displaycolumn=intnombre dddw.datacolumn=intid dddw.percentwidth=0 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=no dddw.case=any dddw.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=11 alignment="0" tabsequence=32766 border="0" color="0" x="2368" y="4" height="60" width="288" format="dd/mm/yyyy" html.valueishtml="0"  name=htorganigestion_orgfecini visible="1" edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=13 alignment="0" tabsequence=32766 border="0" color="0" x="2665" y="4" height="60" width="846" format="[general]" html.valueishtml="0"  name=comercial visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" netscapelayers="0" )

forward
global type w_response_htcambugeloc from w_response_base
end type
end forward

global type w_response_htcambugeloc from w_response_base
integer width = 2203
integer height = 1144
end type
global w_response_htcambugeloc w_response_htcambugeloc

type variables
long		il_locid
date		idt_fechacambio


end variables

forward prototypes
public function integer of_botones (integer ai_modo)
public function integer of_asigna_ug_crm ()
public function integer of_setdefaultvalues ()
end prototypes

public function integer of_botones (integer ai_modo);/*Esta función habilita y deshabilita botones
en función del estado.
Se centraliza aquí para poder aplicar permisos
de acceso.*/
pb_borrar.visible = FALSE 
pb_alta.visible = FALSE
CHOOSE CASE ai_modo
	CASE II_ACCESO_ALTA
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False	/*porque debe guardar
												 alguna antes de salir */
		pb_modificar.enabled = False
		pb_alta.enabled = False
		pb_borrar.enabled = False
		pb_salir.enabled = FALSE	//NUNCA permitimos salir
	
	CASE II_ACCESO_MODIFICACION
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = TRUE
		pb_alta.enabled = TRUE
		pb_borrar.enabled = TRUE
		pb_salir.enabled = TRUE	//Siempre permitimos salir
		
	CASE II_INSERTROW
		pb_aceptar.enabled = False
		pb_cancelar.enabled = True
		pb_modificar.enabled = False
		pb_alta.enabled = False
		pb_borrar.enabled = True
		pb_salir.enabled = TRUE	//Siempre permitimos salir
		
	CASE II_MODIFICAR
		pb_aceptar.enabled = True
		pb_cancelar.enabled = FALSE //Sólo podrá guardar la fecha. Sin vuelta atrás
		pb_modificar.enabled = False
		pb_alta.enabled = False
		pb_borrar.enabled = False
		pb_salir.enabled = FALSE	//Nunca permitimos salir
		
	CASE II_PREPARED_BORRABLE
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = True
//		pb_alta.enabled = True		Sólo podrá haber una UG
		pb_borrar.enabled = True
		pb_salir.enabled = True
	
	CASE II_PREPARED_NOBORRABLE
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = True
//		pb_alta.enabled = True		Sólo podrá haber una UG
		pb_borrar.enabled = True
		pb_salir.enabled = True
		
	CASE II_TRASBORRAR
		pb_aceptar.enabled = True
		pb_cancelar.enabled = True
		pb_modificar.enabled = False
//		pb_alta.enabled = True		Sólo podrá haber una UG
		pb_borrar.enabled = True
		pb_salir.enabled = TRUE	//Siempre permitimos salir
		
	CASE II_TRASGUARDAR
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = True
//		pb_alta.enabled = True		Sólo podrá haber una UG
		pb_borrar.enabled = FALSE
		pb_salir.enabled = True
		
		pb_aceptar.default = False
		pb_salir.default = True

END CHOOSE




RETURN 0
end function

public function integer of_asigna_ug_crm ();long			ll_total, i, ll_ugeid
boolean		lb_found = FALSE


ll_total = dw_1.RowCount()

FOR i = 1 TO ll_total
	ll_ugeid = dw_1.GetItemNumber(i, "ugeid")
	
	IF ll_ugeid = il_ugeid THEN
		lb_found = TRUE
		EXIT
	END IF
NEXT

IF lb_found = FALSE THEN
	i = dw_1.InsertRow(0)
	dw_1.SetItem(i, "ugeid", il_ugeid)
ELSE
	ib_pregunta_salir = FALSE
	//Provocamos el evento para activar los botones
	IF ii_modo = II_ACCESO_ALTA THEN
		dw_1.Event EditChanged (i, dw_1.Object.ugeid, String(il_ugeid))
	END IF
END IF

dw_1.SetRow(i)
dw_1.SetColumn("fcambio")
dw_1.SetFocus()

RETURN 0
end function

public function integer of_setdefaultvalues ();
//el interlocutor tiene que ser el que venga de la otra ventana
//para todas las filas que se creen
dw_1.Modify("locid.Initial = '" + string(il_locid) + "'")
dw_1.Modify('ugeid.protect ="0~tif (ugeid = ' + string(il_ugeid) + ', 1, 0)" ')

RETURN 0
end function

event type integer ue_presave();long			ll_fila, ll_total
integer		li_retorno = 0
date			ldt_fecini, ldt_fecfin
string		ls_campo, ls_mensaje

SetPointer(Hourglass!)

ll_total = dw_1.RowCount()

FOR ll_fila = 1 TO ll_total
	ldt_fecini = dw_1.GetItemDate(ll_fila, "fcambio")
	
	IF IsNull(ldt_fecini) THEN
		ls_mensaje = "Debe introducir la fecha de inicio ."
		
		ls_campo = "fcambio"
		li_retorno = -1
		EXIT
	END IF
	
NEXT

IF li_retorno = -1 THEN
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  ls_mensaje)
	dw_1.SetFocus()
	dw_1.SetRow(ll_fila)
	dw_1.SetColumn(ls_campo)
END IF

RETURN li_retorno
end event

event ue_close;str_interlocutor_eu		lstr_interlocutor

il_ugeid = lstr_interlocutor.str_ugeid
idt_fechacambio  = lstr_interlocutor.str_fecha

Message.PowerObjectParm  = lstr_interlocutor

Close(This)




end event

event ue_insertrow;dw_1.setcolumn('ugeid')

IF dw_1.RowCount() = 1 THEN
	dw_1.SetItem(1,"ugeid", il_ugeid)
END IF
end event

event ue_delete();Long	ll_fila

ll_fila = dw_1.GetRow()
IF ll_fila > 0 THEN
	IF dw_1.GetItemNumber(ll_fila, "ugeid") = il_ugeid THEN
		App.srvMsgBox.MessageBox(App.MsgBoxTitle, 'No está permitido eliminar ' + &
				'la Unidad de Gestión inicial')
		RETURN
	ELSE
		dw_1.deleterow(ll_fila)
	END IF
	
	IF ll_fila > 1 THEN
		dw_1.SelectRow(ll_fila, TRUE)
	ELSE
		dw_1.SelectRow(1, TRUE)
	END IF
END IF


f_desabled(dw_1)

of_botones(II_TRASBORRAR)
end event

event ue_save;long									ll_ugeloc
Integer								li_retorno
blob									lblb_datos
n_cst_do_histcambuge_loc		luo_intuge

dw_1.AcceptText()

li_retorno = THIS.Event ue_presave()

IF li_retorno < 0 THEN RETURN

SetPointer(Hourglass!)


App.inv_Connect.of_CreateInstanceDatos(luo_intuge,"n_cst_do_histcambuge_loc")

dw_1.GetFullState(lblb_datos)

ll_ugeloc = luo_intuge.of_updateblob( lblb_datos)

IF ll_ugeloc >= 0 THEN
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  'Información almacenada correctamente.')
	IF dw_1.RowCount() > 0 THEN
		//asumimos la última fila como la cambiada
		idt_fechacambio = dw_1.GetItemDate(dw_1.RowCount(),"fcambio")
	END IF
	ib_pregunta_salir = FALSE
Else
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  luo_intuge.of_geterrortexto())
END IF
	
App.inv_Connect.of_DestroyInstance(luo_intuge)


IF ll_ugeloc < 0 THEN
	RETURN
END IF

THIS.Event ue_retrieve()

of_botones(II_TRASGUARDAR)

f_desabled(dw_1)
end event

event ue_enabled;call super::ue_enabled;dw_1.SetRow(dw_1.GetRow())
dw_1.SetColumn('fcambio')
dw_1.SetFocus()
end event

event ue_retrieve;Long		ll_ret
string								ls_where
blob									lblb_datos
n_cst_do_histcambuge_loc		luo_intuge

App.inv_Connect.of_CreateInstanceDatos(luo_intuge,"n_cst_do_histcambuge_loc")

ls_where = 'locid = '  + string(il_locid)
luo_intuge.of_Addwhere(ls_where)
ll_ret = luo_intuge.of_Retrieveblob(lblb_datos)

dw_1.SetFullState(lblb_datos)

IF ll_ret < 0 THEN
	App.srvMsgBox.MessageBox(App.MsgBoxTitle, luo_intuge.of_geterrortexto())
END IF

//PBD 18.04.2008
//Filtramos las Unidades de Gestión en función del usuario
of_getugesusuario()

of_setdefaultvalues()

dw_1.ResetUpdate()

App.inv_Connect.of_DestroyInstance(luo_intuge)
end event

event open;call super::open;
long									ll_fila
integer								li_ret
blob									lblb_datos
str_interlocutor_eu					lstr_interlocutor
n_cst_do_unidadgestion			lnv_do_unidadgestion

lstr_interlocutor = Message.PowerObjectParm

il_locid = lstr_interlocutor.str_intid
il_ugeid = lstr_interlocutor.str_ugeid
ii_modo  = lstr_interlocutor.str_modo


Event ue_retrieve()

of_setdefaultvalues() //para que cree filas con intid relleno

ll_fila = dw_1.InsertRow(0)

//la unidad de gestión que venga del CRM no será modificable
dw_1.SetItem(ll_fila, "ugeid", il_ugeid)


ll_fila = dw_1.GetItemNumber(ll_fila, "locid")


IF ii_modo = II_ALTA THEN
//	dw_1.object.ugeid[1]   = inv_interlocutor.of_unigestion()
	of_botones(II_ACCESO_ALTA)
	dw_1.SetRow(dw_1.RowCount())
	dw_1.SetColumn("fcambio")
	dw_1.SetFocus()

	//PBD 18.04.2008
	//Filtramos las Unidades de Gestión en función del usuario
	of_getugesusuario()
	
ELSEIF ii_modo = II_MODIFICACION THEN 
	Event ue_retrieve()
	
//	f_desabled(dw_1)
	of_botones(II_ACCESO_MODIFICACION)
	of_asigna_ug_crm()
	f_desabled(dw_1)
END IF

of_setdefaultvalues()

end event

on w_response_htcambugeloc.create
call super::create
end on

on w_response_htcambugeloc.destroy
call super::destroy
end on

event closequery;integer			li_retorno

IF ib_pregunta_salir = TRUE THEN
	li_retorno = App.srvMsgBox.MessageBox(App.MsgBoxTitle,  &
	'No se ha guardado unidad de gestión y es obligatoria',Information!)
	li_retorno = 2
	
	IF li_retorno = 2 THEN
		RETURN 1
	END IF
END IF
end event

type p_icono from w_response_base`p_icono within w_response_htcambugeloc
end type

type st_titulo from w_response_base`st_titulo within w_response_htcambugeloc
string text = "Histórico Unidades Gestión"
end type

type pb_borrar from w_response_base`pb_borrar within w_response_htcambugeloc
boolean visible = false
end type

type pb_modificar from w_response_base`pb_modificar within w_response_htcambugeloc
end type

type pb_salir from w_response_base`pb_salir within w_response_htcambugeloc
integer x = 1979
end type

type pb_aceptar from w_response_base`pb_aceptar within w_response_htcambugeloc
end type

type pb_cancelar from w_response_base`pb_cancelar within w_response_htcambugeloc
end type

type pb_alta from w_response_base`pb_alta within w_response_htcambugeloc
end type

type dw_1 from w_response_base`dw_1 within w_response_htcambugeloc
integer width = 2135
string dataobject = "d_do_htcambugeloc"
end type

event rowfocuschanged;IF this.RowCount() < 1 THEN RETURN

SetRedraw (FALSE)
SelectRow (0, FALSE)
SelectRow (GetRow(), TRUE )
SetRedraw (TRUE)

setcolumn('ugeid')

end event

event dberror;Return 1
end event

event itemchanged;
Choose Case getcolumnname()
	Case 'ugeid', 'fcambio'
		of_botones(ii_modificar)
//		IF il_fila >1 THEN
//			pb_aceptar.enabled = True
//			pb_cancelar.enabled = False
//			pb_modificar.enabled = False
//			pb_alta.enabled = False
//			pb_borrar.enabled = True
//			pb_salir.enabled = False
//		Else
//			pb_aceptar.enabled = True
//			pb_cancelar.enabled = False
//			pb_modificar.enabled = False
//			pb_alta.enabled = False
//			pb_borrar.enabled = False
//			pb_salir.enabled = False	
//		END IF


End Choose		

end event

event editchanged;
Choose Case getcolumnname()
	Case 'ugeid', 'fcambio'
		of_botones(ii_modificar)
//		IF il_fila >1 THEN
//			pb_aceptar.enabled = True
//			pb_cancelar.enabled = False
//			pb_modificar.enabled = False
//			pb_alta.enabled = False
//			pb_borrar.enabled = True
//			pb_salir.enabled = False
//		Else
//			pb_aceptar.enabled = True
//			pb_cancelar.enabled = False
//			pb_modificar.enabled = False
//			pb_alta.enabled = False
//			pb_borrar.enabled = False
//			pb_salir.enabled = False	
//		END IF
End Choose	
end event

type st_fondo from w_response_base`st_fondo within w_response_htcambugeloc
end type


release 8;
datawindow(units=0 timer_interval=0 color=1073741824 processing=1 HTMLDW=no print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no grid.lines=0 selected.mouse=no )
header(height=72 color="67108864" )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=68 color="536870912" )
table(column=(type=long update=yes updatewhereclause=yes key=yes name=cuglid dbname="HTCAMBUGELOC.cuglid" )
 column=(type=long update=yes updatewhereclause=yes name=locid dbname="HTCAMBUGELOC.locid" )
 column=(type=long update=yes updatewhereclause=yes name=ugeid dbname="HTCAMBUGELOC.ugeid" )
 column=(type=datetime update=yes updatewhereclause=yes name=fcambio dbname="HTCAMBUGELOC.fcambio" )
 column=(type=datetime update=yes updatewhereclause=yes name=feccrereg dbname="HTCAMBUGELOC.feccrereg" )
 column=(type=char(10) update=yes updatewhereclause=yes name=codusucid dbname="HTCAMBUGELOC.codusucid" )
 retrieve="SELECT  htcambugeloc.cuglid ,
           htcambugeloc.locid ,
           htcambugeloc.ugeid ,
           htcambugeloc.fcambio ,
           htcambugeloc.feccrereg ,
           htcambugeloc.codusucid     
        FROM htcambugeloc       " update="htcambugeloc" updatewhere=0 updatekeyinplace=yes  sort="fcambio A " )
text(band=header alignment="0" text="Unidad Gestión" border="4" color="33554432" x="9" y="8" height="60" width="983" html.valueishtml="0"  name=ugeid_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header alignment="0" text="Fecha Cambio U.G." border="4" color="33554432" x="1001" y="8" height="60" width="370" html.valueishtml="0"  name=fcambio_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=3 alignment="0" tabsequence=32766 border="0" color="33554432" x="9" y="4" height="60" width="983" format="[general]" html.valueishtml="0"  name=ugeid visible="1" dddw.name=d_dddw_unidadgestion dddw.displaycolumn=ugedescri dddw.datacolumn=ugeid dddw.percentwidth=0 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=no dddw.case=any dddw.imemode=0 dddw.vscrollbar=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=4 alignment="2" tabsequence=10 border="0" color="33554432" x="1001" y="4" height="60" width="370" format="dd/mm/yyyy" html.valueishtml="0"  name=fcambio visible="1" editmask.useformat=yes editmask.mask="dd/mm/yyyy" editmask.imemode=0 editmask.focusrectangle=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" netscapelayers="0" )

forward
global type w_response_htcambccostloc from w_response_base
end type
end forward

global type w_response_htcambccostloc from w_response_base
integer width = 2203
integer height = 1144
end type
global w_response_htcambccostloc w_response_htcambccostloc

type variables
long		il_locid


integer	ii_estadobotones

end variables

forward prototypes
public function integer of_botones (integer ai_modo)
public function integer of_setdefaultvalues ()
end prototypes

public function integer of_botones (integer ai_modo);/*Esta función habilita y deshabilita botones
en función del estado.
Se centraliza aquí para poder aplicar permisos
de acceso.*/
pb_borrar.visible = FALSE
pb_alta.visible = FALSE

CHOOSE CASE ai_modo
	CASE II_ACCESO_ALTA
		pb_borrar.visible = FALSE
		
		pb_aceptar.enabled = FALSE
		pb_cancelar.enabled = FALSE
		pb_modificar.enabled = TRUE
		pb_alta.enabled = FALSE
		pb_borrar.enabled = FALSE
		pb_salir.enabled = TRUE	//Siempre permitimos salir
	
	CASE II_ACCESO_MODIFICACION
		pb_aceptar.enabled = FALSE
		pb_cancelar.enabled = False
		pb_modificar.enabled = FALSE //No se puede modificar en modificación de local
		pb_alta.enabled = TRUE
		pb_borrar.enabled = TRUE
		pb_salir.enabled = TRUE	//Siempre permitimos salir
		
	CASE II_INSERTROW
		pb_aceptar.enabled = False
		pb_cancelar.enabled = True
		pb_modificar.enabled = False
		pb_alta.enabled = False
		pb_borrar.enabled = True
		pb_salir.enabled = TRUE	//Siempre permitimos salir
	
	CASE II_PREMODIFICAR 
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = False
		pb_alta.enabled = False
		pb_borrar.enabled = False
		pb_salir.enabled = TRUE
		
	CASE II_MODIFICAR
		pb_aceptar.enabled = True
		pb_cancelar.enabled = True
		pb_modificar.enabled = False
		pb_alta.enabled = False
		pb_borrar.enabled = False
		pb_salir.enabled = TRUE	//Siempre permitimos salir
		
	CASE II_PREPARED_BORRABLE
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = True
//		pb_alta.enabled = True		Sólo podrá haber una UG
		pb_borrar.enabled = True
		pb_salir.enabled = True
	
	CASE II_PREPARED_NOBORRABLE
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = True
//		pb_alta.enabled = True		Sólo podrá haber una UG
		pb_borrar.enabled = True
		pb_salir.enabled = True
		
	CASE II_TRASBORRAR
		pb_aceptar.enabled = True
		pb_cancelar.enabled = True
		pb_modificar.enabled = False
//		pb_alta.enabled = True		Sólo podrá haber una UG
		pb_borrar.enabled = True
		pb_salir.enabled = TRUE	//Siempre permitimos salir
		
	CASE II_TRASGUARDAR
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = True
//		pb_alta.enabled = True		Sólo podrá haber una UG
		pb_borrar.enabled = True
		pb_salir.enabled = True
		
		pb_aceptar.default = False
		pb_salir.default = True

END CHOOSE

ii_estadobotones = ai_modo

RETURN 0
end function

public function integer of_setdefaultvalues ();
//el interlocutor tiene que ser el que venga de la otra ventana
//para todas las filas que se creen
dw_1.Modify("locid.Initial = '" + string(il_locid) + "'")

dw_1.Modify("fcambio.protect = '1'")


RETURN 0
end function

event ue_insertrow;call super::ue_insertrow;dw_1.setcolumn('ccostid')

end event

event ue_save();long								ll_ugeloc
integer							li_retorno
blob								lblb_datos
n_cst_do_histcambccost		luo_intuge

dw_1.AcceptText()

li_retorno = THIS.Event ue_presave()

IF li_retorno < 0 THEN RETURN

SetPointer(Hourglass!)


App.inv_Connect.of_CreateInstanceDatos(luo_intuge,"n_cst_do_histcambccost")

dw_1.GetFullState(lblb_datos)

ll_ugeloc = luo_intuge.of_updateblob( lblb_datos)

IF ll_ugeloc >= 0 THEN
	App.srvMsgBox.MessageBox(App.MsgBoxTitle, 'Información almacenada correctamente.')
	ib_pregunta_salir = FALSE
Else
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  luo_intuge.of_geterrortexto())
END IF
	
App.inv_Connect.of_DestroyInstance(luo_intuge)


IF ll_ugeloc < 0 THEN
	RETURN
END IF

THIS.Event ue_retrieve()

of_botones(II_TRASGUARDAR)

f_desabled(dw_1)
end event

event type integer ue_presave();long			ll_fila, ll_total
integer		li_retorno = 0
date			ldt_fecini, ldt_fecfin
string		ls_campo, ls_mensaje

SetPointer(Hourglass!)

ll_total = dw_1.RowCount()

FOR ll_fila = 1 TO ll_total
	ldt_fecini = dw_1.GetItemDate(ll_fila, "fcambio")
	
	IF IsNull(ldt_fecini) THEN
		ls_mensaje = "Debe introducir la fecha de inicio ."
		
		ls_campo = "fcambio"
		li_retorno = -1
		EXIT
	END IF
	
NEXT

IF li_retorno = -1 THEN
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  ls_mensaje)
	dw_1.SetFocus()
	dw_1.SetRow(ll_fila)
	dw_1.SetColumn(ls_campo)
END IF

RETURN li_retorno
end event

event ue_enabled;call super::ue_enabled;dw_1.SetColumn('fcambio')
end event

event ue_retrieve;long							li_ret
string							ls_where
blob								lblb_datos
n_cst_do_histcambccost		luo_intuge

App.inv_Connect.of_CreateInstanceDatos(luo_intuge,"n_cst_do_histcambccost")

ls_where = 'locid = '  + string(il_locid)
luo_intuge.of_Addwhere(ls_where)
li_ret = luo_intuge.of_Retrieveblob(lblb_datos)

dw_1.SetFullState(lblb_datos)

IF li_ret < 0 THEN
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  luo_intuge.of_geterrortexto())
END IF

of_setdefaultvalues()

dw_1.ResetUpdate()

App.inv_Connect.of_DestroyInstance(luo_intuge)
end event

event open;call super::open;
blob									lblb_datos
long									ll_fila
integer								li_ret
str_interlocutor_eu					lstr_interlocutor
n_cst_do_unidadgestion			lnv_do_unidadgestion

lstr_interlocutor = Message.PowerObjectParm

il_locid = lstr_interlocutor.str_intid
il_ugeid = lstr_interlocutor.str_ugeid
ii_modo  = lstr_interlocutor.str_modo


ib_pregunta_salir = FALSE //siempre tendrá datos previos y se podrá cerrar
//sin más

Event ue_retrieve()

of_setdefaultvalues() //para que cree filas con intid relleno

IF ii_modo = II_ALTA THEN
	
	of_botones(II_ACCESO_ALTA) //por defecto no tendrá que introducir nada
	//PBD 18.04.2008 Incluyo el ue_retrieve para que en el ue_postretrieve del servidor filtre los CC
	Event ue_retrieve()
	dw_1.SetRow(dw_1.RowCount())
	dw_1.SetColumn("fcambio")
	dw_1.SetFocus()
	
	f_desabled(dw_1)
ELSEIF ii_modo = II_MODIFICACION THEN 
	Event ue_retrieve()
	
	f_desabled(dw_1)
	of_botones(II_ACCESO_MODIFICACION)
END IF

of_setdefaultvalues()

end event

on w_response_htcambccostloc.create
call super::create
end on

on w_response_htcambccostloc.destroy
call super::destroy
end on

type p_icono from w_response_base`p_icono within w_response_htcambccostloc
end type

type st_titulo from w_response_base`st_titulo within w_response_htcambccostloc
string text = "Historial de Cambios de Centro de Coste"
end type

type pb_borrar from w_response_base`pb_borrar within w_response_htcambccostloc
boolean visible = false
end type

type pb_modificar from w_response_base`pb_modificar within w_response_htcambccostloc
end type

type pb_salir from w_response_base`pb_salir within w_response_htcambccostloc
integer x = 1979
end type

type pb_aceptar from w_response_base`pb_aceptar within w_response_htcambccostloc
end type

type pb_cancelar from w_response_base`pb_cancelar within w_response_htcambccostloc
end type

type pb_alta from w_response_base`pb_alta within w_response_htcambccostloc
end type

type dw_1 from w_response_base`dw_1 within w_response_htcambccostloc
integer width = 2135
string dataobject = "d_do_htcambccostloc"
end type

event rowfocuschanged;IF this.RowCount() < 1 THEN RETURN

SetRedraw (FALSE)
SelectRow (0, FALSE)
SelectRow (GetRow(), TRUE )
SetRedraw (TRUE)

setcolumn('fcambio')

end event

event dberror;Return 1
end event

event itemchanged;
Choose Case getcolumnname()
	Case 'ccostid', 'fcambio'
		of_botones(ii_modificar)
//		IF il_fila >1 THEN
//			pb_aceptar.enabled = True
//			pb_cancelar.enabled = False
//			pb_modificar.enabled = False
//			pb_alta.enabled = False
//			pb_borrar.enabled = True
//			pb_salir.enabled = False
//		Else
//			pb_aceptar.enabled = True
//			pb_cancelar.enabled = False
//			pb_modificar.enabled = False
//			pb_alta.enabled = False
//			pb_borrar.enabled = False
//			pb_salir.enabled = False	
//		END IF


End Choose		

end event

event editchanged;
Choose Case getcolumnname()
	Case 'ccostid', 'fcambio'
		IF ii_estadobotones = II_PREMODIFICAR THEN
			of_botones(ii_modificar)
		END IF
//		of_botones(ii_modificar)
//		IF il_fila >1 THEN
//			pb_aceptar.enabled = True
//			pb_cancelar.enabled = False
//			pb_modificar.enabled = False
//			pb_alta.enabled = False
//			pb_borrar.enabled = True
//			pb_salir.enabled = False
//		Else
//			pb_aceptar.enabled = True
//			pb_cancelar.enabled = False
//			pb_modificar.enabled = False
//			pb_alta.enabled = False
//			pb_borrar.enabled = False
//			pb_salir.enabled = False	
//		END IF
End Choose	
end event

type st_fondo from w_response_base`st_fondo within w_response_htcambccostloc
end type


release 8;
datawindow(units=0 timer_interval=0 color=1073741824 processing=0 HTMLDW=no print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no )
header(height=72 color="67108864" )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=68 color="536870912" )
table(column=(type=long update=yes updatewhereclause=yes key=yes name=ccclid dbname="htcambccostloc.ccclid" )
 column=(type=long update=yes updatewhereclause=yes name=locid dbname="htcambccostloc.locid" )
 column=(type=long update=yes updatewhereclause=yes name=ccostid dbname="htcambccostloc.ccostid" )
 column=(type=date update=yes updatewhereclause=yes name=fcambio dbname="htcambccostloc.fcambio" )
 column=(type=datetime update=yes updatewhereclause=yes name=feccrereg dbname="htcambccostloc.feccrereg" )
 column=(type=char(10) update=yes updatewhereclause=yes name=codusucid dbname="htcambccostloc.codusucid" )
 column=(type=char(35) updatewhereclause=yes name=xtcentcoste_ccostdescri dbname="xtcentcoste.ccostdescri" )
 column=(type=long updatewhereclause=yes name=editar dbname="editar" )
 retrieve="  SELECT htcambccostloc.ccclid,   
         htcambccostloc.locid,   
         htcambccostloc.ccostid,   
         htcambccostloc.fcambio,   
         htcambccostloc.feccrereg,   
         htcambccostloc.codusucid,
ccostdescri,
 0 as editar
    FROM htcambccostloc,
xtcentcoste as ccoste
WHERE htcambccostloc.ccostid = ccoste.ccostid

" update="htcambccostloc" updatewhere=0 updatekeyinplace=no  sort="fcambio A ccclid A " )
text(band=header alignment="0" text="Centro de Coste" border="4" color="33554432" x="9" y="8" height="60" width="1010" html.valueishtml="0"  name=ccostid_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=header alignment="2" text="Fecha de cambio" border="4" color="33554432" x="1051" y="8" height="60" width="434" html.valueishtml="0"  name=htcambccostloc_fcambio_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
line(band=header x1="1033" y1="4" x2="1033" y2="72"  name=l_2 visible="1" pen.style="0" pen.width="5" pen.color="0"  background.mode="2" background.color="16777215" )
column(band=detail id=7 alignment="0" tabsequence=32766 border="0" color="8388608" x="9" y="4" height="60" width="1010" format="[general]" html.valueishtml="0"  name=xtcentcoste_ccostdescri visible="1~tif ( isrownew() or isrowmodified() or (getrow()=currentrow()) ,0,1)" edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=no edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=3 alignment="0" tabsequence=10 border="0" color="33554432" x="9" y="4" height="60" width="1010" format="[general]" html.valueishtml="0"  name=ccostid visible="1~tif ( isrownew() or isrowmodified() or (getrow()=currentrow()) ,1,0)" dddw.name=d_dddw_centcostexuges dddw.displaycolumn=ccostdescri dddw.datacolumn=ccostid dddw.percentwidth=0 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=no dddw.case=any dddw.imemode=0 dddw.vscrollbar=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=4 alignment="1" tabsequence=20 border="0" color="33554432" x="1056" y="4" height="60" width="430" format="dd/mm/yyyy" html.valueishtml="0"  name=fcambio visible="1" editmask.mask="dd/mm/yyyy" editmask.imemode=0 editmask.focusrectangle=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
line(band=detail x1="1033" y1="0" x2="1033" y2="68"  name=l_1 visible="1" pen.style="0" pen.width="5" pen.color="0"  background.mode="2" background.color="12632256" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" netscapelayers="0" )

forward
global type w_response_local_nuecons from w_response_base
end type
end forward

global type w_response_local_nuecons from w_response_base
integer width = 2203
integer height = 1144
end type
global w_response_local_nuecons w_response_local_nuecons

type variables

long		il_locid

integer	ii_estadobotones
end variables

forward prototypes
public function integer of_botones (integer ai_modo)
public function integer of_setdefaultvalues ()
end prototypes

public function integer of_botones (integer ai_modo);/*Esta función habilita y deshabilita botones
en función del estado.
Se centraliza aquí para poder aplicar permisos
de acceso.*/

pb_alta.visible = FALSE
pb_borrar.visible = FALSE

CHOOSE CASE ai_modo
	CASE II_ACCESO_ALTA
		pb_aceptar.enabled = TRUE
		pb_cancelar.enabled = TRUE	/*porque debe guardar
												 alguna antes de salir */
		pb_modificar.enabled = False
		pb_alta.enabled = False
		pb_borrar.enabled = False
		pb_salir.enabled = TRUE	//Siempre permitimos salir
	
	CASE II_ACCESO_MODIFICACION
		pb_aceptar.enabled = FALSE
		pb_cancelar.enabled = False
		pb_modificar.enabled = TRUE
		pb_alta.enabled = TRUE
		pb_borrar.enabled = False	//aquí no se puede borrar
		pb_salir.enabled = TRUE	//Siempre permitimos salir
		
	CASE II_INSERTROW
		pb_aceptar.enabled = False
		pb_cancelar.enabled = True
		pb_modificar.enabled = False
		pb_alta.enabled = False
		pb_borrar.enabled = False	//aquí no se puede borrar
		pb_salir.enabled = TRUE	//Siempre permitimos salir
		
	CASE II_PREMODIFICAR 
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = False
		pb_alta.enabled = False
		pb_borrar.enabled = False
		pb_salir.enabled = TRUE
		
	CASE II_MODIFICAR
		pb_aceptar.enabled = True
		pb_cancelar.enabled = True
		pb_modificar.enabled = False
		pb_alta.enabled = False
		pb_borrar.enabled = False
		pb_salir.enabled = TRUE	//Siempre permitimos salir
		
	CASE II_PREPARED_BORRABLE
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = True
//		pb_alta.enabled = True		Sólo podrá haber una UG
		pb_borrar.enabled = False	//aquí no se puede borrar
		pb_salir.enabled = True
	
	CASE II_PREPARED_NOBORRABLE
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = True
//		pb_alta.enabled = True		Sólo podrá haber una UG
		pb_borrar.enabled = False	//aquí no se puede borrar
		pb_salir.enabled = True
		
	CASE II_TRASBORRAR
		pb_aceptar.enabled = True
		pb_cancelar.enabled = True
		pb_modificar.enabled = False
//		pb_alta.enabled = True		Sólo podrá haber una UG
		pb_borrar.enabled = True
		pb_salir.enabled = TRUE	//Siempre permitimos salir
		
	CASE II_TRASGUARDAR
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = True
//		pb_alta.enabled = True		Sólo podrá haber una UG
		pb_borrar.enabled = False	//aquí no se puede borrar
		pb_salir.enabled = True
		
		pb_aceptar.default = False
		pb_salir.default = True

END CHOOSE

ii_estadobotones = ai_modo


RETURN 0
end function

public function integer of_setdefaultvalues ();
//el interlocutor tiene que ser el que venga de la otra ventana
//para todas las filas que se creen
dw_1.Modify("locid.Initial = '" + string(il_locid) + "'")

RETURN 0
end function

event ue_insertrow();Integer li_row

dw_1.SetFocus()
li_row	=	dw_1.InsertRow(0)
dw_1.SetRow( li_row )
dw_1.ScrollToRow ( li_row )
//dw_1.settaborder('ugeid',1)
dw_1.setcolumn('ugeid')

IF dw_1.RowCount() = 1 THEN
	dw_1.SetItem(1,"ugeid", il_ugeid)
END IF

f_enabled(dw_1)

of_botones(II_INSERTROW)
end event

event ue_save();long					ll_ugeloc
integer				li_retorno
blob					lblb_datos
n_cst_do_local		luo_intuge

dw_1.AcceptText()

li_retorno = THIS.Event ue_presave()

IF li_retorno < 0 THEN RETURN

SetPointer(Hourglass!)


App.inv_Connect.of_CreateInstanceDatos(luo_intuge,"n_cst_do_local")

dw_1.GetFullState(lblb_datos)

ll_ugeloc = luo_intuge.of_updateblob( lblb_datos)

IF ll_ugeloc >= 0 THEN
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  'Información almacenada correctamente.')
	ib_pregunta_salir = FALSE
Else
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  luo_intuge.of_geterrortexto())
END IF
	
App.inv_Connect.of_DestroyInstance(luo_intuge)


IF ll_ugeloc < 0 THEN
	RETURN
END IF

THIS.Event ue_retrieve()

of_botones(II_TRASGUARDAR)

f_desabled(dw_1)
end event

event ue_enabled;f_enabled(dw_1)

dw_1.SetColumn('locfeccons')

of_botones(II_PREMODIFICAR)
end event

event ue_retrieve;long					li_ret
string					ls_where
blob						lblb_datos
n_cst_do_local			luo_intuge

App.inv_Connect.of_CreateInstanceDatos(luo_intuge,"n_cst_do_local")

luo_intuge.of_SetDataObject("d_do_local_nuecons")

ls_where = 'locid = '  + string(il_locid)
luo_intuge.of_Addwhere(ls_where)
li_ret = luo_intuge.of_Retrieveblob(lblb_datos)

dw_1.SetFullState(lblb_datos)

IF li_ret < 0 THEN
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  luo_intuge.of_geterrortexto())
END IF

of_setdefaultvalues()

dw_1.ResetUpdate()

App.inv_Connect.of_DestroyInstance(luo_intuge)
end event

event open;call super::open;
long									ll_fila
integer								li_ret
blob									lblb_datos
str_interlocutor_eu					lstr_interlocutor
n_cst_do_unidadgestion			lnv_do_unidadgestion

lstr_interlocutor = Message.PowerObjectParm

il_locid = lstr_interlocutor.str_intid
il_ugeid = lstr_interlocutor.str_ugeid
ii_modo  = lstr_interlocutor.str_modo


ib_pregunta_salir = FALSE //siempre tendrá datos previos y se podrá cerrar
//sin más

Event ue_retrieve()

of_setdefaultvalues() //para que cree filas con intid relleno


IF ii_modo = II_ALTA THEN
//	dw_1.object.ugeid[1]   = inv_interlocutor.of_unigestion()	
	of_botones(II_PREMODIFICAR)
	dw_1.SetRow(dw_1.RowCount())
//	dw_1.SetColumn("fcambio")
	dw_1.SetFocus()
ELSEIF ii_modo = II_MODIFICACION THEN 
	Event ue_retrieve()
	
	f_desabled(dw_1)
	of_botones(II_PREMODIFICAR)
END IF

of_setdefaultvalues()

end event

on w_response_local_nuecons.create
call super::create
end on

on w_response_local_nuecons.destroy
call super::destroy
end on

event closequery;integer			li_retorno

IF ib_pregunta_salir = TRUE THEN
	li_retorno = App.srvMsgBox.MessageBox(App.MsgBoxTitle,  &
	'No se ha guardado unidad de gestión y es obligatoria.~r~n ¿Está seguro de salir?',&
	Question!, YesNo!, 2)
	
	IF li_retorno = 2 THEN
		RETURN 1
	END IF
END IF
end event

type p_icono from w_response_base`p_icono within w_response_local_nuecons
end type

type st_titulo from w_response_base`st_titulo within w_response_local_nuecons
string text = "Local de Nueva Construcción"
end type

type pb_borrar from w_response_base`pb_borrar within w_response_local_nuecons
boolean visible = false
end type

type pb_modificar from w_response_base`pb_modificar within w_response_local_nuecons
end type

type pb_salir from w_response_base`pb_salir within w_response_local_nuecons
integer x = 1979
end type

type pb_aceptar from w_response_base`pb_aceptar within w_response_local_nuecons
string picturename = "Imatges\Enter.bmp"
string disabledname = "Imatges\Enter No.bmp"
end type

type pb_cancelar from w_response_base`pb_cancelar within w_response_local_nuecons
end type

type pb_alta from w_response_base`pb_alta within w_response_local_nuecons
boolean visible = false
end type

type dw_1 from w_response_base`dw_1 within w_response_local_nuecons
integer width = 2135
string dataobject = "d_do_local_nuecons"
end type

event dberror;Return 1
end event

event itemchanged;
Choose Case getcolumnname()
	Case 'locfeccons', 'locnuecons'
		of_botones(ii_modificar)
//		IF il_fila >1 THEN
//			pb_aceptar.enabled = True
//			pb_cancelar.enabled = False
//			pb_modificar.enabled = False
//			pb_alta.enabled = False
//			pb_borrar.enabled = True
//			pb_salir.enabled = False
//		Else
//			pb_aceptar.enabled = True
//			pb_cancelar.enabled = False
//			pb_modificar.enabled = False
//			pb_alta.enabled = False
//			pb_borrar.enabled = False
//			pb_salir.enabled = False	
//		END IF


End Choose		

end event

event editchanged;
Choose Case getcolumnname()
	Case 'locfeccons', 'locnuecons'
		IF ii_estadobotones = II_PREMODIFICAR THEN
			of_botones(ii_modificar)
		END IF
//		IF il_fila >1 THEN
//			pb_aceptar.enabled = True
//			pb_cancelar.enabled = False
//			pb_modificar.enabled = False
//			pb_alta.enabled = False
//			pb_borrar.enabled = True
//			pb_salir.enabled = False
//		Else
//			pb_aceptar.enabled = True
//			pb_cancelar.enabled = False
//			pb_modificar.enabled = False
//			pb_alta.enabled = False
//			pb_borrar.enabled = False
//			pb_salir.enabled = False	
//		END IF
End Choose	
end event

type st_fondo from w_response_base`st_fondo within w_response_local_nuecons
end type


release 8;
datawindow(units=0 timer_interval=0 color=67108864 processing=0 HTMLDW=no print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=280 color="536870912" )
table(column=(type=long updatewhereclause=yes key=yes name=locid dbname="atlocal.locid" )
 column=(type=long updatewhereclause=yes name=ugeid dbname="atlocal.ugeid" )
 column=(type=long updatewhereclause=yes name=pobsid dbname="atlocal.pobsid" )
 column=(type=long updatewhereclause=yes name=viaid dbname="atlocal.viaid" )
 column=(type=long updatewhereclause=yes name=tloid dbname="atlocal.tloid" )
 column=(type=char(35) updatewhereclause=yes name=locnombre dbname="atlocal.locnombre" )
 column=(type=char(35) updatewhereclause=yes name=locnomvia dbname="atlocal.locnomvia" )
 column=(type=char(6) updatewhereclause=yes name=locnumvia dbname="atlocal.locnumvia" )
 column=(type=char(20) updatewhereclause=yes name=locobsvia dbname="atlocal.locobsvia" )
 column=(type=char(10) updatewhereclause=yes name=loccoopla dbname="atlocal.loccoopla" )
 column=(type=char(10) updatewhereclause=yes name=locposgps dbname="atlocal.locposgps" )
 column=(type=char(12) updatewhereclause=yes name=loctelef1 dbname="atlocal.loctelef1" )
 column=(type=char(12) updatewhereclause=yes name=loctelef2 dbname="atlocal.loctelef2" )
 column=(type=char(12) updatewhereclause=yes name=loctelefm dbname="atlocal.loctelefm" )
 column=(type=char(12) updatewhereclause=yes name=locteleff dbname="atlocal.locteleff" )
 column=(type=long updatewhereclause=yes name=locperiod dbname="atlocal.locperiod" )
 column=(type=char(1) updatewhereclause=yes name=locdiacie dbname="atlocal.locdiacie" )
 column=(type=char(1) updatewhereclause=yes name=locdiare1 dbname="atlocal.locdiare1" )
 column=(type=char(1) updatewhereclause=yes name=locdiare2 dbname="atlocal.locdiare2" )
 column=(type=char(8) updatewhereclause=yes name=lochorlab dbname="atlocal.lochorlab" )
 column=(type=char(8) updatewhereclause=yes name=lochorsab dbname="atlocal.lochorsab" )
 column=(type=char(8) updatewhereclause=yes name=lochordom dbname="atlocal.lochordom" )
 column=(type=char(8) updatewhereclause=yes name=lochorrec dbname="atlocal.lochorrec" )
 column=(type=char(8) updatewhereclause=yes name=lochornov dbname="atlocal.lochornov" )
 column=(type=char(8) updatewhereclause=yes name=locgesmaq dbname="atlocal.locgesmaq" )
 column=(type=long updatewhereclause=yes name=epiid dbname="atlocal.epiid" )
 column=(type=char(1) updatewhereclause=yes name=locregime dbname="atlocal.locregime" )
 column=(type=char(35) updatewhereclause=yes name=loce_mail dbname="atlocal.loce_mail" )
 column=(type=char(35) updatewhereclause=yes name=locpagweb dbname="atlocal.locpagweb" )
 column=(type=char(6) updatewhereclause=yes name=loctablla dbname="atlocal.loctablla" )
 column=(type=char(1) updatewhereclause=yes name=locindref dbname="atlocal.locindref" )
 column=(type=date updatewhereclause=yes name=locfecref dbname="atlocal.locfecref" )
 column=(type=long updatewhereclause=yes name=locmesain dbname="atlocal.locmesain" )
 column=(type=long updatewhereclause=yes name=locmesaex dbname="atlocal.locmesaex" )
 column=(type=decimal(4) updatewhereclause=yes name=locpotenc dbname="atlocal.locpotenc" )
 column=(type=long updatewhereclause=yes name=locmetbar dbname="atlocal.locmetbar" )
 column=(type=long updatewhereclause=yes name=locbrzcaf dbname="atlocal.locbrzcaf" )
 column=(type=long updatewhereclause=yes name=locsuperf dbname="atlocal.locsuperf" )
 column=(type=char(10) updatewhereclause=yes name=locnumayu dbname="atlocal.locnumayu" )
 column=(type=decimal(4) updatewhereclause=yes name=locpencob dbname="atlocal.locpencob" )
 column=(type=long updatewhereclause=yes name=ccostid dbname="atlocal.ccostid" )
 column=(type=char(1) update=yes updatewhereclause=yes name=locnuecons dbname="atlocal.locnuecons" values="	S/	N" )
 column=(type=date update=yes updatewhereclause=yes name=locfeccons dbname="atlocal.locfeccons" )
 column=(type=datetime updatewhereclause=yes name=feccrereg dbname="atlocal.feccrereg" )
 column=(type=char(10) updatewhereclause=yes name=codusucid dbname="atlocal.codusucid" )
 retrieve="PBSELECT( VERSION(400) TABLE(NAME=~"atlocal~" ) COLUMN(NAME=~"atlocal.locid~") COLUMN(NAME=~"atlocal.ugeid~") COLUMN(NAME=~"atlocal.pobsid~") COLUMN(NAME=~"atlocal.viaid~") COLUMN(NAME=~"atlocal.tloid~") COLUMN(NAME=~"atlocal.locnombre~") COLUMN(NAME=~"atlocal.locnomvia~") COLUMN(NAME=~"atlocal.locnumvia~") COLUMN(NAME=~"atlocal.locobsvia~") COLUMN(NAME=~"atlocal.loccoopla~") COLUMN(NAME=~"atlocal.locposgps~") COLUMN(NAME=~"atlocal.loctelef1~") COLUMN(NAME=~"atlocal.loctelef2~") COLUMN(NAME=~"atlocal.loctelefm~") COLUMN(NAME=~"atlocal.locteleff~") COLUMN(NAME=~"atlocal.locperiod~") COLUMN(NAME=~"atlocal.locdiacie~") COLUMN(NAME=~"atlocal.locdiare1~") COLUMN(NAME=~"atlocal.locdiare2~") COLUMN(NAME=~"atlocal.lochorlab~") COLUMN(NAME=~"atlocal.lochorsab~") COLUMN(NAME=~"atlocal.lochordom~") COLUMN(NAME=~"atlocal.lochorrec~") COLUMN(NAME=~"atlocal.lochornov~") COLUMN(NAME=~"atlocal.locgesmaq~") COLUMN(NAME=~"atlocal.epiid~") COLUMN(NAME=~"atlocal.locregime~") COLUMN(NAME=~"atlocal.loce_mail~") COLUMN(NAME=~"atlocal.locpagweb~") COLUMN(NAME=~"atlocal.loctablla~") COLUMN(NAME=~"atlocal.locindref~") COLUMN(NAME=~"atlocal.locfecref~") COLUMN(NAME=~"atlocal.locmesain~") COLUMN(NAME=~"atlocal.locmesaex~") COLUMN(NAME=~"atlocal.locpotenc~") COLUMN(NAME=~"atlocal.locmetbar~") COLUMN(NAME=~"atlocal.locbrzcaf~") COLUMN(NAME=~"atlocal.locsuperf~") COLUMN(NAME=~"atlocal.locnumayu~") COLUMN(NAME=~"atlocal.locpencob~") COLUMN(NAME=~"atlocal.ccostid~") COLUMN(NAME=~"atlocal.locnuecons~") COLUMN(NAME=~"atlocal.locfeccons~") COLUMN(NAME=~"atlocal.feccrereg~") COLUMN(NAME=~"atlocal.codusucid~")) " update="atlocal" updatewhere=0 updatekeyinplace=yes )
text(band=detail alignment="1" text="Fecha de Construcción:" border="0" color="33554432" x="224" y="184" height="52" width="517" html.valueishtml="0"  name=locfeccons_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=43 alignment="0" tabsequence=430 border="2" color="33554432" x="791" y="184" height="64" width="274" format="dd/mm/yyyy" html.valueishtml="0"  name=locfeccons visible="1" accelerator=" " edit.name="DD/MM/YYYY" editmask.mask="DD/MM/YYYY" editmask.imemode=0 editmask.focusrectangle=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="16777215" )
column(band=detail id=42 alignment="0" tabsequence=420 border="0" color="33554432" x="786" y="60" height="64" width="46" format="[general]" html.valueishtml="0"  name=locnuecons visible="1" checkbox.text="" checkbox.on="S" checkbox.off="N" checkbox.scale=no checkbox.threed=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="Local de Nueva Construcción:" border="0" color="33554432" x="91" y="60" height="52" width="649" html.valueishtml="0"  name=locnuecons_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" netscapelayers="0" )



















































































































































forward
global type w_form_maquina from w_form_base
end type
type st_4 from statictext within w_form_maquina
end type
type st_5 from statictext within w_form_maquina
end type
type st_2 from statictext within w_form_maquina
end type
type dw_circunstancial from datawindow within w_form_maquina
end type
type st_3 from statictext within w_form_maquina
end type
type dw_legal from datawindow within w_form_maquina
end type
type st_1 from statictext within w_form_maquina
end type
type dw_tercero from datawindow within w_form_maquina
end type
type dw_fisica from datawindow within w_form_maquina
end type
type dw_componente from datawindow within w_form_maquina
end type
type gb_1 from groupbox within w_form_maquina
end type
end forward

global type w_form_maquina from w_form_base
integer x = 192
integer y = 436
integer width = 3227
integer height = 2248
boolean resizable = true
st_4 st_4
st_5 st_5
st_2 st_2
dw_circunstancial dw_circunstancial
st_3 st_3
dw_legal dw_legal
st_1 st_1
dw_tercero dw_tercero
dw_fisica dw_fisica
dw_componente dw_componente
gb_1 gb_1
end type
global w_form_maquina w_form_maquina

type variables
long			il_socid
end variables

forward prototypes
public function integer of_asigna_valores ()
public function integer of_abrirmaquina ()
public function string of_setcodmaq (long al_row, n_cst_do_crm_maquina an_uo_maquina)
public function integer of_rellenarestodatos (n_cst_do_crm_maquina an_uo_maquina)
public function integer of_retrieve_sitfismaq (long al_maqid)
public function integer of_retrieve_sitcirmaq (long al_maqid)
public function integer of_retrieve_sitlegalmaq (long al_maqid)
public function integer of_retrieve_tercero (long al_maqid)
public function integer of_crearcontadores ()
public function boolean of_validacampos ()
public function integer of_borrarmaquina (long al_maqid)
end prototypes

public function integer of_asigna_valores ();//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			w_form_maquina
//
//	Función:			of_asigna_valores
//
//	Descripción	  : Asignamos los valores recibidos de CRM
//
//	Usada en:	   Mantenimiento de máquinas. Alta/Modificación
//
//	Argumentos:		(None)
//					  
//	Retorno:			0 OK													<br></br>
//						1 Error												<br></br>
//																				<br></br><div><b>
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios									</div><div>
//	--------	--------	---------------------------------		</div><div>
//	PBD 		05/10/07		Creación		</div>
//
///////////////////////////////////////////////////////////////////////////////
long				ll_ugeid, ll_socid

dw_1.object.crmmaqid[1]    = App.is_parametros[2]
dw_1.object.tmoid[1]       = long(App.is_parametros[3])
dw_1.object.maqnserie[1]   = App.is_parametros[4]
dw_1.object.maqletser[1]   = App.is_parametros[5]
dw_1.object.maqsersap[1]   = App.is_parametros[6]
dw_1.object.coaid[1]       = long(App.is_parametros[7])
dw_1.object.fypidpro[1]    = long(App.is_parametros[8])
//dw_1.object.fypidfab[1]    = long(App.is_parametros[8])
dw_1.object.maqfecfab[1]   = Date(App.is_parametros[9])

//PBD 03.03.2008 No se permite modificar la UG por Siebel
IF ii_modo = II_MODIFICACION THEN
	ll_ugeid = dw_1.GetItemNumber(1,"ugeid")
	IF ll_ugeid <> long(App.is_parametros[10]) THEN
		App.srvmsgbox.MessageBox("No se permite modificar la Unidad de Gestión de la máquina",'',Information!)
		RETURN -1
	END IF
ELSE
	dw_1.object.ugeid[1]       = long(App.is_parametros[10])
END IF


//dw_1.object.atmaquina_maqfecnguia[1] = Date(App.is_parametros[11])
//dw_1.object.socrazons[1]   		= App.is_parametros[12] viene un código
il_socid									= long(App.is_parametros[11])

//PBD 03.03.2008 No se permite modificar la Sociedad por Siebel
IF ii_modo = II_MODIFICACION THEN
	ll_socid = dw_1.GetItemNumber(1,"htsocimaq_socid")
	IF ll_socid <> long(App.is_parametros[11]) THEN
		App.srvmsgbox.MessageBox("No se permite modificar la Sociedad de la máquina",'',Information!)
		RETURN -1
	END IF
ELSE
	dw_1.object.htsocimaq_socid[1]	= long(App.is_parametros[11])
END IF

App.il_ugeid 					= long(App.is_parametros[10])

// V1.1
dw_1.object.campo2codmaq[1] = App.is_parametros[12]


/*maqid     //Id maquina en Siccod  			Integer
crmmaqid 	//id maquina en siebel  			varchar(30)
tmoid       //ID Modelo en SICCOD 				Integer
maqnserie   //Año             					Char(10)
maqletser   //Letra					   			Char(1)
maqsersap  	//Serie  		  						Varchar(10)
coaid    	//Comunidad autónoma    			Integer
fypidpro 	//Proveedor								Integer
maqfecfab  	//Fecha de fabricación				Date
ugeid    	//Unidad de gestión					Integer
NO NO NO maqfecnguia	//Fecha de recepción de albarán	Date
socrazons	//Sociedad (xtcomunidad)			Integer
*/

Return 1




end function

public function integer of_abrirmaquina ();//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			w_form_maquina
//
//	Función:			of_abrirmaquina
//
//	Descripción	  : Cargamos en pantalla los datos del mantenimiento
//
//	Usada en:	   Mantenimiento de máquinas. Alta/Modificación
//
//	Argumentos:		(None)
//					  
//	Retorno:			0 OK													<br></br>
//						1 Error												<br></br>
//																				<br></br><div><b>
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios									</div><div>
//	--------	--------	---------------------------------		</div><div>
//	PBD 		05/10/07		Creación		</div>
//
///////////////////////////////////////////////////////////////////////////////
Integer 							li_valor, li_retorno
long								ll_maqid
Blob    							lb_blobModelo

dwitemstatus					ll_status
n_cst_do_crm_maquina 		luo_do_crm_maquina

IF Long(App.is_parametros[1]) = 0 THEN
	ii_modo = II_ALTA
ELSE
	ii_modo = II_MODIFICACION
	ll_maqid = long(App.is_parametros[1])
	
	gb_1.Visible = FALSE
	dw_componente.Visible = FALSE	
END IF


App.inv_Connect.of_CreateInstanceDatos(luo_do_crm_maquina,&
		"n_cst_do_crm_maquina")

/*
Si estamos en alta asignamos los valores SetItem* y luego obtenemos
los dddw

En modificación hacemos un retrieve de BBDD y luego los SetItem*
*/

IF of_validadatos() = FALSE THEN
	RETURN -1
END IF

IF of_validacampos() = FALSE THEN
	RETURN -1
END IF


IF ii_modo = II_ALTA THEN
	li_retorno = of_asigna_valores()


	If li_retorno < 0 Then
		App.inv_Connect.of_DestroyInstance(luo_do_crm_maquina)
		App.of_parametro_retorno(This, App.ii_valor)
		RETURN -1
	END IF

	if of_rellenarestodatos(luo_do_crm_maquina) = -1 then
		Return -1
	end if
	
	dw_1.GetFullState(lb_blobModelo) 
	li_valor = luo_do_crm_maquina.of_recuperadddw(lb_blobModelo)
	THIS.dw_1.SetFullState(lb_blobModelo) 
	
ELSEIF ii_modo = II_MODIFICACION THEN
	
	luo_do_crm_maquina.of_setDataobject(dw_1.dataobject)
	
	luo_do_crm_maquina.of_addwhere( "atmaquina.maqid = " + string(ll_maqid))
	li_valor = luo_do_crm_maquina.of_retrieveblob(lb_blobModelo)
	
	dw_1.SetFullState(lb_blobModelo)
	
	ll_status = dw_1.GetItemStatus(1,0, Primary!)
	
	IF li_valor >= 0 THEN
		li_retorno = of_asigna_valores()
		
		If li_retorno < 0 Then
			App.inv_Connect.of_DestroyInstance(luo_do_crm_maquina)
			App.of_parametro_retorno(This, App.ii_valor)
			RETURN -1
		END IF
		
	END IF
	
	if of_rellenarestodatos(luo_do_crm_maquina) = -1 then
		Return -1
	end if

	ll_status = dw_1.GetItemStatus(1,0, Primary!)	

/*Recuperamos los datawindows secundarios en el mantenimiento*/

	of_retrieve_sitfismaq(ll_maqid)
	of_retrieve_sitcirmaq(ll_maqid)
	of_retrieve_sitlegalmaq(ll_maqid)
	of_retrieve_tercero(ll_maqid)
		
ll_status = dw_1.GetItemStatus(1,0, Primary!)
END IF

App.inv_Connect.of_DestroyInstance(luo_do_crm_maquina)

RETURN 0
end function

public function string of_setcodmaq (long al_row, n_cst_do_crm_maquina an_uo_maquina);//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			w_form_maquina
//
//	Función:			of_setcodmaq
//
//	Descripción	  : Cargamos el dato calculado del Codmaq (nº serie SAP)
//
//	Usada en:	   Mantenimiento de máquinas. Alta/Modificación
//
//	Argumentos:		al_row			long							Fila del datawindow a rellenar
//						an_uo_maquina	n_cst_do_crm_maquina		Componente de máquinas
//					  
//	Retorno:			0 OK													<br></br>
//						1 Error												<br></br>
//																				<br></br><div><b>
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios									</div><div>
//	--------	--------	---------------------------------		</div><div>
//	PBD 		05/10/07		Creación		</div>
//
///////////////////////////////////////////////////////////////////////////////
long			ll_modelo, ll_comunidad
string		ls_seriemodelo, ls_serieSAP, lsRefSAP, ls_tmatipmaq, ls_campo2codmaq

ll_modelo = dw_1.GetItemNumber(al_row, "tmoid")
ll_comunidad = dw_1.GetItemNumber(al_row, "coaid")
ls_SerieModelo = dw_1.GetItemString(al_row, "maqnserie")
ls_SerieSAP = dw_1.GetItemString(al_row, "maqsersap")
ls_campo2codmaq = dw_1.GetItemString(al_row, "campo2codmaq")

if IsNull(ls_campo2codmaq) or Trim(ls_campo2codmaq) = '' then
	lsRefSAP = an_uo_maquina.of_setcodmaq(1, 'I', ll_modelo, ll_comunidad,  &
	ls_SerieModelo, ls_SerieSAP)	
else
	lsRefSAP = an_uo_maquina.of_setcodmaq(1, 'I', ll_modelo, ll_comunidad,  &
	ls_SerieModelo, ls_SerieSAP, ls_campo2codmaq)		
end if



Return lsRefSAP
end function

public function integer of_rellenarestodatos (n_cst_do_crm_maquina an_uo_maquina);//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			w_form_maquina
//
//	Función:			of_abrirmaquina
//
//	Descripción	  :Rellenamos los campos calculados de máquina
//
//	Usada en:	   Mantenimiento de máquinas. Alta/Modificación
//
//	Argumentos:		an_uo_maquina		n_cst_do_crm_maquina		Componente a usar
//					  
//	Retorno:			0 OK													<br></br>
//						1 Error												<br></br>
//																				<br></br><div><b>
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios									</div><div>
//	--------	--------	---------------------------------		</div><div>
//	PBD 		05/10/07		Creación		</div>
//
///////////////////////////////////////////////////////////////////////////////
integer			li_retorno, li_barra1, li_barra2, li_barra3
long				ll_tmoid, ll_monid, ll_coaid, i, ll_total, ll_fypidfab, ll_null, ll_ins, ll_ret
string			ls_codsap, ls_tmodescri, ls_tmadescri, ls_coaid_ori, ls_maqsersap, ls_tmatipmaq
string			ls_modify, ls_error, ls_info, ls_codmaq
string			ls_maqnserie, ls_year_ori, ls_numero_ori
decimal			ld_porcepremios

long				ll_hmcid[]
string			ls_homologaciones[]
string			ls_tmomatnr, ls_modelo_ori
boolean			lb_cambiacodmaq
string			ls_mensaje
Blob							lb_datos
DataStore					lds_datos
DataWindowChild			ldwc_child
neg_parametros				lnv_parametros
n_cst_do_modecomu			luo_modecomu

SetNull(ll_null)
	
/*NÓTESE QUE SI EL USUARIO TIENE VARIOS VALORES DE HOMOLOGACIÓN EL CAMPO HMCID NO SERÁ
CORRECTO. ESTO SE CORRIGE LOCALIZANDO ESE VALOR EN EL UEPREUPDATEVALID DE n_cst_do_cm_maquina*/
//Descripciones de modelo/tipomáquina
ll_tmoid = dw_1.GetItemNumber(1,"tmoid")
ll_coaid = dw_1.GetItemNumber(1,"coaid")

IF ii_modo = II_ALTA THEN
	//Código de máquina
	ls_codsap = of_setcodmaq(1, an_uo_maquina)
	
	dw_1.SetItem(1,"codmaq", ls_codsap)
END IF


li_retorno = an_uo_maquina.of_datosmodelo(ll_tmoid, ls_tmodescri, &
						ls_tmadescri, ll_monid, ll_fypidfab,ld_porcepremios,ls_tmomatnr, ls_tmatipmaq)

if ls_tmatipmaq = 'B' and ii_modo = II_ALTA then
	gb_1.Visible = TRUE
	dw_componente.Visible = TRUE
	// Cargamos los componentes
	App.inv_Connect.of_CreateInstanceAppl(lnv_parametros, 'neg_parametros')
	ll_ret = lnv_parametros.of_GetComponentesMaquina(lb_datos, ls_error)
	if ll_ret = 1 then
		lds_datos = CREATE DataStore
		lds_datos.SetFullState(lb_datos)
		ll_total = lds_datos.RowCount()
		
		dw_componente.GetChild("comid", ldwc_child)
		ll_ins = ldwc_child.InsertRow(0)
		ldwc_child.SetItem(ll_ins, "comid", 0)
		ldwc_child.SetItem(ll_ins, "comdescri", '<Ninguno>')
		// los cargo en la child
		for i = 1 to ll_total
			if lds_datos.Object.tcmid[i] = 4 then
				ll_ins = ldwc_child.InsertRow(0)
				ldwc_child.SetItem(ll_ins, "comid", lds_datos.Object.comid[i])
				ldwc_child.SetItem(ll_ins, "comdescri", lds_datos.Object.comdescri[i])
			end if
		next
		ldwc_child.SetRow(1)
		dw_componente.Object.comid[1] = 0
		
		DESTROY lds_datos
	end if
	App.inv_Connect.of_DestroyInstance(neg_parametros)
	
else
	gb_1.Visible = FALSE
	dw_componente.Visible = FALSE
end if

IF li_retorno = 0 THEN
	dw_1.SetItem(1,"tmodescri", ls_tmodescri)
	dw_1.SetItem(1,"tmadescri", ls_tmadescri)
	dw_1.SetItem(1,"monid", ll_monid)
	//PBD 18.04.2008
	dw_1.SetItem(1,"maqporpre", ld_porcepremios)
	//PBD 19.03.2008
	dw_1.SetItem(1,"fypidfab", ll_fypidfab)
	IF IsNull(dw_1.GetItemNumber(1,"fypidpro")) OR dw_1.GetItemNumber(1,"fypidpro") = 0 THEN
		dw_1.SetItem(1,"fypidpro",ll_fypidfab )
	END IF

	// V1.1.3
	dw_1.SetItem(1,"tmatipmaq", ls_tmatipmaq)
END IF
if ls_tmatipmaq = 'S' then
	if IsNull(App.is_parametros[12]) or Trim(App.is_parametros[12]) = '' then
		App.srvMsgBox.MessageBox(App.MsgBoxTitle, "La máquina es de tipo S y es obligatorio el codigo de AADD para el código de máquina", "", Exclamation!)
		Return -1
	end if
elseif ls_tmatipmaq = 'B' then
	if IsNull(App.is_parametros[7]) or long(App.is_parametros[7]) = 0 then
		App.srvMsgBox.MessageBox(App.MsgBoxTitle, "La máquina es de tipo B y es obligatorio la comunidad autónoma", "", Exclamation!)
		Return -1
	end if
	App.is_parametros[12] = App.is_parametros[7]
	dw_1.object.campo2codmaq[1] = App.is_parametros[12]
end if

//03.03.2008 Rellenar la homologación por comunidad

App.inv_Connect.of_CreateInstanceDatos(luo_modecomu,"n_cst_do_modecomu")

li_retorno = luo_modecomu.of_gethomologaciones(ll_tmoid, ll_coaid, ls_homologaciones[], ll_hmcid[])

IF li_retorno < 0 THEN
	ls_error = luo_modecomu.of_geterrortexto()
	ls_info = luo_modecomu.of_geterrorinfo()
	RETURN -1
END IF

App.inv_Connect.of_DestroyInstance(luo_modecomu)

ll_total = Upperbound(ls_homologaciones[])

IF ll_total > 0 THEN

	ls_modify = "gtmodecomu_hmcnumhom.Values = '"
	
	FOR i = 1 TO ll_total
		ls_modify +=  ls_homologaciones[i] + "~t" + ls_homologaciones[i] 
		IF i < ll_total THEN ls_modify += "/"
	NEXT
	
	ls_modify +="'"

	IF ll_total > 1 THEN
		ls_modify += " gtmodecomu_hmcnumhom.TabSequence = 5 "+ &
						"gtmodecomu_hmcnumhom.background.color= '16777215' " + &
						"gtmodecomu_hmcnumhom.ddlb.useasborder=yes"
		
//		//Reseteamos para que se calcule de nuevo en el update
//		IF dw_1.GetItemNumber(1, "hmcid") <> ll_hmcid[1] THEN
//			dw_1.SetItem(1, "hmcid",ll_null)
//		END IF
		
	ELSEIF ll_total = 1 THEN
		dw_1.SetItem(1, "gtmodecomu_hmcnumhom", ls_homologaciones[1])
		dw_1.SetItem(1, "hmcid", ll_hmcid[1])
	END IF
	
	ls_modify = dw_1.Modify(ls_modify)
ELSE
	//Si no hay homologaciones y estamos en modificación, hay que resetear el valor anterior
	dw_1.SetItem(1, "gtmodecomu_hmcnumhom", "")
	dw_1.Setitem(1,"hmcid", ll_null)
END IF

//PBD 13.02.2009 Si en modificación se cambia el modelo, la comunidad o el año, hay que cambiar el codmaq
IF ii_modo = II_MODIFICACION THEN
	ls_codmaq = dw_1.GetItemString(1,"codmaq")
	
	li_barra1 = pos(ls_codmaq,"/")
	li_barra2 = pos(ls_codmaq,"/",li_barra1 + 1)
	li_barra3 = pos(ls_codmaq,"/",li_barra2 + 1)
	
//	1003940/05/2009/00860                        
	
	ls_maqnserie = trim(dw_1.GetItemString(1,"maqnserie"))
	ls_maqsersap = trim(dw_1.GetItemString(1,"maqsersap"))
	
	ls_modelo_ori = mid(ls_codmaq,1,li_barra1 -1)
	ls_coaid_ori = mid(ls_codmaq,li_barra1 + 1 , li_barra2 -li_barra1 -1)
	ls_year_ori = mid(ls_codmaq,li_barra2 + 1 , li_barra3 -li_barra2 -1)
	ls_numero_ori = trim(mid(ls_codmaq,li_barra3 +1))
	
	IF string(ll_coaid,"00") <> ls_coaid_ori THEN
		lb_cambiacodmaq = TRUE
		ls_mensaje = "Se ha realizado un cambio en la comunidad autónoma de la máquina."
	ELSEIF ls_modelo_ori <> ls_tmomatnr THEN
		lb_cambiacodmaq = TRUE
		ls_mensaje = "Se ha realizado un cambio en el modelo de la máquina."
	ELSEIF ls_year_ori <> ls_maqnserie THEN 
		lb_cambiacodmaq = TRUE	
	ELSEIF ls_maqsersap <> ls_numero_ori THEN 
		lb_cambiacodmaq = TRUE	
	END IF
	
	IF lb_cambiacodmaq = TRUE THEN
		// Ahora se compone segun el tipo de maquina.
//		ls_codmaq = ls_tmomatnr + "/" + string(ll_coaid,"00") + "/" + ls_maqnserie + "/" + ls_maqsersap
		if dw_1.Object.tmatipmaq[1] = 'S' then
			ls_codmaq = ls_tmomatnr + "/" + Left(dw_1.GetItemString(1, 'campo2codmaq') + "00", 2) + "/" + ls_maqnserie + "/" + ls_maqsersap
		else
			ls_codmaq = ls_tmomatnr + "/" + string(ll_coaid,"00") + "/" + ls_maqnserie + "/" + ls_maqsersap
		end if
		dw_1.SetItem(1,"codmaq",ls_codmaq)
		IF ls_mensaje <> "" THEN	&
		App.srvMsgBox.MessageBox(App.MsgBoxTitle, ls_mensaje +" Deberá cambiar la homologación de la máquina.", "", Information!, Ok!)
	END IF
END IF




RETURN 0
end function

public function integer of_retrieve_sitfismaq (long al_maqid);n_cst_do_historialmaquina			luo_sitfismaq
blob								lb_blobZona


SetPointer(HourGlass!)

App.inv_Connect.of_CreateInstanceDatos(luo_sitfismaq,&
		"n_cst_do_historialmaquina")

luo_sitfismaq.of_setdataobject("d_do_ubicacion_maq_basico")
luo_sitfismaq.of_addwhere ("htubicacionmaq.maqid = " + string(al_maqid))
luo_sitfismaq.of_RetrieveBlob(lb_blobZona)

App.inv_Connect.of_DestroyInstance(luo_sitfismaq)

THIS.dw_fisica.SetFullState(lb_blobZona) 


RETURN 0
end function

public function integer of_retrieve_sitcirmaq (long al_maqid);n_cst_do_sitcirmaquina			luo_sitcirmaq
blob								lb_blobZona


SetPointer(HourGlass!)

App.inv_Connect.of_CreateInstanceDatos(luo_sitcirmaq,&
		"n_cst_do_sitcirmaquina")

luo_sitcirmaq.of_setDataobject("d_do_lst_sitcirmaquina")
luo_sitcirmaq.of_addwhere ("(htsitcirmaq.scmfecfin is NULL) and htsitcirmaq.maqid = " + string(al_maqid))
luo_sitcirmaq.of_RetrieveBlob(lb_blobZona)

App.inv_Connect.of_DestroyInstance(luo_sitcirmaq)

THIS.dw_circunstancial.SetFullState(lb_blobZona) 


RETURN 0
end function

public function integer of_retrieve_sitlegalmaq (long al_maqid);n_cst_do_sitlegalmaquina			luo_sitlegalmaq
blob								lb_blobZona


SetPointer(HourGlass!)

App.inv_Connect.of_CreateInstanceDatos(luo_sitlegalmaq,&
		"n_cst_do_sitlegalmaquina")

luo_sitlegalmaq.of_setDataobject("d_do_lst_sitlegalmaquina")
luo_sitlegalmaq.of_addwhere ("(htsitlegmaq.slmfecfin is NULL) and htsitlegmaq.maqid = " + string(al_maqid))
luo_sitlegalmaq.of_RetrieveBlob(lb_blobZona)

App.inv_Connect.of_DestroyInstance(luo_sitlegalmaq)

THIS.dw_legal.SetFullState(lb_blobZona) 


RETURN 0
end function

public function integer of_retrieve_tercero (long al_maqid);n_cst_do_elementogrptercero			luo_tercero
blob								lb_blobZona


SetPointer(HourGlass!)

App.inv_Connect.of_CreateInstanceDatos(luo_tercero,&
		"n_cst_do_elementogrptercero")

luo_tercero.of_setdataobject("d_do_elementogrupotercero_datosbasicos")
luo_tercero.of_addwhere ("htgrpeleter.maqid = " + string(al_maqid))
luo_tercero.of_RetrieveBlob(lb_blobZona)

App.inv_Connect.of_DestroyInstance(luo_tercero)

THIS.dw_tercero.SetFullState(lb_blobZona) 


RETURN 0
end function

public function integer of_crearcontadores ();long							lrow, ll_modid, ll_maqid, ll_ret
date							ld_Fecfab
n_cst_do_tconmaq			lnv_TConMaq
// Creamos una instancia de contadores de máquinas para
// crear los contadores de la máquina a partir de los contadores
// del modelo
SetPointer(HourGlass!)

lrow = dw_1.getrow()
if lrow = 0 or isnull(lrow) then return 1
ll_modid  = dw_1.GetItemNumber(lRow, "tmoid") 
ll_maqid  = dw_1.GetItemNumber(lRow, "maqid")
ld_Fecfab = dw_1.GetItemDate(lRow,   "maqfecfab")

// Buscamos los contadores y los creamos
App.inv_connect.of_CreateInstancedatos(lnv_TConMaq,"n_cst_do_tconmaq")

if lnv_TConMaq.of_getnumcontadores(ll_maqid) > 0 then
		App.inv_connect.of_DestroyInstancedatos(lnv_TConMaq)
		Return -1
End If
ll_ret = lnv_TConMaq.of_creaplantilla(ll_modid,ll_maqid,ld_FecFab)
if ll_ret < 0 then
	app.srvmsgbox.messagebox (This.Title, "No se han podido generar los contadores del modelo.")
	App.inv_connect.of_DestroyInstancedatos(lnv_TConMaq)
	Return -1
end if

App.inv_connect.of_DestroyInstancedatos(lnv_TConMaq)

RETURN 0
end function

public function boolean of_validacampos ();//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			w_form_maquina
//
//	Función:			of_validacampos
//
//	Descripción	  : Validamos que todos los parámetros tienen valores coherentes
//
//	Usada en:	   Apertura del mantenimiento a crear/modificar
//
//	Argumentos:		(None)
//					  
//	Retorno:																	<div>
//						TRUE		Si son correctos						</div><div>
//						FALSE		Si se produce algún error			</div><br></br>
//
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios									</div><div>
//	--------	--------	---------------------------------		</div><div>
//	PBD 		05/10/07		Creación		</div>
//
///////////////////////////////////////////////////////////////////////////////
boolean		lb_retorno = TRUE

/*is_campos =  { &
"ID Maquina", "ID Maquina Siebel", "Modelo", + &
"Año","Letra","Serie", + &
"Comunidad autónoma","Proveedor","Fecha de fabricación",+&
"Unidad de gestión","Sociedad"&
}*/

//Código de modelo
IF NOT of_isnumber(App.is_parametros[3]) THEN
	App.srvmsgbox.MessageBox("Código de modelo no válido",'',Information!)
	RETURN FALSE
END IF

//Comunidad autónoma
IF NOT of_isnumber(App.is_parametros[7]) THEN
	App.srvmsgbox.MessageBox("Comunidad autónoma no válida",'',Information!)
	RETURN FALSE
END IF

//Proveedor
IF NOT of_isnumber(App.is_parametros[8])  THEN
	App.srvmsgbox.MessageBox("Proveedor no válida",'',Information!)
	RETURN FALSE
END IF

//Fecha de fabricación
IF NOT IsDate(App.is_parametros[9]) THEN
	App.srvmsgbox.MessageBox("Fecha de fabricación no válida",'',Information!)
	RETURN FALSE
END IF

//Unidad de gestión
IF NOT of_isnumber(App.is_parametros[10]) THEN
	App.srvmsgbox.MessageBox("Unidad de gestión no válida",'',Information!)
	RETURN FALSE
END IF

//Sociedad
IF NOT of_isnumber(App.is_parametros[11]) THEN
	App.srvmsgbox.MessageBox("Sociedad no válida",'',Information!)
	RETURN FALSE
END IF



RETURN lb_retorno
end function

public function integer of_borrarmaquina (long al_maqid);//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			w_form_maquina
//
//	Evento:			of_borrarmaquina
//
//	Descripción	  : Borramos la máquina cuando se haya producido un error
//
//	Usada en:	   Mantenimiento de máquinas. Alta/Modificación
//
//	Argumentos:		(None)
//					  
//	Retorno:			(None)												
//																				<br></br><div><b>
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios									</div><div>
//	--------	--------	---------------------------------		</div><div>
//	PBD 		31/03/08		Creación		</div>
//
///////////////////////////////////////////////////////////////////////////////
long											ll_maqid, ll_ret
string											ls_error, ls_info

n_cst_do_crm_maquina					lnv_do_crm_maquina


App.inv_Connect.of_CreateInstanceDatos(lnv_do_crm_maquina,"n_cst_do_crm_maquina")

ll_ret = lnv_do_crm_maquina.of_borrar({al_maqid}, 1, TRUE, "atmaquina", "maqid", App.srvUsers.Codi)


IF ll_ret < 0 THEN
	ls_error = lnv_do_crm_maquina.of_geterrortexto()
	ls_info = lnv_do_crm_maquina.of_geterrorinfo()
END IF

App.inv_Connect.of_DestroyInstance(lnv_do_crm_maquina)

IF ll_ret >= 0 THEN
//	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  'Información almacenada satisfactoriamente')
		
ELSE
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  ls_error, ls_info)
	App.il_maqid = -1
	
END IF
RETURN ll_ret
end function

event m_accok;//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			w_form_maquina
//
//	Evento:			m_accok
//
//	Descripción	  : Guardamos los datos del mantenimiento
//
//	Usada en:	   Mantenimiento de máquinas. Alta/Modificación
//
//	Argumentos:		(None)
//					  
//	Retorno:			(None)												
//																				<br></br><div><b>
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios									</div><div>
//	--------	--------	---------------------------------		</div><div>
//	PBD 		05/10/07		Creación		</div>
//
///////////////////////////////////////////////////////////////////////////////
boolean										lb_error = FALSE
Blob											lb_blobModelo
Date											ld_nulo
long											ll_maqid, ll_ret, ll_comid, ll_nulo, ll_cmaid
string											ls_error, ls_info, ls_homologacion, ls_valor,	ls_clase
str_gtcompomaq								lstr_compomaq
str_interlocutor_eu								lstr_parametros
m_main										lm_menu
n_cst_do_crm_maquina					lnv_do_crm_maquina, lnv_do_local
neg_maquinas				lnv_maquina


dw_1.AcceptText()
/**************PRUEBA*********************************/

//	lstr_parametros.str_ugeid = App.il_ugeid
//	lstr_parametros.str_intid = ll_maqid
//	lstr_parametros.str_modo =	 ii_modo
//	lstr_parametros.str_socid =	 il_socid
//	lstr_parametros.str_fecha = dw_1.GetItemDate(1,"maqfecfab")
//	lstr_parametros.str_tag = "eu_maquina_r1"
//	
//	OpenWithParm (w_response_htcambugemaq, lstr_parametros)
//	RETURN
/**************PRUEBA*********************************/

IF dw_1.ModifiedCount() + dw_1.DeletedCount() = 0 THEN
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,"No se ha realizado ningún cambio")
	RETURN
END IF

//PBD 03.03.2008
ls_homologacion = dw_1.Describe("gtmodecomu_hmcnumhom.Values")
IF pos(ls_homologacion, "~t") > 0 THEN
	ls_valor = trim(left(ls_homologacion,pos(ls_homologacion, "~t") -1))
	IF ls_valor <> "" THEN
		ls_homologacion = dw_1.GetItemString(1, "gtmodecomu_hmcnumhom")
		IF IsNull(ls_homologacion) OR ls_homologacion = "" THEN
		//hay una lista de homologaciones y no ha seleccionado ninguna
			App.srvMsgBox.MessageBox(App.MsgBoxTitle,"No se ha seleccionado la homologación")
			dw_1.SetColumn("gtmodecomu_hmcnumhom")
			dw_1.SetFocus()
			RETURN
		END IF
	END IF
END IF
	
IF ii_modo = II_ALTA THEN
	if gb_1.Visible then
		ll_comid = dw_componente.Object.comid[1]
		if IsNull(ll_comid) or ll_comid = 0 then
			App.srvMsgBox.MessageBox(App.MsgBoxTitle,"No se ha seleccionado ningún componente.", Exclamation!)
			Return
		end if
	end if
end if

App.inv_Connect.of_CreateInstanceDatos(lnv_do_crm_maquina,"n_cst_do_crm_maquina")

dw_1.GetFullState(lb_blobModelo) 
ll_maqid = lnv_do_crm_maquina.of_updateblob(lb_blobModelo)

dw_1.SetFullState(lb_blobModelo) 

IF ll_maqid < 0 THEN
	ls_error = lnv_do_crm_maquina.of_geterrortexto()
	ls_info = lnv_do_crm_maquina.of_geterrorinfo()
else
	if ll_comid > 0 and NOT IsNull(ll_comid) then
		app.inv_connect.of_createInstanceAppl(lnv_maquina, 'neg_maquinas')
		SetNull(ll_nulo)
		SetNull(ld_nulo)

		lstr_compomaq.maqid = ll_maqid
		lstr_compomaq.comid = ll_comid
		lstr_compomaq.cmafecins = Date(App.is_parametros[9])
		lstr_compomaq.cmafecret = ld_nulo
		lstr_compomaq.motid = ll_nulo
//		if lnv_maquina.of_AltaComponente(ll_maqid, ll_comid, Date(App.is_parametros[9]), ld_nulo, ll_nulo, ls_error) = 1 then
		if lnv_maquina.of_altacomponente( lstr_compomaq, ll_cmaid, ls_error) = 1 then
			lnv_maquina.of_SetComplete()
		else			
			App.srvMsgBox.MessageBox(App.MsgBoxTitle,  'Error al generar componente. El proceso de alta de la máquina continuará.', Exclamation!)
			lnv_maquina.of_SetAbort()
		end if
		App.inv_Connect.of_DestroyInstance(lnv_maquina)
	end if
end if

App.inv_Connect.of_DestroyInstance(lnv_do_crm_maquina)

IF ll_maqid > 0 THEN
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  'Información de máquina almacenada satisfactoriamente')
		
	dw_1.ResetUpdate()
	
	lm_menu = THIS.MenuID
	lm_menu.m_03.m_0301.Enabled = FALSE

	IF ii_modo = II_ALTA THEN 
		
		ll_ret = of_crearcontadores()
		
		//Si da error ahora ya está grabada la máquina (atmaquina) con lo que es peor
		//el remedio (no dejar continuar) que la enfermedad
		
	END IF
	
	App.il_maqid = ll_maqid	//valor que se retornará a CRM
		
	lstr_parametros.str_ugeid = App.il_ugeid
	lstr_parametros.str_intid = ll_maqid
	lstr_parametros.str_modo =	 ii_modo
	lstr_parametros.str_socid =	 il_socid
	lstr_parametros.str_fecha = dw_1.GetItemDate(1,"maqfecfab")
	lstr_parametros.str_tag = "eu_maquina_r1"
	
	
		/*******************************************/
		/*************UNIDAD GESTION******************/
		/*******************************************/
	
	IF ii_modo = II_ALTA THEN	//25.02.2008 Sólo se abre en caso de alta
		//Unidades de Gestión
		OpenWithParm (w_response_htcambugemaq, lstr_parametros)
	END IF
	
	
		/*******************************************/
		/*************CONTADORES MAQUINA*************/
		/*******************************************/
	
	lstr_parametros.str_tag = "eu_maquina_r2"
	//Contadores por máquina (se muestran, ya están creados)
	OpenWithParm (w_response_tconmaq, lstr_parametros)
/*
No está cargada la tabla y no hay necesidad de abrir este mantenimiento
	//Modelos de contador
	OpenWithParm (w_response_newconmaq, lstr_parametros)
*/	
		/*******************************************/
		/*************REGIMEN MAQUINA****************/
		/*******************************************/
	lstr_parametros.str_tag = "eu_maquina_r3"
	
	OpenWithParm (w_response_htregimenmaq, lstr_parametros)
	
	IF App.il_maqid < 0 THEN
		lb_error = TRUE
		of_borrarmaquina(ll_maqid)
		//BORRAMOS Y SALIMOS
	END IF
		/*******************************************/
		/*************SOCIEDAD**********************/
		/*******************************************/
	lstr_parametros.str_tag = "eu_maquina_r4"
	IF lb_error = FALSE THEN	
		IF ii_modo = II_ALTA THEN	//25.02.2008 Sólo se abre en caso de alta
			OpenWithParm (w_response_socimaq, lstr_parametros)
		END IF
		
		IF App.il_maqid < 0 THEN
			lb_error = TRUE
			of_borrarmaquina(ll_maqid)
			//BORRAMOS Y SALIMOS
		END IF
	END IF
		/*******************************************/
		/*************EMPRESA OPERADORA**************/
		/*******************************************/
	lstr_parametros.str_tag = "eu_maquina_r5"
	
	IF lb_error = FALSE THEN
		IF ii_modo = II_ALTA THEN
		
			ls_clase = Message.PowerObjectParm.ClassName()
			
			IF ls_clase = lstr_parametros.ClassName() THEN
			
				lstr_parametros = Message.PowerObjectParm
			
				IF Isvalid(lstr_parametros) THEN
					IF ii_modo = II_ALTA THEN
						OpenWithParm (w_response_eomaq, lstr_parametros)
					END IF
				END IF
				
			END IF
			
		END IF
	END IF
	
	//25.01.2008 Al terminar la grabación, cerramos la ventana
	THIS.Event ue_exitapp()
	RETURN

ELSE
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  ls_error, ls_info)
	App.il_maqid = -1
	
END IF
end event

event ue_postopen;/*integer	li_retorno

li_retorno = of_abrirmaquina()

IF li_retorno < 0 THEN
	crm_siccod.il_codretorno = -1
	RETURN FALSE
END IF

RETURN TRUE*/ // FRG 04/12/2018 ya no hay entrada unica de maquina
return true
end event

on w_form_maquina.create
int iCurrent
call super::create
this.st_4=create st_4
this.st_5=create st_5
this.st_2=create st_2
this.dw_circunstancial=create dw_circunstancial
this.st_3=create st_3
this.dw_legal=create dw_legal
this.st_1=create st_1
this.dw_tercero=create dw_tercero
this.dw_fisica=create dw_fisica
this.dw_componente=create dw_componente
this.gb_1=create gb_1
iCurrent=UpperBound(this.Control)
this.Control[iCurrent+1]=this.st_4
this.Control[iCurrent+2]=this.st_5
this.Control[iCurrent+3]=this.st_2
this.Control[iCurrent+4]=this.dw_circunstancial
this.Control[iCurrent+5]=this.st_3
this.Control[iCurrent+6]=this.dw_legal
this.Control[iCurrent+7]=this.st_1
this.Control[iCurrent+8]=this.dw_tercero
this.Control[iCurrent+9]=this.dw_fisica
this.Control[iCurrent+10]=this.dw_componente
this.Control[iCurrent+11]=this.gb_1
end on

on w_form_maquina.destroy
call super::destroy
if IsValid(MenuID) then destroy(MenuID)
destroy(this.st_4)
destroy(this.st_5)
destroy(this.st_2)
destroy(this.dw_circunstancial)
destroy(this.st_3)
destroy(this.dw_legal)
destroy(this.st_1)
destroy(this.dw_tercero)
destroy(this.dw_fisica)
destroy(this.dw_componente)
destroy(this.gb_1)
end on

event ue_preopen;call super::ue_preopen;
//Cargo asín porque PB se está volviendo loco 
//al tratar de pintar los datawindows en pantalla (Bug del 10)

dw_1.dataobject = 'd_do_crm_maquina'
dw_fisica.dataobject = 'd_do_ubicacion_maq_basico'
dw_circunstancial.dataobject = 'd_do_lst_sitcirmaquina'
dw_legal.dataobject = 'd_do_lst_sitlegalmaquina'
dw_tercero.dataobject = 'd_do_elementogrupotercero_datosbasicos'


is_campos =  { &
"ID Maquina", "ID Maquina Siebel", "Modelo", + &
"Año","Letra","Serie", + &
"Comunidad autónoma","Proveedor","Fecha de fabricación",+&
"Unidad de gestión","Sociedad"&
, "Cod. AADD" &
}

ib_canbenull[5] = TRUE
ib_canbenull[8] = TRUE

ib_canbenull[7] = TRUE
ib_canbenull[12] = TRUE

RETURN TRUE
end event

event open;call super::open;MessageBox(this.title, 'La Entrada Unica de Maquinas desde SIEBEL ya no esta operativa')
Halt Close;
end event

type dw_1 from w_form_base`dw_1 within w_form_maquina
integer x = 9
integer y = 92
integer width = 1531
integer height = 1656
string dataobject = "d_do_crm_maquina"
end type

event dw_1::itemchanged;call super::itemchanged;long				ll_null
SetNull(ll_null)

//Si se cambia la homologación, hacemos nulo el Hmcid para que se 
//recalcule en el ueprepudatevalid
IF dwo.name = "gtmodecomu_hmcnumhom" THEN
	dw_1.SetItem(1, "hmcid",ll_null)
END IF
end event

type st_4 from statictext within w_form_maquina
integer x = 1541
integer y = 8
integer width = 1637
integer height = 80
boolean bringtotop = true
integer textsize = -10
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
long backcolor = 15780518
string text = "Situación Física"
boolean border = true
boolean focusrectangle = false
end type

type st_5 from statictext within w_form_maquina
integer x = 9
integer y = 8
integer width = 1531
integer height = 80
boolean bringtotop = true
integer textsize = -10
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
long backcolor = 15780518
string text = "Datos de la Máquina"
boolean border = true
boolean focusrectangle = false
end type

type st_2 from statictext within w_form_maquina
integer x = 1541
integer y = 668
integer width = 1637
integer height = 76
boolean bringtotop = true
integer textsize = -10
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
long backcolor = 15780518
string text = "Situación Circunstancial"
boolean border = true
boolean focusrectangle = false
end type

type dw_circunstancial from datawindow within w_form_maquina
integer x = 1541
integer y = 748
integer width = 1637
integer height = 436
integer taborder = 20
boolean bringtotop = true
string title = "none"
string dataobject = "d_do_lst_sitcirmaquina"
boolean livescroll = true
end type

type st_3 from statictext within w_form_maquina
integer x = 1541
integer y = 1184
integer width = 1637
integer height = 76
boolean bringtotop = true
integer textsize = -10
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
long backcolor = 15780518
string text = "Situación Legal/Documental"
boolean border = true
boolean focusrectangle = false
end type

type dw_legal from datawindow within w_form_maquina
integer x = 1541
integer y = 1260
integer width = 1637
integer height = 436
integer taborder = 20
boolean bringtotop = true
string title = "none"
string dataobject = "d_do_lst_sitlegalmaquina"
boolean livescroll = true
end type

type st_1 from statictext within w_form_maquina
integer x = 1541
integer y = 1692
integer width = 1637
integer height = 76
boolean bringtotop = true
integer textsize = -10
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
long backcolor = 15780518
string text = "Datos del Tercero"
boolean border = true
boolean focusrectangle = false
end type

type dw_tercero from datawindow within w_form_maquina
integer x = 1541
integer y = 1772
integer width = 1637
integer height = 344
integer taborder = 20
boolean bringtotop = true
string title = "none"
string dataobject = "d_do_elementogrupotercero_datosbasicos"
boolean livescroll = true
end type

type dw_fisica from datawindow within w_form_maquina
integer x = 1541
integer y = 80
integer width = 1637
integer height = 588
integer taborder = 20
boolean bringtotop = true
string title = "none"
string dataobject = "d_do_ubicacion_maq_basico"
boolean livescroll = true
end type

type dw_componente from datawindow within w_form_maquina
integer x = 41
integer y = 1816
integer width = 1454
integer height = 72
integer taborder = 30
boolean bringtotop = true
string title = "none"
string dataobject = "d_de_dddw_componentes_maquina"
boolean border = false
boolean livescroll = true
end type

event constructor;this.InsertRow(0)
end event

type gb_1 from groupbox within w_form_maquina
integer x = 18
integer y = 1744
integer width = 1499
integer height = 180
integer taborder = 30
integer textsize = -8
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Arial"
long textcolor = 33554432
long backcolor = 67108864
string text = "Componente Nuevo Reglamento"
end type


release 8;
datawindow(units=0 timer_interval=0 color=80269524 processing=0 HTMLDW=no print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no )
summary(height=0 color="536870912" )
footer(height=4 color="536870912" )
detail(height=524 color="536870912" )
table(column=(type=long updatewhereclause=yes name=htubicacionmaq_cumid dbname="htubicacionmaq.cumid" )
 column=(type=long updatewhereclause=yes name=maqid dbname="htubicacionmaq.maqid" )
 column=(type=long updatewhereclause=yes name=htubicacionmaq_ugeid dbname="htubicacionmaq.ugeid" )
 column=(type=char(1) updatewhereclause=yes name=htubicacionmaq_cummovrea dbname="htubicacionmaq.cummovrea" )
 column=(type=long updatewhereclause=yes name=locid dbname="htubicacionmaq.locid" )
 column=(type=long updatewhereclause=yes name=htubicacionmaq_almid dbname="htubicacionmaq.almid" )
 column=(type=datetime updatewhereclause=yes name=htubicacionmaq_cumfmovfi dbname="htubicacionmaq.cumfmovfi" )
 column=(type=char(30) updatewhereclause=yes name=atalmacen_almdescri dbname="htubicacionmaq.almdescri" )
 column=(type=char(35) updatewhereclause=yes name=atlocal_locnombre dbname="htubicacionmaq.locnombre" )
 column=(type=char(35) updatewhereclause=yes name=atlocal_locnomvia dbname="htubicacionmaq.locnomvia" )
 column=(type=char(6) updatewhereclause=yes name=atlocal_locnumvia dbname="htubicacionmaq.locnumvia" )
 column=(type=char(10) updatewhereclause=yes name=vtpostal_pobcodpos dbname="htubicacionmaq.pobcodpos" )
 column=(type=char(35) updatewhereclause=yes name=vtpostal_pobpoblac dbname="htubicacionmaq.pobpoblac" )
 column=(type=char(35) updatewhereclause=yes name=vtpostal_prvdescri dbname="htubicacionmaq.prvdescri" )
 column=(type=char(35) updatewhereclause=yes name=vtdireccion_domnomvia dbname="htubicacionmaq.domnomvia" )
 column=(type=char(6) updatewhereclause=yes name=vtdireccion_domnumvia dbname="htubicacionmaq.domnumvia" )
 column=(type=char(10) updatewhereclause=yes name=vtdireccion_pobcodpos dbname="htubicacionmaq.pobcodpos" )
 column=(type=char(35) updatewhereclause=yes name=vtdireccion_pobpoblac dbname="htubicacionmaq.pobpoblac" )
 column=(type=char(35) updatewhereclause=yes name=vtdireccion_paidescri dbname="htubicacionmaq.paidescri" )
 column=(type=char(35) updatewhereclause=yes name=vtpostal_paidescri dbname="htubicacionmaq.paidescri" )
 column=(type=char(35) updatewhereclause=yes name=vtdireccion_prvdescri dbname="htubicacionmaq.prvdescri" )
 column=(type=long updatewhereclause=yes name=vtdireccion_prvpretel dbname="htubicacionmaq.prvpretel" )
 column=(type=char(12) updatewhereclause=yes name=atlocal_loctelef1 dbname="htubicacionmaq.loctelef1" )
 column=(type=char(35) updatewhereclause=yes name=xtsitfis_sfidescri dbname="xtsitfis.sfidescri" )
 column=(type=long updatewhereclause=yes name=sfiid dbname="htubicacionmaq.sfiid" )
 retrieve=" SELECT htubicacionmaq.cumid,   
         htubicacionmaq.maqid,   
         htubicacionmaq.ugeid,   
         htubicacionmaq.cummovrea,   
         htubicacionmaq.locid,   
         htubicacionmaq.almid,   
         htubicacionmaq.cumfmovfi,   
         atalmacen.almdescri,   
         atlocal.locnombre,   
         atlocal.locnomvia,   
         atlocal.locnumvia,   
         vtpostal.pobcodpos,   
         vtpostal.pobpoblac,   
         vtpostal.prvdescri,   
         vtdireccion.domnomvia,   
         vtdireccion.domnumvia,   
         vtdireccion.pobcodpos,   
         vtdireccion.pobpoblac,   
         vtdireccion.paidescri,   
         vtpostal.paidescri,   
         vtdireccion.prvdescri,   
         vtdireccion.prvpretel,   
         atlocal.loctelef1,  
         xtsitfis.sfidescri,
			htubicacionmaq.sfiid
    FROM htubicacionmaq, 
			htsitmaq,
         xtsitfis ,
		   OUTER (atalmacen, vtdireccion), 
		   OUTER (atlocal, vtpostal) 
   WHERE ( xtsitfis.sfiid = htubicacionmaq.sfiid ) and  
			( htubicacionmaq.almid = atalmacen.almid ) and
			( atalmacen.domid = vtdireccion.domid ) and
			( htubicacionmaq.locid = atlocal.locid ) and
			( atlocal.pobsid = vtpostal.pobsid ) and
		   ( ( (htubicacionmaq.sfiid = 1 OR htubicacionmaq.sfiid = 2) AND
   		    (htsitmaq.cumidentrada = htubicacionmaq.cumid) and
			    (htsitmaq.fechasalida IS NULL)) OR
		     ( (htubicacionmaq.sfiid = 3) AND
   		    (htsitmaq.cumiddestruccion = htubicacionmaq.cumid)))" )
column(band=detail id=22 alignment="0" tabsequence=32766 border="0" color="0" x="389" y="220" height="60" width="480" format="[general]" html.valueishtml="0"  name=vtdireccion_prvpretel visible="1~tif (isnull(  htubicacionmaq_almid  ) or   htubicacionmaq_almid  =0, 0, 1)" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=9 alignment="0" tabsequence=32766 border="0" color="0" x="663" y="148" height="60" width="709" format="[general]" html.valueishtml="0"  name=atlocal_locnombre visible="1~tif (isnull( locid ) or  locid =0, 0, 1)"  slideleft=yes edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=8 alignment="0" tabsequence=32766 border="0" color="0" x="384" y="148" height="60" width="987" format="[general]" html.valueishtml="0"  name=atalmacen_almdescri visible="1~tif (isnull(  htubicacionmaq_almid  ) or   htubicacionmaq_almid  =0, 0, 1)" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
compute(band=detail alignment="1" expression="if (isnull(locid) or locid = 0,'Almacén','Local')"border="0" color="0" x="9" y="148" height="60" width="352" format="[GENERAL]" html.valueishtml="0"  name=compute_1 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
bitmap(band=detail filename="\Imatges\telefon.bmp" x="288" y="220" height="60" width="73" border="0"  name=p_1 visible="1" )
text(band=detail alignment="1" text="Fecha Entrada" border="0" color="0" x="9" y="76" height="60" width="352" html.valueishtml="0"  name=htubicacionmaq_cumfmovfi_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="79741120" )
text(band=detail alignment="1" text="Sit. Física" border="0" color="0" x="9" y="4" height="60" width="352" html.valueishtml="0"  name=xtsitfis_sfidescri_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="79741120" )
column(band=detail id=7 alignment="0" tabsequence=32766 border="0" color="0" x="384" y="76" height="60" width="430" format="dd/mm/yyyy" html.valueishtml="0"  name=htubicacionmaq_cumfmovfi visible="1" edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=no edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=24 alignment="0" tabsequence=32766 border="0" color="0" x="384" y="4" height="60" width="987" format="[general]" html.valueishtml="0"  name=xtsitfis_sfidescri visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
compute(band=detail alignment="0" expression="if ( sfiid=1 or sfiid=3 ,  
vtdireccion_pobcodpos + if (isnull(vtdireccion_pobpoblac),'',' - '+  vtdireccion_pobpoblac),
vtpostal_pobcodpos + if (isnull(vtpostal_pobpoblac), '', ' - '+  vtpostal_pobpoblac)
)"border="0" color="0" x="384" y="364" height="60" width="987" format="[GENERAL]" html.valueishtml="0"  name=compute_3 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
compute(band=detail alignment="0" expression="if ( sfiid=1 or sfiid=3,  
vtdireccion_domnomvia + if (isnull(vtdireccion_domnumvia),'',', '+ vtdireccion_domnumvia),
atlocal_locnomvia +if (isnull(atlocal_locnumvia), '', ', '+ atlocal_locnumvia )
)"border="0" color="0" x="384" y="292" height="60" width="987" format="[GENERAL]" html.valueishtml="0"  name=compute_2 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
bitmap(band=detail filename="\Imatges\Dirección.bmp" x="288" y="292" height="64" width="73" border="0"  name=p_2 visible="1" )
column(band=detail id=14 alignment="0" tabsequence=32766 border="0" color="0" x="384" y="436" height="60" width="992" format="[general]" html.valueishtml="0"  name=vtpostal_prvdescri visible="1~tif (isnull( locid ) or  locid =0, 0, 1)" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=21 alignment="0" tabsequence=32766 border="0" color="0" x="384" y="436" height="60" width="992" format="[general]" html.valueishtml="0"  name=vtdireccion_prvdescri visible="1~tif (isnull(  htubicacionmaq_almid  ) or   htubicacionmaq_almid  =0, 0, 1)" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=23 alignment="0" tabsequence=32766 border="0" color="0" x="389" y="220" height="60" width="480" format="[general]" html.valueishtml="0"  name=atlocal_loctelef1 visible="1~tif (isnull( locid ) or  locid =0, 0, 1)" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="2" text="-" border="0" color="0" x="599" y="148" height="60" width="46" html.valueishtml="0"  name=t_1 visible="1~tif (isnull( locid ) or  locid =0, 0, 1)"  slideleft=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=5 alignment="0" tabsequence=32766 border="0" color="0" x="384" y="144" height="60" width="201" format="[general]" html.valueishtml="0"  name=locid visible="1~tif (isnull( locid ) or  locid =0, 0, 1)"  slideleft=yes edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
bitmap(band=detail filename="\\Espmadssccsic6\siccodcal\fnt\cli\p_sic_siccodg\Imatges\Domic16.bmp" x="256" y="292" height="64" width="91" border="0"  name=p_4 visible="1" )
bitmap(band=detail filename="\\Espmadssccsic6\siccodcal\fnt\cli\p_sic_siccodg\Imatges\telefon.bmp" x="261" y="212" height="64" width="82" border="0"  name=p_3 visible="1" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" netscapelayers="0" )

release 8;
datawindow(units=0 timer_interval=0 color=16777215 processing=1 HTMLDW=no print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no grid.lines=0 )
header(height=80 color="80269524" )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=72 color="536870912~tif (isNull( htsitcirmaq_scmfecfin ), 16777215, 79741120)" )
table(column=(type=long update=yes updatewhereclause=yes key=yes name=htsitcirmaq_scmid dbname="htsitcirmaq.scmid" )
 column=(type=long update=yes updatewhereclause=yes name=maqid dbname="htsitcirmaq.maqid" )
 column=(type=long update=yes updatewhereclause=yes name=htsitcirmaq_sciid dbname="htsitcirmaq.sciid" )
 column=(type=date update=yes updatewhereclause=yes name=htsitcirmaq_scmfecini dbname="htsitcirmaq.scmfecini" )
 column=(type=char(10) update=yes updatewhereclause=yes name=htsitcirmaq_codusucid dbname="htsitcirmaq.codusucid" )
 column=(type=datetime update=yes updatewhereclause=yes name=htsitcirmaq_feccrereg dbname="htsitcirmaq.feccrereg" )
 column=(type=char(35) updatewhereclause=yes name=xtsitcir_scidescri dbname="xtsitcir.scidescri" )
 column=(type=date update=yes updatewhereclause=yes name=htsitcirmaq_scmfecfin dbname="htsitcirmaq.scmfecfin" )
 retrieve="PBSELECT( VERSION(400) TABLE(NAME=~"htsitcirmaq~" )  TABLE(NAME=~"xtsitcir~" ) COLUMN(NAME=~"htsitcirmaq.scmid~") COLUMN(NAME=~"htsitcirmaq.maqid~") COLUMN(NAME=~"htsitcirmaq.sciid~") COLUMN(NAME=~"htsitcirmaq.scmfecini~") COLUMN(NAME=~"htsitcirmaq.codusucid~") COLUMN(NAME=~"htsitcirmaq.feccrereg~") COLUMN(NAME=~"xtsitcir.scidescri~") COLUMN(NAME=~"htsitcirmaq.scmfecfin~")    JOIN (LEFT=~"xtsitcir.sciid~"    OP =~"=~"RIGHT=~"htsitcirmaq.sciid~" )) " update="htsitcirmaq" updatewhere=0 updatekeyinplace=no  sort="htsitcirmaq_scmfecini D xtsitcir_scidescri A " )
text(band=header alignment="0" text="Fecha Fin" border="4" color="0" x="1184" y="8" height="60" width="329" html.valueishtml="0"  name=htsitcirmaq_scmfecfin_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=header alignment="0" text="Fec. Inicio" border="4" color="0" x="846" y="8" height="60" width="329" html.valueishtml="0"  name=htsitcirmaq_scmfecini_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=header alignment="0" text="Situación Circunstancial" border="4" color="0" x="9" y="8" height="60" width="827" html.valueishtml="0"  name=xtsitcir_scidescri_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=7 alignment="0" tabsequence=32766 border="0" color="0" x="9" y="4" height="60" width="827" format="[general]" html.valueishtml="0"  name=xtsitcir_scidescri visible="1" edit.limit=35 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=4 alignment="0" tabsequence=32766 border="0" color="0" x="846" y="4" height="60" width="329" format="dd/mm/yyyy" html.valueishtml="0"  name=htsitcirmaq_scmfecini visible="1" edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=8 alignment="0" tabsequence=32766 border="0" color="0" x="1184" y="4" height="60" width="329" format="dd/mm/yyyy" html.valueishtml="0"  name=htsitcirmaq_scmfecfin visible="1" edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" netscapelayers="0" )

release 8;
datawindow(units=0 timer_interval=0 color=16777215 processing=1 HTMLDW=no print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no grid.lines=0 )
header(height=80 color="80269524" )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=72 color="536870912~tif (isNull(  htsitlegmaq_slmfecfin  ), 16777215, 79741120)" )
table(column=(type=long update=yes updatewhereclause=yes key=yes name=htsitlegmaq_slmid dbname="htsitlegmaq.slmid" )
 column=(type=long update=yes updatewhereclause=yes name=maqid dbname="htsitlegmaq.maqid" )
 column=(type=long update=yes updatewhereclause=yes name=htsitlegmaq_sleid dbname="htsitlegmaq.sleid" )
 column=(type=date update=yes updatewhereclause=yes name=htsitlegmaq_slmfecini dbname="htsitlegmaq.slmfecini" )
 column=(type=date update=yes updatewhereclause=yes name=htsitlegmaq_slmfecfin dbname="htsitlegmaq.slmfecfin" )
 column=(type=datetime update=yes updatewhereclause=yes name=htsitlegmaq_feccrereg dbname="htsitlegmaq.feccrereg" )
 column=(type=char(10) update=yes updatewhereclause=yes name=htsitlegmaq_codusucid dbname="htsitlegmaq.codusucid" )
 column=(type=char(35) updatewhereclause=yes name=xtsitlegal_sledescri dbname="xtsitlegal.sledescri" )
 retrieve="PBSELECT( VERSION(400) TABLE(NAME=~"htsitlegmaq~" )  TABLE(NAME=~"xtsitlegal~" ) COLUMN(NAME=~"htsitlegmaq.slmid~") COLUMN(NAME=~"htsitlegmaq.maqid~") COLUMN(NAME=~"htsitlegmaq.sleid~") COLUMN(NAME=~"htsitlegmaq.slmfecini~") COLUMN(NAME=~"htsitlegmaq.slmfecfin~") COLUMN(NAME=~"htsitlegmaq.feccrereg~") COLUMN(NAME=~"htsitlegmaq.codusucid~") COLUMN(NAME=~"xtsitlegal.sledescri~")    JOIN (LEFT=~"xtsitlegal.sleid~"    OP =~"=~"RIGHT=~"htsitlegmaq.sleid~" )) " update="htsitlegmaq" updatewhere=0 updatekeyinplace=no  sort="htsitlegmaq_slmfecini D xtsitlegal_sledescri A " )
text(band=header alignment="0" text="Sit. Legal/Documental" border="4" color="0" x="9" y="8" height="60" width="827" html.valueishtml="0"  name=xtsitlegal_sledescri_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header alignment="0" text="Fecha Inicio" border="4" color="0" x="846" y="8" height="60" width="329" html.valueishtml="0"  name=htsitlegmaq_slmfecini_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header alignment="0" text="Fecha Fin" border="4" color="0" x="1184" y="8" height="60" width="329" html.valueishtml="0"  name=htsitlegmaq_slmfecfin_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=8 alignment="0" tabsequence=10 border="0" color="0" x="9" y="4" height="60" width="827" format="[general]" html.valueishtml="0"  name=xtsitlegal_sledescri visible="1" edit.limit=35 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=4 alignment="0" tabsequence=20 border="0" color="0" x="846" y="4" height="60" width="329" format="dd/mm/yyyy" html.valueishtml="0"  name=htsitlegmaq_slmfecini visible="1" edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=5 alignment="0" tabsequence=30 border="0" color="0" x="1184" y="4" height="60" width="329" format="dd/mm/yyyy" html.valueishtml="0"  name=htsitlegmaq_slmfecfin visible="1" edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" netscapelayers="0" )

forward
global type w_response_htcambugemaq from w_response_base
end type
end forward

global type w_response_htcambugemaq from w_response_base
integer width = 2222
integer height = 1136
end type
global w_response_htcambugemaq w_response_htcambugemaq

type variables
long		il_maqid
date		idt_fechacambio


end variables

forward prototypes
public function integer of_botones (integer ai_modo)
public function integer of_asigna_ug_crm ()
public function integer of_setdefaultvalues ()
end prototypes

public function integer of_botones (integer ai_modo);/*Esta función habilita y deshabilita botones
en función del estado.
Se centraliza aquí para poder aplicar permisos
de acceso.*/

pb_alta.visible = FALSE
pb_borrar.visible = FALSE

CHOOSE CASE ai_modo
	CASE II_ACCESO_ALTA
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False	/*porque debe guardar
												 alguna antes de salir */
		pb_modificar.enabled = False
		pb_alta.enabled = False
		pb_borrar.enabled = False
		pb_salir.enabled = FALSE	//NUNCA permitimos salir
	
	CASE II_ACCESO_MODIFICACION
		pb_aceptar.enabled = True
		pb_cancelar.enabled = False
		pb_modificar.enabled = False
		pb_alta.enabled = False
		pb_borrar.enabled = False
		pb_salir.enabled = False	
		
	CASE II_INSERTROW
		pb_aceptar.enabled = False
		pb_cancelar.enabled = True
		pb_modificar.enabled = False
		pb_alta.enabled = False
		pb_borrar.enabled = True
		pb_salir.enabled = False
		
	CASE II_MODIFICAR
		pb_aceptar.enabled = True
		pb_cancelar.enabled = FALSE //Sólo podrá guardar la fecha. Sin vuelta atrás
		pb_modificar.enabled = False
		pb_alta.enabled = False
		pb_borrar.enabled = False
		pb_salir.enabled = False
		
	CASE II_MODIFICAR_CANCELABLE
		pb_aceptar.enabled = True
		pb_cancelar.enabled = TRUE
		pb_modificar.enabled = False
		pb_alta.enabled = False
		pb_borrar.enabled = False
		pb_salir.enabled = False
		
	CASE II_PREPARED_BORRABLE
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = True
		pb_alta.enabled = True
		pb_borrar.enabled = True
		pb_salir.enabled = True
	
	CASE II_PREPARED_NOBORRABLE
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = True
		pb_alta.enabled = True
		pb_borrar.enabled = True
		pb_salir.enabled = True
		
	CASE II_TRASBORRAR
		pb_aceptar.enabled = FALSE
		pb_cancelar.enabled = FALSE
		pb_modificar.enabled = False
		pb_alta.enabled = True
		pb_borrar.enabled = True
		pb_salir.enabled = TRUE
		
	CASE II_TRASGUARDAR
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = True
		pb_alta.enabled = True
		pb_borrar.enabled = True
		pb_salir.enabled = True
		
		pb_aceptar.default = False
		pb_salir.default = True

END CHOOSE

RETURN 0
end function

public function integer of_asigna_ug_crm ();long			ll_total, i, ll_ugeid
boolean		lb_found = FALSE


ll_total = dw_1.RowCount()

FOR i = 1 TO ll_total
	ll_ugeid = dw_1.GetItemNumber(i, "ugeid")
	
	IF ll_ugeid = il_ugeid THEN
		lb_found = TRUE
		EXIT
	END IF
NEXT

IF lb_found = FALSE THEN
	i = dw_1.InsertRow(0)
	dw_1.SetItem(i, "ugeid", il_ugeid)
ELSE
	ib_pregunta_salir = FALSE
	//Provocamos el evento para activar los botones
	IF ii_modo = II_ACCESO_ALTA THEN
		dw_1.Event EditChanged (i, dw_1.Object.ugeid, String(il_ugeid))
	END IF
END IF

dw_1.SetRow(i)
dw_1.SetColumn("fcambio")
dw_1.SetFocus()

RETURN 0
end function

public function integer of_setdefaultvalues ();
//el interlocutor tiene que ser el que venga de la otra ventana
//para todas las filas que se creen
dw_1.Modify("maqid.Initial = '" + string(il_maqid) + "'")
dw_1.Modify('ugeid.protect ="0~tif (ugeid = ' + string(il_ugeid) + ', 1, 0)" ')

RETURN 0
end function

event ue_close;str_interlocutor_eu		lstr_interlocutor

il_ugeid = lstr_interlocutor.str_ugeid
idt_fechacambio  = lstr_interlocutor.str_fecha

Message.PowerObjectParm  = lstr_interlocutor

Close(This)




end event

event ue_insertrow;call super::ue_insertrow;dw_1.setcolumn('ugeid')

IF dw_1.RowCount() = 1 THEN
	dw_1.SetItem(1,"ugeid", il_ugeid)
END IF
end event

event ue_delete();Long	ll_fila

ll_fila = dw_1.GetRow()
IF ll_fila > 0 THEN
	IF dw_1.GetItemNumber(ll_fila, "ugeid") = il_ugeid THEN
		App.srvMsgBox.MessageBox(App.MsgBoxTitle, 'No está permitido eliminar ' + &
				'la Unidad de Gestión inicial')
		RETURN
	ELSE
		dw_1.deleterow(ll_fila)
	END IF
	
	IF ll_fila > 1 THEN
		dw_1.SelectRow(ll_fila, TRUE)
	ELSE
		dw_1.SelectRow(1, TRUE)
	END IF
END IF


f_desabled(dw_1)

of_botones(II_TRASBORRAR)
end event

event ue_save();long									ll_ugeloc
integer								li_retorno
blob									lblb_datos
n_cst_do_histcambuge_maq		luo_intuge

dw_1.AcceptText()

li_retorno = THIS.Event ue_presave()

IF li_retorno < 0 THEN RETURN

SetPointer(Hourglass!)

App.inv_Connect.of_CreateInstanceDatos(luo_intuge,"n_cst_do_histcambuge_maq")

dw_1.GetFullState(lblb_datos)

ll_ugeloc = luo_intuge.of_updateblob( lblb_datos)

IF ll_ugeloc >= 0 THEN
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  'Información almacenada correctamente.')
	IF dw_1.RowCount() > 0 THEN
		//asumimos la última fila como la cambiada
		idt_fechacambio = dw_1.GetItemDate(dw_1.RowCount(),"fcambio")
	END IF
	ib_pregunta_salir = FALSE
Else
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  luo_intuge.of_geterrortexto())
END IF
	
App.inv_Connect.of_DestroyInstance(luo_intuge)

IF ll_ugeloc < 0 THEN
	RETURN
END IF

THIS.Event ue_retrieve()

of_botones(II_TRASGUARDAR)

f_desabled(dw_1)
end event

event type integer ue_presave();long			ll_fila, ll_total
integer		li_retorno = 0
date			ldt_fecini, ldt_fecfin
string		ls_campo, ls_mensaje

SetPointer(Hourglass!)

ll_total = dw_1.RowCount()

FOR ll_fila = 1 TO ll_total
	ldt_fecini = dw_1.GetItemDate(ll_fila, "fcambio")
	
	IF IsNull(ldt_fecini) THEN
		ls_mensaje = "Debe introducir la fecha de inicio ."
		
		ls_campo = "fcambio"
		li_retorno = -1
		EXIT
	END IF
	
NEXT

IF li_retorno = -1 THEN
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  ls_mensaje)
	dw_1.SetFocus()
	dw_1.SetRow(ll_fila)
	dw_1.SetColumn(ls_campo)
END IF

RETURN li_retorno
end event

event ue_enabled;call super::ue_enabled;dw_1.SetRow(dw_1.GetRow())
dw_1.SetColumn('fcambio')
dw_1.SetFocus()
end event

event ue_retrieve;integer								li_ret
string								ls_where
blob									lblb_datos
n_cst_do_histcambuge_maq		luo_intuge

App.inv_Connect.of_CreateInstanceDatos(luo_intuge,"n_cst_do_histcambuge_maq")

ls_where = 'maqid = '  + string(il_maqid)
luo_intuge.of_Addwhere(ls_where)
li_ret = luo_intuge.of_Retrieveblob(lblb_datos)

dw_1.SetFullState(lblb_datos)

IF li_ret < 0 THEN
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  luo_intuge.of_geterrortexto())
END IF

//PBD 18.04.2008
//Filtramos las Unidades de Gestión en función del usuario
of_getugesusuario()

of_setdefaultvalues()

dw_1.ResetUpdate()

App.inv_Connect.of_DestroyInstance(luo_intuge)
end event

event open;call super::open;
long									ll_fila
integer								li_ret
blob									lblb_datos
str_interlocutor_eu					lstr_interlocutor
n_cst_do_unidadgestion			lnv_do_unidadgestion

is_mensaje_close = 'No se ha guardado unidad de gestión y es obligatoria.~r~n ¿Está seguro de salir?'


lstr_interlocutor = Message.PowerObjectParm

il_maqid = lstr_interlocutor.str_intid
il_ugeid = lstr_interlocutor.str_ugeid
ii_modo  = lstr_interlocutor.str_modo

Event ue_retrieve()

of_setdefaultvalues() //para que cree filas con intid relleno



IF ii_modo = II_ALTA THEN
	ll_fila = dw_1.InsertRow(0)

	//la unidad de gestión que venga del CRM no será modificable
	dw_1.SetItem(ll_fila, "ugeid", il_ugeid)
	
	of_botones(II_ACCESO_ALTA)
	dw_1.SetRow(dw_1.RowCount())
	dw_1.SetColumn("fcambio")
	dw_1.SetFocus()
	//PBD 18.04.2008
	//Filtramos las Unidades de Gestión en función del usuario
	of_getugesusuario()
ELSEIF ii_modo = II_MODIFICACION THEN 
	Event ue_retrieve()
	
	of_botones(II_ACCESO_MODIFICACION)
	of_asigna_ug_crm()
END IF

of_setdefaultvalues()

end event

on w_response_htcambugemaq.create
call super::create
end on

on w_response_htcambugemaq.destroy
call super::destroy
end on

type p_icono from w_response_base`p_icono within w_response_htcambugemaq
end type

type st_titulo from w_response_base`st_titulo within w_response_htcambugemaq
string text = "Histórico Unidades Gestión"
end type

type pb_borrar from w_response_base`pb_borrar within w_response_htcambugemaq
end type

type pb_modificar from w_response_base`pb_modificar within w_response_htcambugemaq
end type

type pb_salir from w_response_base`pb_salir within w_response_htcambugemaq
integer x = 1979
end type

type pb_aceptar from w_response_base`pb_aceptar within w_response_htcambugemaq
end type

type pb_cancelar from w_response_base`pb_cancelar within w_response_htcambugemaq
end type

type pb_alta from w_response_base`pb_alta within w_response_htcambugemaq
end type

type dw_1 from w_response_base`dw_1 within w_response_htcambugemaq
integer width = 2135
string dataobject = "d_do_htcambugemaq"
end type

event rowfocuschanged;setcolumn('ugeid')

end event

event dberror;Return 1
end event

event itemchanged;
Choose Case getcolumnname()
	Case 'ugeid', 'fcambio'
		of_botones(ii_modificar)
//		IF il_fila >1 THEN
//			pb_aceptar.enabled = True
//			pb_cancelar.enabled = False
//			pb_modificar.enabled = False
//			pb_alta.enabled = False
//			pb_borrar.enabled = True
//			pb_salir.enabled = False
//		Else
//			pb_aceptar.enabled = True
//			pb_cancelar.enabled = False
//			pb_modificar.enabled = False
//			pb_alta.enabled = False
//			pb_borrar.enabled = False
//			pb_salir.enabled = False	
//		END IF


End Choose		

end event

event editchanged;
Choose Case getcolumnname()
	Case 'ugeid', 'fcambio'
		of_botones(ii_modificar)
//		IF il_fila >1 THEN
//			pb_aceptar.enabled = True
//			pb_cancelar.enabled = False
//			pb_modificar.enabled = False
//			pb_alta.enabled = False
//			pb_borrar.enabled = True
//			pb_salir.enabled = False
//		Else
//			pb_aceptar.enabled = True
//			pb_cancelar.enabled = False
//			pb_modificar.enabled = False
//			pb_alta.enabled = False
//			pb_borrar.enabled = False
//			pb_salir.enabled = False	
//		END IF
End Choose	
end event

type st_fondo from w_response_base`st_fondo within w_response_htcambugemaq
end type


release 8;
datawindow(units=0 timer_interval=0 color=1073741824 processing=1 HTMLDW=no print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no grid.lines=0 selected.mouse=no )
header(height=72 color="67108864" )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=68 color="536870912" )
table(column=(type=long update=yes updatewhereclause=yes key=yes name=cugmid dbname="htcambugemaq.cugmid" )
 column=(type=long update=yes updatewhereclause=yes name=maqid dbname="htcambugemaq.maqid" )
 column=(type=long update=yes updatewhereclause=yes name=ugeid dbname="htcambugemaq.ugeid" )
 column=(type=date update=yes updatewhereclause=yes name=fcambio dbname="htcambugemaq.fcambio" )
 column=(type=datetime update=yes updatewhereclause=yes name=feccrereg dbname="htcambugemaq.feccrereg" )
 column=(type=char(10) update=yes updatewhereclause=yes name=codusucid dbname="htcambugemaq.codusucid" )
 retrieve="PBSELECT( VERSION(400) TABLE(NAME=~"htcambugemaq~" ) COLUMN(NAME=~"htcambugemaq.cugmid~") COLUMN(NAME=~"htcambugemaq.maqid~") COLUMN(NAME=~"htcambugemaq.ugeid~") COLUMN(NAME=~"htcambugemaq.fcambio~") COLUMN(NAME=~"htcambugemaq.feccrereg~") COLUMN(NAME=~"htcambugemaq.codusucid~")) " update="htcambugemaq" updatewhere=0 updatekeyinplace=no  sort="fcambio A " )
text(band=header alignment="0" text="Unidad de Gestión" border="4" color="33554432" x="9" y="8" height="60" width="987" html.valueishtml="0"  name=ugeid_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=header alignment="0" text="Fecha Cambio U.G." border="4" color="33554432" x="1006" y="8" height="60" width="457" html.valueishtml="0"  name=fcambio_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=3 alignment="0" tabsequence=10 border="0" color="33554432" x="9" y="4" height="60" width="987" format="[general]" html.valueishtml="0"  name=ugeid visible="1" dddw.name=d_dddw_unidadgestion dddw.displaycolumn=ugedescri dddw.datacolumn=ugeid dddw.percentwidth=0 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=no dddw.case=any dddw.nilisnull=yes dddw.imemode=0 dddw.vscrollbar=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=4 alignment="0" tabsequence=20 border="0" color="33554432" x="1006" y="4" height="60" width="457" format="dd/mm/yyyy" html.valueishtml="0"  name=fcambio visible="1" editmask.mask="dd/mm/yyyy" editmask.imemode=0 editmask.focusrectangle=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" netscapelayers="0" )

forward
global type w_response_htregimenmaq from w_response_base
end type
end forward

global type w_response_htregimenmaq from w_response_base
integer width = 2683
integer height = 1156
end type
global w_response_htregimenmaq w_response_htregimenmaq

type variables
long		il_maqid
end variables

forward prototypes
public function integer of_botones (integer ai_modo)
public function integer of_setdefaultvalues ()
end prototypes

public function integer of_botones (integer ai_modo);/*Esta función habilita y deshabilita botones
en función del estado.
Se centraliza aquí para poder aplicar permisos
de acceso.*/

IF ii_modo = II_ALTA THEN
	pb_modificar.visible = FALSE
END IF
pb_alta.visible = FALSE
pb_borrar.visible = FALSE

CHOOSE CASE ai_modo
	CASE II_ACCESO_ALTA
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False	/*porque debe guardar
												 alguna antes de salir */
		pb_modificar.enabled = False
		pb_alta.enabled = TRUE
		pb_borrar.enabled = TRUE
		pb_salir.enabled = TRUE	//Siempre permitimos salir
	
	CASE II_ACCESO_MODIFICACION
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = TRUE
		pb_alta.enabled = TRUE
		pb_borrar.enabled = TRUE
		pb_salir.enabled = TRUE	//Siempre permitimos salir
		
	CASE II_INSERTROW
		pb_aceptar.enabled = False
		pb_cancelar.enabled = True
		pb_modificar.enabled = False
		pb_alta.enabled = False
		pb_borrar.enabled = True
		pb_salir.enabled = TRUE	//Siempre permitimos salir
		
	CASE II_MODIFICAR
		pb_aceptar.enabled = True
		pb_cancelar.enabled = True
		pb_modificar.enabled = False
		pb_alta.enabled = False
		pb_borrar.enabled = False
		pb_salir.enabled = TRUE	//Siempre permitimos salir
		
	CASE II_PREPARED_BORRABLE
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = True
		pb_alta.enabled = True	
		pb_borrar.enabled = True
		pb_salir.enabled = True
	
	CASE II_PREPARED_NOBORRABLE
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = True
		pb_alta.enabled = True
		pb_borrar.enabled = True
		pb_salir.enabled = True
		
	CASE II_TRASBORRAR
		pb_aceptar.enabled = True
		pb_cancelar.enabled = True
		pb_modificar.enabled = False
		pb_alta.enabled = True
		pb_borrar.enabled = True
		pb_salir.enabled = TRUE	//Siempre permitimos salir
		
	CASE II_TRASGUARDAR
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = True
		pb_alta.enabled = True
		pb_borrar.enabled = True
		pb_salir.enabled = True
		
		pb_aceptar.default = False
		pb_salir.default = True

END CHOOSE

RETURN 0
end function

public function integer of_setdefaultvalues ();
//el interlocutor tiene que ser el que venga de la otra ventana
//para todas las filas que se creen
dw_1.Modify("maqid.Initial = '" + string(il_maqid) + "'")

RETURN 0
end function

event ue_close;str_interlocutor_eu		lstr_interlocutor

il_ugeid = lstr_interlocutor.str_ugeid

Message.PowerObjectParm  = lstr_interlocutor

Close(This)




end event

event ue_save();long							ll_regimen
integer						li_retorno
blob							lblb_datos
n_cst_do_hregimenmaq		luo_intuge


dw_1.AcceptText()

li_retorno = THIS.Event ue_presave()

IF li_retorno < 0 THEN RETURN

SetPointer(Hourglass!)

App.inv_Connect.of_CreateInstanceDatos(luo_intuge,"n_cst_do_hregimenmaq")

dw_1.GetFullState(lblb_datos)

ll_regimen = luo_intuge.of_updateblob( lblb_datos)

IF ll_regimen >= 0 THEN
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  'Información almacenada correctamente.')
	

	IF dw_1.RowCount() = 0 THEN
		ib_pregunta_salir = TRUE
	ELSE
		ib_pregunta_salir = FALSE
	END IF
	
	//PBD 31.10.2007 En este caso en concreto, tras guardar se cierra el mantenimiento
	Close(THIS)
	RETURN
	
Else
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  luo_intuge.of_geterrortexto())
	RETURN
END IF
	
App.inv_Connect.of_DestroyInstance(luo_intuge)


IF ll_regimen < 0 THEN
	RETURN
END IF

THIS.Event ue_retrieve()

of_botones(II_TRASGUARDAR)

f_desabled(dw_1)
end event

event ue_enabled;call super::ue_enabled;dw_1.SetRow(dw_1.GetRow())
dw_1.SetFocus()
end event

event ue_retrieve();integer						li_ret
string						ls_where
blob							lblb_datos
n_cst_do_hregimenmaq		luo_intuge

App.inv_Connect.of_CreateInstanceDatos(luo_intuge,"n_cst_do_hregimenmaq")

ls_where = 'maqid = '  + string(il_maqid)
luo_intuge.of_Addwhere(ls_where)
li_ret = luo_intuge.of_Retrieveblob(lblb_datos)

dw_1.SetFullState(lblb_datos)

IF li_ret < 0 THEN
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  luo_intuge.of_geterrortexto())
END IF

of_setdefaultvalues()

dw_1.ResetUpdate()

App.inv_Connect.of_DestroyInstance(luo_intuge)
end event

event open;call super::open;
long									ll_fila
integer								li_ret
blob									lblb_datos
str_interlocutor_eu					lstr_interlocutor
n_cst_do_unidadgestion			lnv_do_unidadgestion

is_mensaje_close = 'No se ha guardado el régimen de la máquina y ese dato es obligatorio.~r~n' + &  
							'Si sale sin guardar el régimen, se borrará la máquina del sistema.~r~n' + & 
							'¿Está seguro de salir?'

lstr_interlocutor = Message.PowerObjectParm

il_maqid = lstr_interlocutor.str_intid
il_ugeid = lstr_interlocutor.str_ugeid
ii_modo  = lstr_interlocutor.str_modo


if ii_modo = II_ALTA THEN
	ib_pregunta_salir = TRUE //No es obligatorio aunque sí necesario
ELSE
	ib_pregunta_salir = FALSE
END IF

Event ue_retrieve()

of_setdefaultvalues() //para que cree filas con intid relleno

IF ii_modo = II_ALTA THEN
	of_botones(II_ACCESO_ALTA)
	THIS.Event ue_insertRow()
	
	dw_1.SetRow(dw_1.RowCount())
	dw_1.SetFocus()
ELSEIF ii_modo = II_MODIFICACION THEN 
	Event ue_retrieve()
	
	of_botones(II_ACCESO_MODIFICACION)
	f_desabled(dw_1)
END IF

of_setdefaultvalues()

end event

on w_response_htregimenmaq.create
call super::create
end on

on w_response_htregimenmaq.destroy
call super::destroy
end on

event closequery;//Override ancestor script
integer			li_retorno

IF ib_pregunta_salir = TRUE THEN
	li_retorno = App.srvMsgBox.MessageBox(App.MsgBoxTitle,  &
	is_mensaje_close,	Question!, YesNo!, 2)
	
	IF li_retorno = 2 THEN
		RETURN 1
	ELSE
		//retornamos -1 y borramos la máquina
		App.il_maqid = -1
	END IF
END IF
end event

type p_icono from w_response_base`p_icono within w_response_htregimenmaq
end type

type st_titulo from w_response_base`st_titulo within w_response_htregimenmaq
string text = "Régimen de la Máquina"
end type

type pb_borrar from w_response_base`pb_borrar within w_response_htregimenmaq
end type

type pb_modificar from w_response_base`pb_modificar within w_response_htregimenmaq
end type

type pb_salir from w_response_base`pb_salir within w_response_htregimenmaq
integer x = 2537
end type

type pb_aceptar from w_response_base`pb_aceptar within w_response_htregimenmaq
end type

type pb_cancelar from w_response_base`pb_cancelar within w_response_htregimenmaq
end type

type pb_alta from w_response_base`pb_alta within w_response_htregimenmaq
end type

type dw_1 from w_response_base`dw_1 within w_response_htregimenmaq
integer width = 2642
string dataobject = "d_do_hregimenmaq"
end type

event dberror;Return 1
end event

event itemchanged;
//Choose Case getcolumnname()
//	Case 'ugeid', 'fcambio'
		of_botones(ii_modificar)
//		IF il_fila >1 THEN
//			pb_aceptar.enabled = True
//			pb_cancelar.enabled = False
//			pb_modificar.enabled = False
//			pb_alta.enabled = False
//			pb_borrar.enabled = True
//			pb_salir.enabled = False
//		Else
//			pb_aceptar.enabled = True
//			pb_cancelar.enabled = False
//			pb_modificar.enabled = False
//			pb_alta.enabled = False
//			pb_borrar.enabled = False
//			pb_salir.enabled = False	
//		END IF
//
//
//End Choose		

end event

event editchanged;
//Choose Case getcolumnname()
//	Case 'ugeid', 'fcambio'
		of_botones(ii_modificar)
//		IF il_fila >1 THEN
//			pb_aceptar.enabled = True
//			pb_cancelar.enabled = False
//			pb_modificar.enabled = False
//			pb_alta.enabled = False
//			pb_borrar.enabled = True
//			pb_salir.enabled = False
//		Else
//			pb_aceptar.enabled = True
//			pb_cancelar.enabled = False
//			pb_modificar.enabled = False
//			pb_alta.enabled = False
//			pb_borrar.enabled = False
//			pb_salir.enabled = False	
//		END IF
//End Choose	
end event

type st_fondo from w_response_base`st_fondo within w_response_htregimenmaq
end type


release 8;
datawindow(units=0 timer_interval=0 color=16777215 processing=1 HTMLDW=no print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no grid.lines=0 selected.mouse=no )
header(height=80 color="80269524" )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=72 color="536870912" )
table(column=(type=long update=yes updatewhereclause=yes key=yes name=hreid dbname="htregimenmaq.hreid" )
 column=(type=long update=yes updatewhereclause=yes name=maqid dbname="htregimenmaq.maqid" )
 column=(type=long update=yes updatewhereclause=yes name=esmid dbname="htregimenmaq.esmid" )
 column=(type=long update=yes updatewhereclause=yes name=motid dbname="htregimenmaq.motid" )
 column=(type=date update=yes updatewhereclause=yes name=hrefecins dbname="htregimenmaq.hrefecins" )
 column=(type=decimal(4) update=yes updatewhereclause=yes name=hreimporte dbname="htregimenmaq.hreimporte" )
 column=(type=long update=yes updatewhereclause=yes name=monid dbname="htregimenmaq.monid" )
 column=(type=datetime update=yes updatewhereclause=yes name=feccrereg dbname="htregimenmaq.feccrereg" )
 column=(type=char(10) update=yes updatewhereclause=yes name=codusucid dbname="htregimenmaq.codusucid" )
 column=(type=date update=yes updatewhereclause=yes name=hrefecfin dbname="htregimenmaq.hrefecfin" )
 retrieve="PBSELECT( VERSION(400) TABLE(NAME=~"htregimenmaq~" ) COLUMN(NAME=~"htregimenmaq.hreid~") COLUMN(NAME=~"htregimenmaq.maqid~") COLUMN(NAME=~"htregimenmaq.esmid~") COLUMN(NAME=~"htregimenmaq.motid~") COLUMN(NAME=~"htregimenmaq.hrefecins~") COLUMN(NAME=~"htregimenmaq.hreimporte~") COLUMN(NAME=~"htregimenmaq.monid~") COLUMN(NAME=~"htregimenmaq.feccrereg~") COLUMN(NAME=~"htregimenmaq.codusucid~") COLUMN(NAME=~"htregimenmaq.hrefecfin~")) " update="htregimenmaq" updatewhere=0 updatekeyinplace=yes  sort="hrefecins D esmid A " )
text(band=header alignment="0" text="Tipo Régimen" border="4" color="0" x="9" y="8" height="60" width="443" html.valueishtml="0"  name=esmid_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=header alignment="0" text="Fec. Inicio" border="4" color="0" x="1198" y="8" height="60" width="279" html.valueishtml="0"  name=hrefecins_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=header alignment="0" text="Importe Cuota" border="4" color="0" x="1783" y="8" height="60" width="384" html.valueishtml="0"  name=hreimporte_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=header alignment="0" text="Moneda" border="4" color="0" x="2176" y="8" height="60" width="384" html.valueishtml="0"  name=monid_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=header alignment="0" text="Fec.Fin." border="4" color="0" x="1486" y="8" height="60" width="288" html.valueishtml="0"  name=t_2 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header alignment="0" text="Motivo" border="4" color="0" x="462" y="8" height="60" width="727" html.valueishtml="0"  name=t_1 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=3 alignment="0" tabsequence=10 border="0" color="0" x="9" y="4" height="60" width="443" format="[general]" html.valueishtml="0"  name=esmid visible="1" dddw.name=d_dddw_estadosmaquina dddw.displaycolumn=esmdescri dddw.datacolumn=esmid dddw.percentwidth=125 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=yes dddw.case=any dddw.nilisnull=yes dddw.imemode=0 dddw.vscrollbar=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=5 alignment="0" tabsequence=30 border="0" color="0" x="1198" y="4" height="60" width="279" format="dd/mm/yyyy" html.valueishtml="0"  name=hrefecins visible="1" editmask.mask="dd/mm/yyyy" editmask.imemode=0 editmask.focusrectangle=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=6 alignment="1" tabsequence=40 border="0" color="0" x="1783" y="4" height="60" width="384" format="#,##0.00" html.valueishtml="0"  name=hreimporte visible="1" editmask.mask="#,###,###,###.00" editmask.imemode=0 editmask.focusrectangle=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=7 alignment="0" tabsequence=50 border="0" color="0" x="2176" y="4" height="60" width="384" format="[general]" html.valueishtml="0"  name=monid visible="1" dddw.name=d_dddw_moneda dddw.displaycolumn=mondescri dddw.datacolumn=monid dddw.percentwidth=200 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=no dddw.case=any dddw.nilisnull=yes dddw.imemode=0 dddw.vscrollbar=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=10 alignment="0" tabsequence=32766 border="0" color="0" x="1486" y="4" height="60" width="288" format="dd/mm/yyyy" html.valueishtml="0"  name=hrefecfin visible="1" editmask.mask="dd/mm/yyyy" editmask.imemode=0 editmask.focusrectangle=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="79741120" )
column(band=detail id=4 alignment="0" tabsequence=20 border="0" color="0" x="462" y="4" height="60" width="727" format="[general]" html.valueishtml="0"  name=motid visible="1" dddw.name=d_dddw_motivo_entradasistema dddw.displaycolumn=motdescri dddw.datacolumn=motid dddw.percentwidth=0 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=yes dddw.case=any dddw.imemode=0 dddw.vscrollbar=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" netscapelayers="0" )

forward
global type w_response_tconmaq from w_response_base
end type
end forward

global type w_response_tconmaq from w_response_base
integer width = 2683
integer height = 1144
end type
global w_response_tconmaq w_response_tconmaq

type variables
long		il_maqid

end variables

forward prototypes
public function integer of_botones (integer ai_modo)
public function integer of_setdefaultvalues ()
end prototypes

public function integer of_botones (integer ai_modo);/*Esta función habilita y deshabilita botones
en función del estado.
Se centraliza aquí para poder aplicar permisos
de acceso.*/

CHOOSE CASE ai_modo
	CASE II_ACCESO_ALTA
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False	/*porque debe guardar
												 alguna antes de salir */
		pb_modificar.enabled = False
		pb_alta.enabled = TRUE
		pb_borrar.enabled = TRUE
		pb_salir.enabled = TRUE	//Siempre permitimos salir
	CASE II_ACCESO_MODIFICACION
		/*
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = TRUE
		pb_alta.enabled = TRUE
		pb_borrar.enabled = TRUE
		pb_salir.enabled = TRUE	//Siempre permitimos salir
		*/
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = false
		pb_alta.enabled = false
		pb_borrar.enabled = false
		pb_aceptar.visible = False
		pb_cancelar.visible = False
		pb_modificar.visible = false
		pb_alta.visible = false
		pb_borrar.visible = false
		pb_salir.enabled = TRUE	//Siempre permitimos salir
		
	CASE II_INSERTROW
		pb_aceptar.enabled = False
		pb_cancelar.enabled = True
		pb_modificar.enabled = False
		pb_alta.enabled = False
		pb_borrar.enabled = True
		pb_salir.enabled = TRUE	//Siempre permitimos salir
		
	CASE II_MODIFICAR
		pb_aceptar.enabled = True
		pb_cancelar.enabled = True
		pb_modificar.enabled = False
		pb_alta.enabled = False
		pb_borrar.enabled = False
		pb_salir.enabled = TRUE	//Siempre permitimos salir
		
	CASE II_PREPARED_BORRABLE
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = True
		pb_alta.enabled = True	
		pb_borrar.enabled = True
		pb_salir.enabled = True
	
	CASE II_PREPARED_NOBORRABLE
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = True
		pb_alta.enabled = True
		pb_borrar.enabled = True
		pb_salir.enabled = True
		
	CASE II_TRASBORRAR
		pb_aceptar.enabled = True
		pb_cancelar.enabled = True
		pb_modificar.enabled = False
		pb_alta.enabled = True
		pb_borrar.enabled = True
		pb_salir.enabled = TRUE	//Siempre permitimos salir
		
	CASE II_TRASGUARDAR
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = True
		pb_alta.enabled = True
		pb_borrar.enabled = True
		pb_salir.enabled = True
		
		pb_aceptar.default = False
		pb_salir.default = True

END CHOOSE

RETURN 0
end function

public function integer of_setdefaultvalues ();
//el interlocutor tiene que ser el que venga de la otra ventana
//para todas las filas que se creen
dw_1.Modify("maqid.Initial = '" + string(il_maqid) + "'")

RETURN 0
end function

event ue_save();long							ll_regimen
integer						li_retorno
blob							lblb_datos
n_cst_do_tconmaq			luo_intuge


dw_1.AcceptText()

li_retorno = THIS.Event ue_presave()

IF li_retorno < 0 THEN RETURN

SetPointer(Hourglass!)

App.inv_Connect.of_CreateInstanceDatos(luo_intuge,"n_cst_do_tconmaq")

dw_1.GetFullState(lblb_datos)

ll_regimen = luo_intuge.of_updateblob( lblb_datos)

IF ll_regimen >= 0 THEN
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  'Información almacenada correctamente.')
	

	IF dw_1.RowCount() = 0 THEN
		ib_pregunta_salir = TRUE
	ELSE
		ib_pregunta_salir = FALSE
	END IF
Else
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  luo_intuge.of_geterrortexto())
	RETURN
END IF
	
App.inv_Connect.of_DestroyInstance(luo_intuge)


IF ll_regimen < 0 THEN
	RETURN
END IF

THIS.Event ue_retrieve()

of_botones(II_TRASGUARDAR)

f_desabled(dw_1)
end event

event ue_close;str_interlocutor_eu		lstr_interlocutor

il_ugeid = lstr_interlocutor.str_ugeid

Message.PowerObjectParm  = lstr_interlocutor

Close(This)




end event

event ue_retrieve();integer						li_ret
string						ls_where
blob							lblb_datos
n_cst_do_tconmaq			luo_intuge

App.inv_Connect.of_CreateInstanceDatos(luo_intuge,"n_cst_do_tconmaq")

ls_where = 'maqid = '  + string(il_maqid)
luo_intuge.of_Addwhere(ls_where)
li_ret = luo_intuge.of_Retrieveblob(lblb_datos)

dw_1.SetFullState(lblb_datos)

IF li_ret < 0 THEN
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  luo_intuge.of_geterrortexto())
END IF

of_setdefaultvalues()

dw_1.ResetUpdate()

App.inv_Connect.of_DestroyInstance(luo_intuge)
end event

event open;call super::open;
long									ll_fila
integer								li_ret
string 								ls_modify 
blob									lblb_datos
str_interlocutor_eu					lstr_interlocutor
n_cst_do_unidadgestion			lnv_do_unidadgestion


lstr_interlocutor = Message.PowerObjectParm

il_maqid = lstr_interlocutor.str_intid
il_ugeid = lstr_interlocutor.str_ugeid
ii_modo  = lstr_interlocutor.str_modo


ib_pregunta_salir = FALSE		//No es obligatorio aunque sí necesario


Event ue_retrieve()

of_setdefaultvalues() //para que cree filas con intid relleno

IF ii_modo = II_ALTA THEN
	//AMA 08/10/2018 NO QUIEREN QUE SALGAN EN LOS CONTADORES LOS BOTONES DE ALTA, MODIFICACION Y BAJA, ASI QUE UTILIZO LA OPCION QUE YA EXISTIA QUE HACE ESTO.
	//	of_botones(II_ACCESO_ALTA)
	////	of_botones(II_ACCESO_MODIFICACION)
	of_botones(II_ACCESO_MODIFICACION)
	f_desabled(dw_1)
	
	dw_1.SetRow(dw_1.RowCount())
	dw_1.SetFocus()
ELSEIF ii_modo = 1 THEN 
	Event ue_retrieve()
	
	of_botones(II_ACCESO_MODIFICACION)
	f_desabled(dw_1)
END IF

of_setdefaultvalues()

end event

on w_response_tconmaq.create
call super::create
end on

on w_response_tconmaq.destroy
call super::destroy
end on

event ue_postopen;call super::ue_postopen;//AMA 08/10/2018
pb_aceptar.event clicked( )
end event

type p_icono from w_response_base`p_icono within w_response_tconmaq
end type

type st_titulo from w_response_base`st_titulo within w_response_tconmaq
string text = "Mnto. Contadores por Máquina"
end type

type pb_borrar from w_response_base`pb_borrar within w_response_tconmaq
end type

type pb_modificar from w_response_base`pb_modificar within w_response_tconmaq
end type

type pb_salir from w_response_base`pb_salir within w_response_tconmaq
integer x = 2537
end type

type pb_aceptar from w_response_base`pb_aceptar within w_response_tconmaq
end type

type pb_cancelar from w_response_base`pb_cancelar within w_response_tconmaq
end type

type pb_alta from w_response_base`pb_alta within w_response_tconmaq
end type

type dw_1 from w_response_base`dw_1 within w_response_tconmaq
integer width = 2642
string dataobject = "d_do_contadormaquina"
end type

event dberror;Return 1
end event

event itemchanged;
//Choose Case getcolumnname()
//	Case 'ugeid', 'fcambio'
		of_botones(ii_modificar)
//		IF il_fila >1 THEN
//			pb_aceptar.enabled = True
//			pb_cancelar.enabled = False
//			pb_modificar.enabled = False
//			pb_alta.enabled = False
//			pb_borrar.enabled = True
//			pb_salir.enabled = False
//		Else
//			pb_aceptar.enabled = True
//			pb_cancelar.enabled = False
//			pb_modificar.enabled = False
//			pb_alta.enabled = False
//			pb_borrar.enabled = False
//			pb_salir.enabled = False	
//		END IF
//
//
//End Choose		

end event

event editchanged;
//Choose Case getcolumnname()
//	Case 'ugeid', 'fcambio'
		of_botones(ii_modificar)
//		IF il_fila >1 THEN
//			pb_aceptar.enabled = True
//			pb_cancelar.enabled = False
//			pb_modificar.enabled = False
//			pb_alta.enabled = False
//			pb_borrar.enabled = True
//			pb_salir.enabled = False
//		Else
//			pb_aceptar.enabled = True
//			pb_cancelar.enabled = False
//			pb_modificar.enabled = False
//			pb_alta.enabled = False
//			pb_borrar.enabled = False
//			pb_salir.enabled = False	
//		END IF
//End Choose	
end event

type st_fondo from w_response_base`st_fondo within w_response_tconmaq
end type


forward
global type w_response_newconmaq from w_response_base
end type
end forward

global type w_response_newconmaq from w_response_base
integer width = 2683
integer height = 1152
end type
global w_response_newconmaq w_response_newconmaq

type variables
long		il_maqid
date		id_fecha


end variables

forward prototypes
public function integer of_botones (integer ai_modo)
public function integer of_setdefaultvalues ()
end prototypes

public function integer of_botones (integer ai_modo);/*Esta función habilita y deshabilita botones
en función del estado.
Se centraliza aquí para poder aplicar permisos
de acceso.*/

CHOOSE CASE ai_modo
	CASE II_ACCESO_ALTA
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False	/*porque debe guardar
												 alguna antes de salir */
		pb_modificar.enabled = False
		pb_alta.enabled = TRUE
		pb_borrar.enabled = TRUE
		pb_salir.enabled = TRUE	//Siempre permitimos salir
	
	CASE II_ACCESO_MODIFICACION
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = TRUE
		pb_alta.enabled = TRUE
		pb_borrar.enabled = TRUE
		pb_salir.enabled = TRUE	//Siempre permitimos salir
		
	CASE II_INSERTROW
		pb_aceptar.enabled = False
		pb_cancelar.enabled = True
		pb_modificar.enabled = False
		pb_alta.enabled = False
		pb_borrar.enabled = True
		pb_salir.enabled = TRUE	//Siempre permitimos salir
		
	CASE II_MODIFICAR
		pb_aceptar.enabled = True
		pb_cancelar.enabled = True
		pb_modificar.enabled = False
		pb_alta.enabled = False
		pb_borrar.enabled = False
		pb_salir.enabled = TRUE	//Siempre permitimos salir
		
	CASE II_PREPARED_BORRABLE
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = True
		pb_alta.enabled = True	
		pb_borrar.enabled = True
		pb_salir.enabled = True
	
	CASE II_PREPARED_NOBORRABLE
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = True
		pb_alta.enabled = True
		pb_borrar.enabled = True
		pb_salir.enabled = True
		
	CASE II_TRASBORRAR
		pb_aceptar.enabled = True
		pb_cancelar.enabled = True
		pb_modificar.enabled = False
		pb_alta.enabled = True
		pb_borrar.enabled = True
		pb_salir.enabled = TRUE	//Siempre permitimos salir
		
	CASE II_TRASGUARDAR
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = True
		pb_alta.enabled = True
		pb_borrar.enabled = True
		pb_salir.enabled = True
		
		pb_aceptar.default = False
		pb_salir.default = True

END CHOOSE

RETURN 0
end function

public function integer of_setdefaultvalues ();
//el interlocutor tiene que ser el que venga de la otra ventana
//para todas las filas que se creen
dw_1.Modify("maqid.Initial = '" + string(il_maqid) + "'")
dw_1.Modify("cymfecini.Initial = '" + string(id_fecha) + "'")

IF ii_modo = II_ALTA THEN
	dw_1.Modify("cymfecfin.Visible = '0'")
END IF

RETURN 0
end function

event ue_close;str_interlocutor_eu		lstr_interlocutor

il_ugeid = lstr_interlocutor.str_ugeid

Message.PowerObjectParm  = lstr_interlocutor

Close(This)




end event

event ue_save();long							ll_regimen
integer						li_retorno
blob							lblb_datos
n_cst_do_modelocontmaq	luo_intuge


dw_1.AcceptText()

li_retorno = THIS.Event ue_presave()

IF li_retorno < 0 THEN RETURN

SetPointer(Hourglass!)

App.inv_Connect.of_CreateInstanceDatos(luo_intuge,"n_cst_do_modelocontmaq")

dw_1.GetFullState(lblb_datos)

ll_regimen = luo_intuge.of_updateblob( lblb_datos)

IF ll_regimen >= 0 THEN
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  'Información almacenada correctamente.')
	

	IF dw_1.RowCount() = 0 THEN
		ib_pregunta_salir = TRUE
	ELSE
		ib_pregunta_salir = FALSE
	END IF
Else
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  luo_intuge.of_geterrortexto())
	RETURN
END IF
	
App.inv_Connect.of_DestroyInstance(luo_intuge)


IF ll_regimen < 0 THEN
	RETURN
END IF

THIS.Event ue_retrieve()

of_botones(II_TRASGUARDAR)

f_desabled(dw_1)
end event

event ue_enabled;call super::ue_enabled;dw_1.SetRow(dw_1.GetRow())
dw_1.SetFocus()
end event

event ue_retrieve();integer						li_ret
string						ls_where
blob							lblb_datos
n_cst_do_modelocontmaq	luo_intuge

App.inv_Connect.of_CreateInstanceDatos(luo_intuge,"n_cst_do_modelocontmaq")

ls_where = 'maqid = '  + string(il_maqid)
luo_intuge.of_Addwhere(ls_where)
li_ret = luo_intuge.of_Retrieveblob(lblb_datos)

dw_1.SetFullState(lblb_datos)

IF li_ret < 0 THEN
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  luo_intuge.of_geterrortexto())
END IF

of_setdefaultvalues()

dw_1.ResetUpdate()

App.inv_Connect.of_DestroyInstance(luo_intuge)
end event

event open;call super::open;
long									ll_fila
integer								li_ret
blob									lblb_datos
str_interlocutor_eu					lstr_interlocutor
n_cst_do_unidadgestion			lnv_do_unidadgestion

ib_pregunta_salir = false


lstr_interlocutor = Message.PowerObjectParm

il_maqid = lstr_interlocutor.str_intid
il_ugeid = lstr_interlocutor.str_ugeid
ii_modo  = lstr_interlocutor.str_modo
id_fecha = lstr_interlocutor.str_fecha


Event ue_retrieve()

of_setdefaultvalues() //para que cree filas con intid relleno

IF ii_modo = II_ALTA THEN
	//of_botones(II_ACCESO_ALTA)
	
	THIS.Event ue_insertrow()
	
	dw_1.SetRow(dw_1.RowCount())
	dw_1.SetFocus()
ELSEIF ii_modo = II_MODIFICACION THEN 
	Event ue_retrieve()
	
	of_botones(II_ACCESO_MODIFICACION)
	f_desabled(dw_1)
END IF

of_setdefaultvalues()

end event

on w_response_newconmaq.create
call super::create
end on

on w_response_newconmaq.destroy
call super::destroy
end on

type p_icono from w_response_base`p_icono within w_response_newconmaq
end type

type st_titulo from w_response_base`st_titulo within w_response_newconmaq
string text = "Alta de modelos de contador"
end type

type pb_borrar from w_response_base`pb_borrar within w_response_newconmaq
end type

type pb_modificar from w_response_base`pb_modificar within w_response_newconmaq
end type

type pb_salir from w_response_base`pb_salir within w_response_newconmaq
integer x = 2537
end type

type pb_aceptar from w_response_base`pb_aceptar within w_response_newconmaq
end type

type pb_cancelar from w_response_base`pb_cancelar within w_response_newconmaq
end type

type pb_alta from w_response_base`pb_alta within w_response_newconmaq
end type

type dw_1 from w_response_base`dw_1 within w_response_newconmaq
integer width = 2642
string dataobject = "d_do_modelo_contadormaq"
end type

event dberror;Return 1
end event

event itemchanged;
//Choose Case getcolumnname()
//	Case 'ugeid', 'fcambio'
		of_botones(ii_modificar)
//		IF il_fila >1 THEN
//			pb_aceptar.enabled = True
//			pb_cancelar.enabled = False
//			pb_modificar.enabled = False
//			pb_alta.enabled = False
//			pb_borrar.enabled = True
//			pb_salir.enabled = False
//		Else
//			pb_aceptar.enabled = True
//			pb_cancelar.enabled = False
//			pb_modificar.enabled = False
//			pb_alta.enabled = False
//			pb_borrar.enabled = False
//			pb_salir.enabled = False	
//		END IF
//
//
//End Choose		

end event

event editchanged;
//Choose Case getcolumnname()
//	Case 'ugeid', 'fcambio'
		of_botones(ii_modificar)
//		IF il_fila >1 THEN
//			pb_aceptar.enabled = True
//			pb_cancelar.enabled = False
//			pb_modificar.enabled = False
//			pb_alta.enabled = False
//			pb_borrar.enabled = True
//			pb_salir.enabled = False
//		Else
//			pb_aceptar.enabled = True
//			pb_cancelar.enabled = False
//			pb_modificar.enabled = False
//			pb_alta.enabled = False
//			pb_borrar.enabled = False
//			pb_salir.enabled = False	
//		END IF
//End Choose	
end event

type st_fondo from w_response_base`st_fondo within w_response_newconmaq
end type


forward
global type w_response_socimaq from w_response_base
end type
end forward

global type w_response_socimaq from w_response_base
integer width = 2683
integer height = 1140
end type
global w_response_socimaq w_response_socimaq

type variables
long		il_maqid, il_socid
end variables

forward prototypes
public function integer of_botones (integer ai_modo)
public function integer of_setdefaultvalues ()
public function boolean of_isborrable (long al_row)
end prototypes

public function integer of_botones (integer ai_modo);/*Esta función habilita y deshabilita botones
en función del estado.
Se centraliza aquí para poder aplicar permisos
de acceso.*/

CHOOSE CASE ai_modo
	CASE II_ACCESO_ALTA
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False	/*porque debe guardar
												 alguna antes de salir */
		pb_modificar.enabled = False
		pb_alta.enabled = TRUE
		pb_borrar.enabled = TRUE
		pb_salir.enabled = TRUE	//Siempre permitimos salir
	
	CASE II_ACCESO_MODIFICACION
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = TRUE
		pb_alta.enabled = TRUE
		pb_borrar.enabled = TRUE
		pb_salir.enabled = TRUE	//Siempre permitimos salir
		
	CASE II_INSERTROW
		pb_aceptar.enabled = False
		pb_cancelar.enabled = True
		pb_modificar.enabled = False
		pb_alta.enabled = False
		pb_borrar.enabled = True
		pb_salir.enabled = TRUE	//Siempre permitimos salir
		
	CASE II_MODIFICAR
		pb_aceptar.enabled = True
		pb_cancelar.enabled = True
		pb_modificar.enabled = False
		pb_alta.enabled = False
		pb_borrar.enabled = False
		pb_salir.enabled = TRUE	//Siempre permitimos salir
		
	CASE II_PREPARED_BORRABLE
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = True
		pb_alta.enabled = True	
		pb_borrar.enabled = True
		pb_salir.enabled = True
	
	CASE II_PREPARED_NOBORRABLE
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = True
		pb_alta.enabled = True
		pb_borrar.enabled = True
		pb_salir.enabled = True
		
	CASE II_TRASBORRAR
		pb_aceptar.enabled = True
		pb_cancelar.enabled = True
		pb_modificar.enabled = False
		pb_alta.enabled = True
		pb_borrar.enabled = True
		pb_salir.enabled = TRUE	//Siempre permitimos salir
		
	CASE II_TRASGUARDAR
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = True
		pb_alta.enabled = True
		pb_borrar.enabled = True
		pb_salir.enabled = True
		
		pb_aceptar.default = False
		pb_salir.default = True

END CHOOSE

RETURN 0
end function

public function integer of_setdefaultvalues ();
//el interlocutor tiene que ser el que venga de la otra ventana
//para todas las filas que se creen
dw_1.Modify("maqid.Initial = '" + string(il_maqid) + "'")
dw_1.Modify("socid.Initial = '" + string(il_socid) + "'")

RETURN 0
end function

public function boolean of_isborrable (long al_row);//En alta no permitimos borrar la sociedad de facturación

IF al_row = 1 AND ii_modo = II_ALTA THEN 
	RETURN FALSE
END IF
end function

event ue_close;date					ldt_fechaini
long					ll_socid
str_interlocutor_eu		lstr_interlocutor

lstr_interlocutor.str_ugeid = il_ugeid
lstr_interlocutor.str_intid  = il_maqid
lstr_interlocutor.str_modo  = ii_modo

//Enviamos la fecha para que pueda ser empleada en la ventana de E.O.
IF dw_1.RowCount() > 0 THEN
	ldt_fechaini  = dw_1.GetItemDate(1, "hsmfecins")
	ll_socid 		= dw_1.GetItemNumber(1, "socid")
	lstr_interlocutor.str_fecha = ldt_fechaini
	lstr_interlocutor.str_socid = ll_socid
END IF

//Message.PowerObjectParm  = lstr_interlocutor

CloseWithReturn(This, lstr_interlocutor)




end event

event ue_insertrow();Integer li_row

dw_1.SetFocus()
li_row	=	dw_1.InsertRow(0)
dw_1.SetRow( li_row )
dw_1.ScrollToRow ( li_row )

f_enabled(dw_1)

of_botones(II_INSERTROW)
end event

event ue_enabled();
f_enabled(dw_1)

dw_1.SetRow(dw_1.GetRow())
dw_1.SetFocus()

of_botones(II_MODIFICAR)
end event

event ue_save();long							ll_regimen
integer						li_retorno
blob							lblb_datos
n_cst_do_sociedadmaquina		luo_intuge


dw_1.AcceptText()

li_retorno = THIS.Event ue_presave()

IF li_retorno < 0 THEN RETURN

SetPointer(Hourglass!)

App.inv_Connect.of_CreateInstanceDatos(luo_intuge,"n_cst_do_sociedadmaquina")

dw_1.GetFullState(lblb_datos)

ll_regimen = luo_intuge.of_updateblob( lblb_datos)

IF ll_regimen >= 0 THEN
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  'Información almacenada correctamente.')
	

	IF dw_1.RowCount() = 0 THEN
		ib_pregunta_salir = TRUE
	ELSE
		ib_pregunta_salir = FALSE
	END IF
Else
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  luo_intuge.of_geterrortexto())
	RETURN
END IF
	
App.inv_Connect.of_DestroyInstance(luo_intuge)


IF ll_regimen < 0 THEN
	RETURN
END IF

THIS.Event ue_retrieve()

of_botones(II_TRASGUARDAR)

f_desabled(dw_1)
end event

event ue_modificar();This.Event ue_enabled()
end event

event ue_retrieve;integer						li_ret
long							ll_fila
string							ls_where, ls_modify
blob							lblb_datos
n_cst_do_sociedadmaquina		luo_intuge

App.inv_Connect.of_CreateInstanceDatos(luo_intuge,"n_cst_do_sociedadmaquina")

ls_where = 'maqid = '  + string(il_maqid)
luo_intuge.of_Addwhere(ls_where)
li_ret = luo_intuge.of_Retrieveblob(lblb_datos)

dw_1.SetFullState(lblb_datos)

IF li_ret < 0 THEN
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  luo_intuge.of_geterrortexto())
END IF

//Tras recuperar las sociedades ordenamos por id ya que la fila "1" debe ser la de facturación y se recuperan
//a veces en otro orden, con lo que la protección "a la sociedad de facturación inicial" no está funcionando

dw_1.SetSort("hsmid")
dw_1.Sort()

of_setdefaultvalues()

dw_1.ResetUpdate()

App.inv_Connect.of_DestroyInstance(luo_intuge)

IF ii_modo = II_ALTA AND dw_1.Rowcount() = 0 THEN
	//Insertamos la sociedad de facturación
	ll_fila = dw_1.InsertRow(0)
	dw_1.SetItem(ll_fila, "hsmtipsoc", "FA")
	
	//Protegemos los campos
	ls_modify = 'hsmtipsoc.protect="0~tif (getrow()=1, 1, 0)"  socid.protect="0~tif (getrow()=1, 1, 0)" '
	dw_1.Modify(ls_modify)
	
END IF


end event

event open;call super::open;
long									ll_fila
integer								li_ret
blob									lblb_datos
str_interlocutor_eu						lstr_interlocutor
n_cst_do_unidadgestion			lnv_do_unidadgestion

//ib_pregunta_salir = false
ib_pregunta_salir = true		//21.04.2008

is_mensaje_close = 'No se ha guardado la sociedad de la máquina y ese dato es obligatorio.~r~n' + &  
							'Si sale sin guardar la sociedad, se borrará la máquina del sistema.~r~n' + & 
							'¿Está seguro de salir?'

lstr_interlocutor = Message.PowerObjectParm

il_maqid = lstr_interlocutor.str_intid
il_ugeid = lstr_interlocutor.str_ugeid
ii_modo  = lstr_interlocutor.str_modo
il_socid = lstr_interlocutor.str_socid

Event ue_retrieve()

of_setdefaultvalues() //para que cree filas con intid relleno

IF ii_modo = II_ALTA THEN
	of_botones(II_ACCESO_ALTA)
	
	dw_1.SetRow(dw_1.RowCount())
	dw_1.SetFocus()
ELSEIF ii_modo = II_MODIFICACION THEN 
	
	of_botones(II_ACCESO_MODIFICACION)
	f_desabled(dw_1)
END IF

of_setdefaultvalues()

end event

on w_response_socimaq.create
call super::create
end on

on w_response_socimaq.destroy
call super::destroy
end on

event closequery;//Override ancestor script
integer			li_retorno

IF ib_pregunta_salir = TRUE THEN
	li_retorno = App.srvMsgBox.MessageBox(App.MsgBoxTitle,  &
	is_mensaje_close,	Question!, YesNo!, 2)
	
	IF li_retorno = 2 THEN
		RETURN 1
	ELSE
		//retornamos -1 y borramos la máquina
		App.il_maqid = -1
	END IF
END IF
end event

type p_icono from w_response_base`p_icono within w_response_socimaq
end type

type st_titulo from w_response_base`st_titulo within w_response_socimaq
string text = "Sociedades de la Máquina"
end type

type pb_borrar from w_response_base`pb_borrar within w_response_socimaq
end type

type pb_modificar from w_response_base`pb_modificar within w_response_socimaq
end type

type pb_salir from w_response_base`pb_salir within w_response_socimaq
integer x = 2537
end type

type pb_aceptar from w_response_base`pb_aceptar within w_response_socimaq
end type

type pb_cancelar from w_response_base`pb_cancelar within w_response_socimaq
end type

type pb_alta from w_response_base`pb_alta within w_response_socimaq
end type

type dw_1 from w_response_base`dw_1 within w_response_socimaq
integer width = 2642
string dataobject = "d_do_hsociedadpropmaquina"
end type

event dberror;Return 1
end event

event dw_1::itemchanged;string						ls_tipo

//Si estamos en alta tratando de modificar la sociedad de facturación, rechazamos el cambio
IF (ii_modo = II_ALTA AND row >0 AND dwo.name = "socid" AND data <> string(il_socid)) OR &
	(dwo.name = "hsmtipsoc" AND row = 1 AND ii_modo = II_ALTA) THEN
	
	ls_tipo = GetItemString(row, "hsmtipsoc")
	IF ls_tipo = "FA" AND row = 1 THEN
		RETURN 1
	END IF
END IF

of_botones(ii_modificar)

end event

event editchanged;
//Choose Case getcolumnname()
//	Case 'ugeid', 'fcambio'
		of_botones(ii_modificar)
//		IF il_fila >1 THEN
//			pb_aceptar.enabled = True
//			pb_cancelar.enabled = False
//			pb_modificar.enabled = False
//			pb_alta.enabled = False
//			pb_borrar.enabled = True
//			pb_salir.enabled = False
//		Else
//			pb_aceptar.enabled = True
//			pb_cancelar.enabled = False
//			pb_modificar.enabled = False
//			pb_alta.enabled = False
//			pb_borrar.enabled = False
//			pb_salir.enabled = False	
//		END IF
//End Choose	
end event

event dw_1::clicked;w_querys_crm				lw_Query
str_querymode				lstr_querymode
string						ls_where

//25.01.2008 No permitmos modificar la sociedad de facturación inicial
IF ii_modo = II_ALTA AND dwo.name = "compute_1" AND row = 1 THEN
	RETURN 1
END IF


lstr_querymode.str_dataobject = 'dq_sociedad'
lstr_querymode.str_seleccion = 1
lstr_querymode.str_nuevo = FALSE

IF dwo.name = 'compute_1' THEN
	OpenWithParm(lw_Query, lstr_querymode)
	
	lstr_querymode = Message.PowerObjectParm
	IF IsValid(lstr_querymode) THEN
		ls_where = lstr_querymode.str_addwhere
		
		THIS.SetItem(row, "socid", lstr_querymode.str_id)
		
	END IF
	
END IF
end event

type st_fondo from w_response_base`st_fondo within w_response_socimaq
end type


release 8;
datawindow(units=0 timer_interval=0 color=16777215 processing=1 HTMLDW=no print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no grid.lines=0 )
header(height=68 color="67108864" )
summary(height=0 color="536870912" )
footer(height=0 color="16777215" )
detail(height=80 color="16777215" )
table(column=(type=long update=yes updatewhereclause=yes key=yes name=cymid dbname="htcontadormaq.cymid" )
 column=(type=long update=yes updatewhereclause=yes name=maqid dbname="htcontadormaq.maqid" )
 column=(type=long update=yes updatewhereclause=yes name=mcoid dbname="htcontadormaq.mcoid" )
 column=(type=char(10) update=yes updatewhereclause=yes name=cymnumero dbname="htcontadormaq.cymnumero" )
 column=(type=date update=yes updatewhereclause=yes name=cymfecini dbname="htcontadormaq.cymfecini" )
 column=(type=date update=yes updatewhereclause=yes name=cymfecfin dbname="htcontadormaq.cymfecfin" )
 column=(type=datetime update=yes updatewhereclause=yes name=feccrereg dbname="htcontadormaq.feccrereg" )
 column=(type=char(10) update=yes updatewhereclause=yes name=codusucid dbname="htcontadormaq.codusucid" )
 retrieve="PBSELECT( VERSION(400) TABLE(NAME=~"htcontadormaq~" ) COLUMN(NAME=~"htcontadormaq.cymid~") COLUMN(NAME=~"htcontadormaq.maqid~") COLUMN(NAME=~"htcontadormaq.mcoid~") COLUMN(NAME=~"htcontadormaq.cymnumero~") COLUMN(NAME=~"htcontadormaq.cymfecini~") COLUMN(NAME=~"htcontadormaq.cymfecfin~") COLUMN(NAME=~"htcontadormaq.feccrereg~") COLUMN(NAME=~"htcontadormaq.codusucid~")) " update="htcontadormaq" updatewhere=1 updatekeyinplace=no )
text(band=header alignment="2" text="Fecha inicio" border="4" color="33554432" x="1207" y="8" height="52" width="270" html.valueishtml="0"  name=cymfecini_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=header alignment="2" text="Fecha Final" border="4" color="33554432" x="1486" y="8" height="52" width="270" html.valueishtml="0"  name=cymfecfin_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=header alignment="2" text="Modelo de Contador" border="4" color="33554432" x="9" y="8" height="52" width="809" html.valueishtml="0"  name=mcoid_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=header alignment="2" text="Número de MC" border="4" color="33554432" x="827" y="8" height="52" width="370" html.valueishtml="0"  name=cymnumero_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=3 alignment="0" tabsequence=10 border="0" color="33554432" x="9" y="8" height="64" width="809" format="[general]" html.valueishtml="0"  name=mcoid visible="1" dddw.name=d_dddw_modelo_contador dddw.displaycolumn=modelo_serie dddw.datacolumn=mcoid dddw.percentwidth=0 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=no dddw.case=any dddw.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="16777215" )
column(band=detail id=4 alignment="0" tabsequence=20 border="0" color="33554432" x="827" y="8" height="64" width="370" format="[general]" html.valueishtml="0"  name=cymnumero visible="1" edit.limit=10 edit.case=any edit.focusrectangle=no edit.autoselect=no edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="16777215" )
column(band=detail id=5 alignment="0" tabsequence=30 border="0" color="33554432" x="1207" y="8" height="64" width="270" format="[general]" html.valueishtml="0"  name=cymfecini visible="1" accelerator=" " edit.name="DD/MM/YYYY" editmask.mask="DD/MM/YYYY" editmask.imemode=0 editmask.focusrectangle=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="16777215" )
column(band=detail id=6 alignment="0" tabsequence=40 border="0" color="33554432" x="1486" y="8" height="64" width="270" format="[general]" html.valueishtml="0"  name=cymfecfin visible="1" accelerator=" " edit.name="DD/MM/YYYY" editmask.mask="DD/MM/YYYY" editmask.imemode=0 editmask.focusrectangle=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="16777215" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" netscapelayers="0" )

release 10.5;
datawindow(units=0 timer_interval=0 color=16777215 processing=1 HTMLDW=no print.printername="" print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.canusedefaultprinter=yes print.prompt=no print.buttons=no print.preview.buttons=no print.cliptext=no print.overrideprintjob=no print.collate=yes print.preview.outline=yes hidegrayline=no grid.lines=0 selected.mouse=no )
header(height=80 color="80269524" )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=72 color="536870912" )
table(column=(type=long update=yes updatewhereclause=yes key=yes name=hsmid dbname="htsocimaq.hsmid" )
 column=(type=long update=yes updatewhereclause=yes name=socid dbname="htsocimaq.socid" validationmsg="'No está permitido cambiar la sociedad.'" )
 column=(type=char(2) update=yes updatewhereclause=yes name=hsmtipsoc dbname="htsocimaq.hsmtipsoc" values="Propietaria	PR/Documental	DO/Facturación	FA/" validationmsg="'No está permitido cambiar el tipo de sociedad.'" )
 column=(type=date update=yes updatewhereclause=yes name=hsmfecins dbname="htsocimaq.hsmfecins" )
 column=(type=date update=yes updatewhereclause=yes name=hsmfecret dbname="htsocimaq.hsmfecret" )
 column=(type=datetime update=yes updatewhereclause=yes name=feccrereg dbname="htsocimaq.feccrereg" )
 column=(type=char(10) update=yes updatewhereclause=yes name=codusucid dbname="htsocimaq.codusucid" )
 column=(type=long update=yes updatewhereclause=yes name=maqid dbname="htsocimaq.maqid" )
 column=(type=long updatewhereclause=yes name=neoid dbname="neoid" )
 retrieve="  SELECT htsocimaq.hsmid,   
         htsocimaq.socid,   
         htsocimaq.hsmtipsoc,   
         htsocimaq.hsmfecins,   
         htsocimaq.hsmfecret, 
         htsocimaq.feccrereg,   
         htsocimaq.codusucid,   
         htsocimaq.maqid,
		   0 As neoid
    FROM htsocimaq 
  
	   
" update="htsocimaq" updatewhere=0 updatekeyinplace=no  sort="hsmfecins A socid A " )
text(band=header alignment="0" text="Tipo" border="4" color="0" x="9" y="12" height="60" width="393" html.valueishtml="0"  name=hsmtipsoc_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header alignment="0" text="Sociedad" border="4" color="0" x="411" y="12" height="60" width="681" html.valueishtml="0"  name=socid_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header alignment="0" text="Fecha Inicio" border="4" color="0" x="1193" y="12" height="60" width="311" html.valueishtml="0"  name=hsmfecins_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header alignment="0" text="Fecha Fin" border="4" color="0" x="1513" y="12" height="60" width="306" html.valueishtml="0"  name=hsmfecret_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=3 alignment="0" tabsequence=10 border="0" color="0" x="9" y="4" height="60" width="393" format="[general]" html.valueishtml="0"  name=hsmtipsoc visible="1" ddlb.limit=0 ddlb.allowedit=no ddlb.case=any ddlb.vscrollbar=yes ddlb.useasborder=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="16777215" )
column(band=detail id=4 alignment="0" tabsequence=20 border="0" color="0" x="1198" y="4" height="60" width="306" format="dd/mm/yyyy" html.valueishtml="0"  name=hsmfecins visible="1" editmask.mask="dd/mm/yyyy" editmask.focusrectangle=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="16777215" )
column(band=detail id=5 alignment="0" tabsequence=30 border="0" color="0" x="1513" y="4" height="60" width="306" format="dd/mm/yyyy" html.valueishtml="0"  name=hsmfecret visible="1" editmask.mask="dd/mm/yyyy" editmask.focusrectangle=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="16777215" )
column(band=detail id=2 alignment="0" tabsequence=32766 border="0" color="0" x="411" y="4" height="60" width="681" format="[general]" html.valueishtml="0"  name=socid visible="1" dddw.name=d_dddw_sociedad dddw.displaycolumn=socrazons dddw.datacolumn=socid dddw.percentwidth=0 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=no dddw.case=any  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="80269524" )
compute(band=detail alignment="0" expression="bitmap ('Imatges\Societat.bmp')"border="0" color="0" x="1102" y="4" height="60" width="82" format="[GENERAL]" html.valueishtml="0"  name=compute_1  tag="SetSociedad" visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="16777215" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" encodeselflinkargs="1" netscapelayers="0" pagingmethod=0 generatedddwframes="1" )
xhtmlgen() cssgen(sessionspecific="0" )
xmlgen(inline="0" )
xsltgen()
jsgen()
export.xml(headgroups="1" includewhitespace="0" metadatatype=0 savemetadata=0 )
import.xml()
export.pdf(method=0 distill.custompostscript="0" xslfop.print="0" )
export.xhtml()
 
release 8;
datawindow(units=0 timer_interval=0 color=1090519039 processing=1 HTMLDW=no print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no grid.lines=0 selected.mouse=no )
header(height=80 color="80269524" )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=72 color="536870912" )
table(column=(type=long update=yes updatewhereclause=yes key=yes name=socid dbname="atsociedad.socid" )
 column=(type=long update=yes updatewhereclause=yes name=gruid dbname="atsociedad.gruid" )
 column=(type=char(35) update=yes updatewhereclause=yes name=socrazons dbname="atsociedad.socrazons" )
 column=(type=long update=yes updatewhereclause=yes name=domsoc dbname="atsociedad.domsoc" )
 column=(type=long update=yes updatewhereclause=yes name=domubi dbname="atsociedad.domubi" )
 column=(type=long update=yes updatewhereclause=yes name=domfis dbname="atsociedad.domfis" )
 column=(type=char(16) update=yes updatewhereclause=yes name=socdninif dbname="atsociedad.socdninif" )
 column=(type=char(12) update=yes updatewhereclause=yes name=soctelef1 dbname="atsociedad.soctelef1" )
 column=(type=char(12) update=yes updatewhereclause=yes name=soctelef2 dbname="atsociedad.soctelef2" )
 column=(type=char(12) update=yes updatewhereclause=yes name=soctelefm dbname="atsociedad.soctelefm" )
 column=(type=char(12) update=yes updatewhereclause=yes name=socteleff dbname="atsociedad.socteleff" )
 column=(type=char(1) update=yes updatewhereclause=yes name=socesdesap dbname="atsociedad.socesdesap" )
 column=(type=char(4) update=yes updatewhereclause=yes name=socbukrs dbname="atsociedad.socbukrs" )
 column=(type=char(10) update=yes updatewhereclause=yes name=soclikunnr dbname="atsociedad.soclikunnr" )
 column=(type=char(1) update=yes updatewhereclause=yes name=socescod dbname="atsociedad.socescod" values="Sí	S/No	N/Vinculada	V/" )
 column=(type=datetime update=yes updatewhereclause=yes name=feccrereg dbname="atsociedad.feccrereg" )
 column=(type=char(10) update=yes updatewhereclause=yes name=codusucid dbname="atsociedad.codusucid" )
 column=(type=char(35) updatewhereclause=yes name=soce_mail dbname="atsociedad.soce_mail" )
 column=(type=char(35) updatewhereclause=yes name=socpagweb dbname="atsociedad.socpagweb" )
 column=(type=char(35) updatewhereclause=yes name=gvdomicilio_viadescri dbname="gvdomicilio.viadescri" )
 column=(type=char(35) updatewhereclause=yes name=gvdomicilio_domnomvia dbname="gvdomicilio.domnomvia" )
 column=(type=char(10) updatewhereclause=yes name=gvdomicilio_pobcodpos dbname="gvdomicilio.pobcodpos" )
 column=(type=char(35) updatewhereclause=yes name=gvdomicilio_pobdescri dbname="gvdomicilio.pobdescri" )
 column=(type=char(35) updatewhereclause=yes name=gvdomicilio_prvdescri dbname="gvdomicilio.prvdescri" )
 column=(type=char(35) updatewhereclause=yes name=gvdomicilio_paidescri dbname="gvdomicilio.paidescri" )
 column=(type=date updatewhereclause=yes name=socfecese dbname="atsociedad.socfecese" )
 column=(type=long updatewhereclause=yes name=motid dbname="atsociedad.motid" )
 column=(type=char(35) updatewhereclause=yes name=atgrupo_grudescri dbname="atgrupo.grudescri" )
 column=(type=char(35) updatewhereclause=yes name=xtmotivo_motdescri dbname="xtmotivo.motdescri" )
 retrieve="  SELECT atsociedad.socid,   
         atsociedad.gruid,   
         atsociedad.socrazons,   
         atsociedad.domsoc,   
         atsociedad.domubi,   
         atsociedad.domfis,   
         atsociedad.socdninif,   
         atsociedad.soctelef1,   
         atsociedad.soctelef2,   
         atsociedad.soctelefm,   
         atsociedad.socteleff,   
         atsociedad.socesdesap,   
         atsociedad.socbukrs,   
         atsociedad.soclikunnr,   
         atsociedad.socescod,   
         atsociedad.feccrereg,   
         atsociedad.codusucid, 
         atsociedad.soce_mail,   
         atsociedad.socpagweb,   
         gvdomicilio.viadescri,   
         gvdomicilio.domnomvia,   
         gvdomicilio.pobcodpos,   
         gvdomicilio.pobdescri,   
         gvdomicilio.prvdescri,   
         gvdomicilio.paidescri,   
         atsociedad.socfecese,   
         atsociedad.motid,   
         atgrupo.grudescri,   
         xtmotivo.motdescri  
    FROM atsociedad LEFT OUTER JOIN atgrupo ON atgrupo.gruid = atsociedad.gruid LEFT OUTER JOIN xtmotivo ON xtmotivo.motid = atsociedad.motid,
         gvdomicilio
   WHERE ( atsociedad.domubi = gvdomicilio.domid )    
" update="atsociedad" updatewhere=0 updatekeyinplace=yes )
text(band=header alignment="0" text="Razon Social" border="4" color="0" x="9" y="8" height="60" width="613" html.valueishtml="0"  name=socrazons_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header alignment="0" text="NIF" border="4" color="0" x="631" y="8" height="60" width="288" html.valueishtml="0"  name=socdninif_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header alignment="0" text=" Codigo SAP" border="4" color="0" x="3141" y="8" height="60" width="311" html.valueishtml="0"  name=socbukrs_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header alignment="0" text="CODERE" border="4" color="0" x="2464" y="8" height="60" width="206" html.valueishtml="0"  name=socescod_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header alignment="0" text="País" border="4" color="33554432" x="2222" y="8" height="60" width="233" html.valueishtml="0"  name=gvdomicilio_paidescri_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header alignment="0" text="Vía" border="4" color="33554432" x="928" y="8" height="60" width="375" html.valueishtml="0"  name=gvdomicilio_domnomvia_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header alignment="0" text="C Postal" border="4" color="33554432" x="1312" y="8" height="60" width="215" html.valueishtml="0"  name=gvdomicilio_pobcodpos_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header alignment="0" text="Población" border="4" color="33554432" x="1536" y="8" height="60" width="384" html.valueishtml="0"  name=gvdomicilio_pobdescri_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header alignment="0" text="Provincia" border="4" color="33554432" x="1929" y="8" height="60" width="283" html.valueishtml="0"  name=gvdomicilio_prvdescri_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header alignment="0" text="Fec Cese" border="4" color="33554432" x="3461" y="8" height="60" width="306" html.valueishtml="0"  name=socfecese_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header alignment="0" text="Grupo" border="4" color="33554432" x="2679" y="8" height="60" width="453" html.valueishtml="0"  name=atgrupo_grudescri_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header alignment="0" text="Motivo Cese" border="4" color="33554432" x="3776" y="8" height="60" width="512" html.valueishtml="0"  name=xtmotivo_motdescri_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=3 alignment="0" tabsequence=10 border="0" color="33554432" x="9" y="4" height="60" width="613" format="[general]" html.valueishtml="0"  name=socrazons visible="1" edit.limit=35 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=7 alignment="0" tabsequence=20 border="0" color="33554432" x="631" y="4" height="60" width="288" format="[general]" html.valueishtml="0"  name=socdninif visible="1" edit.limit=16 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=15 alignment="1" tabsequence=80 border="0" color="33554432" x="2464" y="4" height="60" width="206" format="[general]" html.valueishtml="0"  name=socescod visible="1" edit.limit=1 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes edit.imemode=0 edit.codetable=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=21 alignment="0" tabsequence=30 border="0" color="33554432" x="928" y="4" height="60" width="375" format="[general]" html.valueishtml="0"  name=gvdomicilio_domnomvia visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=22 alignment="1" tabsequence=40 border="0" color="33554432" x="1312" y="4" height="60" width="215" format="00000" html.valueishtml="0"  name=gvdomicilio_pobcodpos visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=23 alignment="0" tabsequence=50 border="0" color="33554432" x="1536" y="4" height="60" width="384" format="[general]" html.valueishtml="0"  name=gvdomicilio_pobdescri visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=24 alignment="0" tabsequence=60 border="0" color="33554432" x="1929" y="4" height="60" width="283" format="[general]" html.valueishtml="0"  name=gvdomicilio_prvdescri visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=25 alignment="0" tabsequence=70 border="0" color="33554432" x="2222" y="4" height="60" width="233" format="[general]" html.valueishtml="0"  name=gvdomicilio_paidescri visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=13 alignment="1" tabsequence=100 border="0" color="33554432" x="3141" y="4" height="60" width="311" format="[general]" html.valueishtml="0"  name=socbukrs visible="1" edit.limit=4 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=28 alignment="0" tabsequence=90 border="0" color="33554432" x="2679" y="4" height="60" width="453" format="[general]" html.valueishtml="0"  name=atgrupo_grudescri visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=26 alignment="0" tabsequence=110 border="0" color="33554432" x="3461" y="4" height="60" width="306" format="dd/mm/yyyy" html.valueishtml="0"  name=socfecese visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=29 alignment="0" tabsequence=120 border="0" color="33554432" x="3776" y="4" height="60" width="512" format="[general]" html.valueishtml="0"  name=xtmotivo_motdescri visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" netscapelayers="0" )

release 8;
datawindow(units=0 timer_interval=0 color=1073741824 processing=1 HTMLDW=no print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no grid.lines=0 )
header(height=76 color="134217750" )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=72 color="536870912" )
table(column=(type=long update=yes updatewhereclause=yes key=yes name=neoid dbname="atempope.neoid" )
 column=(type=long updatewhereclause=yes name=atempope_socid dbname="atempope.socid" )
 column=(type=long updatewhereclause=yes name=atempope_coaid dbname="atempope.coaid" )
 column=(type=long updatewhereclause=yes name=atempope_domnot dbname="atempope.domnot" )
 column=(type=long updatewhereclause=yes name=atempope_domofi dbname="atempope.domofi" )
 column=(type=char(15) updatewhereclause=yes name=atempope_neonempop dbname="atempope.neonempop" )
 column=(type=char(1) updatewhereclause=yes name=atempope_neotipmaq dbname="atempope.neotipmaq" )
 column=(type=date updatewhereclause=yes name=atempope_neofecini dbname="atempope.neofecini" )
 column=(type=date updatewhereclause=yes name=atempope_neofeccad dbname="atempope.neofeccad" )
 column=(type=long updatewhereclause=yes name=atempope_epiid dbname="atempope.epiid" )
 column=(type=datetime updatewhereclause=yes name=atempope_feccrereg dbname="atempope.feccrereg" )
 column=(type=char(10) updatewhereclause=yes name=atempope_codusucid dbname="atempope.codusucid" )
 column=(type=char(35) updatewhereclause=yes name=atsociedad_socrazons dbname="atsociedad.socrazons" )
 retrieve="PBSELECT( VERSION(400) TABLE(NAME=~"atempope~" )  TABLE(NAME=~"atsociedad~" ) COLUMN(NAME=~"atempope.neoid~") COLUMN(NAME=~"atempope.socid~") COLUMN(NAME=~"atempope.coaid~") COLUMN(NAME=~"atempope.domnot~") COLUMN(NAME=~"atempope.domofi~") COLUMN(NAME=~"atempope.neonempop~") COLUMN(NAME=~"atempope.neotipmaq~") COLUMN(NAME=~"atempope.neofecini~") COLUMN(NAME=~"atempope.neofeccad~") COLUMN(NAME=~"atempope.epiid~") COLUMN(NAME=~"atempope.feccrereg~") COLUMN(NAME=~"atempope.codusucid~") COLUMN(NAME=~"atsociedad.socrazons~")    JOIN (LEFT=~"atsociedad.socid~"    OP =~"=~"RIGHT=~"atempope.socid~" )) " update="atempope" updatewhere=0 updatekeyinplace=no )
text(band=header alignment="0" text="Empresa Operadora" border="4" color="33554432" x="841" y="8" height="60" width="549" html.valueishtml="0"  name=atempope_neonempop_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=header alignment="0" text="Sociedad" border="4" color="33554432" x="9" y="8" height="60" width="823" html.valueishtml="0"  name=atsociedad_socrazons_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=6 alignment="0" tabsequence=20 border="0" color="33554432" x="841" y="4" height="64" width="549" format="[general]" html.valueishtml="0"  name=atempope_neonempop visible="1" edit.limit=15 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=13 alignment="0" tabsequence=10 border="0" color="33554432" x="9" y="4" height="64" width="823" format="[general]" html.valueishtml="0"  name=atsociedad_socrazons visible="1" edit.limit=35 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" netscapelayers="0" )

release 8;
datawindow(units=0 timer_interval=0 color=1073741824 processing=1 HTMLDW=no print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no grid.lines=0 selected.mouse=no )
header(height=80 color="134217747" )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=72 color="536870912" )
table(column=(type=long update=yes updatewhereclause=yes key=yes name=eomid dbname="hteomaq.eomid" )
 column=(type=long update=yes updatewhereclause=yes name=maqid dbname="hteomaq.maqid" )
 column=(type=long update=yes updatewhereclause=yes name=neoid dbname="hteomaq.neoid" )
 column=(type=date update=yes updatewhereclause=yes name=eomfecalta dbname="hteomaq.eomfecalta" )
 column=(type=date update=yes updatewhereclause=yes name=eomfecbaja dbname="hteomaq.eomfecbaja" )
 column=(type=datetime update=yes updatewhereclause=yes name=feccrereg dbname="hteomaq.feccrereg" )
 column=(type=char(10) update=yes updatewhereclause=yes name=codusucid dbname="hteomaq.codusucid" )
 column=(type=long updatewhereclause=yes name=socid dbname="atempope.socid" )
 column=(type=date updatewhereclause=yes name=hsmfecins dbname="hteomaq.hsmfecins" )
 retrieve="  SELECT hteomaq.eomid,   
         hteomaq.maqid,   
         hteomaq.neoid,   
         hteomaq.eomfecalta,   
         hteomaq.eomfecbaja,   
         hteomaq.feccrereg,   
         hteomaq.codusucid,   
         atempope.socid,
			today as hsmfecins  
    FROM hteomaq,   
         atempope  
   WHERE ( hteomaq.neoid = atempope.neoid )    
" update="hteomaq" updatewhere=0 updatekeyinplace=no  sort="eomfecalta A " )
text(band=header alignment="0" text="Empresa Operadora" border="4" color="33554432" x="9" y="12" height="60" width="919" html.valueishtml="0"  name=hteomaq_neoid_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=header alignment="0" text="Fecha Alta" border="4" color="33554432" x="1038" y="12" height="60" width="297" html.valueishtml="0"  name=hteomaq_eomfecalta_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=header alignment="0" text="Fecha Baja" border="4" color="33554432" x="1344" y="12" height="60" width="311" html.valueishtml="0"  name=hteomaq_eomfecbaja_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=4 alignment="0" tabsequence=10 border="0" color="33554432" x="1038" y="4" height="60" width="297" format="dd/mm/yyyy" html.valueishtml="0"  name=eomfecalta visible="1" accelerator=" " edit.name="DD/MM/YYYY" editmask.mask="DD/MM/YYYY" editmask.imemode=0 editmask.focusrectangle=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=5 alignment="0" tabsequence=20 border="0" color="33554432" x="1344" y="4" height="60" width="311" format="dd/mm/yyyy" html.valueishtml="0"  name=eomfecbaja visible="1" accelerator=" " edit.name="DD/MM/YYYY" editmask.mask="DD/MM/YYYY" editmask.imemode=0 editmask.focusrectangle=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=3 alignment="0" tabsequence=32766 border="0" color="33554432" x="9" y="4" height="60" width="919" format="[general]" html.valueishtml="0"  name=neoid visible="1" dddw.name=d_dddw_empresaoperadora dddw.displaycolumn=neodescri dddw.datacolumn=neoid dddw.percentwidth=0 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=no dddw.case=any dddw.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="134217739" )
compute(band=detail alignment="0" expression="bitmap ('Imatges\Societat.bmp')"border="0" color="0" x="937" y="4" height="60" width="91" format="[GENERAL]" html.valueishtml="0"  name=compute_1  tag="SetEOMaq" visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="16777215"  height.autosize=yes)
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" netscapelayers="0" )

forward
global type w_response_eomaq from w_response_base
end type
end forward

global type w_response_eomaq from w_response_base
integer width = 1915
integer height = 1152
end type
global w_response_eomaq w_response_eomaq

type variables
long		il_maqid, il_socid
date		id_fecha


end variables

forward prototypes
public function integer of_botones (integer ai_modo)
public function integer of_setdefaultvalues ()
end prototypes

public function integer of_botones (integer ai_modo);/*Esta función habilita y deshabilita botones
en función del estado.
Se centraliza aquí para poder aplicar permisos
de acceso.*/

CHOOSE CASE ai_modo
	CASE II_ACCESO_ALTA
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False	/*porque debe guardar
												 alguna antes de salir */
		pb_modificar.enabled = False
		pb_alta.enabled = TRUE
		pb_borrar.enabled = TRUE
		pb_salir.enabled = TRUE	//Siempre permitimos salir
	
	CASE II_ACCESO_MODIFICACION
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = TRUE
		pb_alta.enabled = TRUE
		pb_borrar.enabled = TRUE
		pb_salir.enabled = TRUE	//Siempre permitimos salir
		
	CASE II_INSERTROW
		pb_aceptar.enabled = False
		pb_cancelar.enabled = True
		pb_modificar.enabled = False
		pb_alta.enabled = False
		pb_borrar.enabled = True
		pb_salir.enabled = TRUE	//Siempre permitimos salir
		
	CASE II_MODIFICAR
		pb_aceptar.enabled = True
		pb_cancelar.enabled = True
		pb_modificar.enabled = False
		pb_alta.enabled = False
		pb_borrar.enabled = False
		pb_salir.enabled = TRUE	//Siempre permitimos salir
		
	CASE II_PREPARED_BORRABLE
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = True
		pb_alta.enabled = True	
		pb_borrar.enabled = True
		pb_salir.enabled = True
	
	CASE II_PREPARED_NOBORRABLE
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = True
		pb_alta.enabled = True
		pb_borrar.enabled = True
		pb_salir.enabled = True
		
	CASE II_TRASBORRAR
		pb_aceptar.enabled = True
		pb_cancelar.enabled = True
		pb_modificar.enabled = False
		pb_alta.enabled = True
		pb_borrar.enabled = True
		pb_salir.enabled = TRUE	//Siempre permitimos salir
		
	CASE II_TRASGUARDAR
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = True
		pb_alta.enabled = True
		pb_borrar.enabled = True
		pb_salir.enabled = True
		
		pb_aceptar.default = False
		pb_salir.default = True

END CHOOSE

RETURN 0
end function

public function integer of_setdefaultvalues ();
//la máquina tiene que ser el que venga de la otra ventana
//para todas las filas que se creen
dw_1.Modify("maqid.Initial = '" + string(il_maqid) + "'")
dw_1.Modify("eomfecalta.Initial = '" + string(id_fecha) + "'")
dw_1.Modify("socid.Initial = '" + string(il_socid) + "'")

dw_1.Modify("neoid.Protect='1'")

RETURN 0
end function

event ue_close;str_interlocutor_eu		lstr_interlocutor

il_ugeid = lstr_interlocutor.str_ugeid

Message.PowerObjectParm  = lstr_interlocutor

Close(This)




end event

event ue_save;long							ll_regimen
integer						li_retorno
blob							lblb_datos
n_cst_do_eomaq			luo_eomaq


dw_1.AcceptText()

li_retorno = THIS.Event ue_presave()

IF li_retorno < 0 THEN RETURN

SetPointer(Hourglass!)

App.inv_Connect.of_CreateInstanceDatos(luo_eomaq,"n_cst_do_eomaq")

dw_1.GetFullState(lblb_datos)

ll_regimen = luo_eomaq.of_updateblob( lblb_datos)

IF ll_regimen >= 0 THEN
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  'Información almacenada correctamente.')
	

	IF dw_1.RowCount() = 0 THEN
		ib_pregunta_salir = TRUE
	ELSE
		ib_pregunta_salir = FALSE
	END IF
Else
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  luo_eomaq.of_geterrortexto())
	RETURN
END IF
	
App.inv_Connect.of_DestroyInstance(luo_eomaq)


IF ll_regimen < 0 THEN
	RETURN
END IF

THIS.Event ue_retrieve()

of_botones(II_TRASGUARDAR)

f_desabled(dw_1)
end event

event ue_enabled;call super::ue_enabled;dw_1.SetRow(dw_1.GetRow())
dw_1.SetFocus()
end event

event ue_retrieve;integer						li_ret
string							ls_where
blob							lblb_datos
n_cst_do_eomaq			luo_eomaq

App.inv_Connect.of_CreateInstanceDatos(luo_eomaq,"n_cst_do_eomaq")

ls_where = 'maqid = '  + string(il_maqid)
luo_eomaq.of_Addwhere(ls_where)
li_ret = luo_eomaq.of_Retrieveblob(lblb_datos)

dw_1.SetFullState(lblb_datos)

IF li_ret < 0 THEN
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  luo_eomaq.of_geterrortexto())
END IF

of_setdefaultvalues()

dw_1.ResetUpdate()

App.inv_Connect.of_DestroyInstance(luo_eomaq)
end event

event open;call super::open;
long									ll_fila
integer								li_ret
blob									lblb_datos
str_interlocutor_eu						lstr_interlocutor
n_cst_do_unidadgestion			lnv_do_unidadgestion

ib_pregunta_salir = false


lstr_interlocutor = Message.PowerObjectParm

il_maqid = lstr_interlocutor.str_intid
il_ugeid = lstr_interlocutor.str_ugeid
ii_modo  = lstr_interlocutor.str_modo
id_fecha = lstr_interlocutor.str_fecha
il_socid = lstr_interlocutor.str_socid


Event ue_retrieve()

of_setdefaultvalues() //para que cree filas con intid relleno

IF ii_modo = II_ALTA THEN
	of_botones(II_ACCESO_ALTA)
	THIS.Event ue_insertrow()
	
	dw_1.SetRow(dw_1.RowCount())
	dw_1.SetFocus()
ELSEIF ii_modo = II_MODIFICACION THEN 
	Event ue_retrieve()
	
	of_botones(II_ACCESO_MODIFICACION)
	f_desabled(dw_1)
END IF

of_setdefaultvalues()

end event

on w_response_eomaq.create
call super::create
end on

on w_response_eomaq.destroy
call super::destroy
end on

type p_icono from w_response_base`p_icono within w_response_eomaq
end type

type st_titulo from w_response_base`st_titulo within w_response_eomaq
string text = "Empresas Operadoras"
end type

type pb_borrar from w_response_base`pb_borrar within w_response_eomaq
end type

type pb_modificar from w_response_base`pb_modificar within w_response_eomaq
end type

type pb_salir from w_response_base`pb_salir within w_response_eomaq
integer x = 1728
end type

type pb_aceptar from w_response_base`pb_aceptar within w_response_eomaq
end type

type pb_cancelar from w_response_base`pb_cancelar within w_response_eomaq
end type

type pb_alta from w_response_base`pb_alta within w_response_eomaq
end type

type dw_1 from w_response_base`dw_1 within w_response_eomaq
integer x = 9
integer y = 136
integer width = 1883
string dataobject = "d_do_eomaq"
end type

event dw_1::clicked;call super::clicked;w_querys_crm				lw_Query
str_querymode				lstr_querymode
string							ls_where

lstr_querymode.str_dataobject = 'dq_empop'
lstr_querymode.str_seleccion = 1
lstr_querymode.str_nuevo = FALSE

lstr_querymode.str_addwhere = 'atsociedad.socid = ' + string(il_socid)

IF dwo.name = 'compute_1' THEN
	OpenWithParm(lw_Query, lstr_querymode)
	
	lstr_querymode = Message.PowerObjectParm
	IF IsValid(lstr_querymode) THEN
		ls_where = lstr_querymode.str_addwhere
		THIS.SetItem(row, "neoid", lstr_querymode.str_id)
		of_botones(ii_modificar)
		
	END IF
	
END IF
end event

type st_fondo from w_response_base`st_fondo within w_response_eomaq
end type


release 8;
datawindow(units=0 timer_interval=0 color=16777215 processing=1 HTMLDW=no print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no grid.lines=0 selected.mouse=no )
header(height=76 color="67108864" )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=68 color="536870912" )
table(column=(type=long update=yes updatewhereclause=yes key=yes name=tconmaqid dbname="gttconmaq.tconmaqid" )
 column=(type=long update=yes updatewhereclause=yes name=maqid dbname="gttconmaq.maqid" )
 column=(type=long update=yes updatewhereclause=yes name=tcoid dbname="gttconmaq.tcoid" )
 column=(type=char(1) update=yes updatewhereclause=yes name=tconclase dbname="gttconmaq.tconclase" initial="A" values="Entrada	E/Salida	S/Ambos	A/" )
 column=(type=char(1) update=yes updatewhereclause=yes name=tcoentcal dbname="gttconmaq.tcoentcal" initial="N" values="Sí	S/No	N/" )
 column=(type=date update=yes updatewhereclause=yes name=tcmfecins dbname="gttconmaq.tcmfecins" initial="today" )
 column=(type=date update=yes updatewhereclause=yes name=tcmfecret dbname="gttconmaq.tcmfecret" )
 column=(type=datetime update=yes updatewhereclause=yes name=feccrereg dbname="gttconmaq.feccrereg" )
 column=(type=char(10) update=yes updatewhereclause=yes name=codusucid dbname="gttconmaq.codusucid" )
 retrieve="  SELECT gttconmaq.tconmaqid,   
         gttconmaq.maqid,   
         gttconmaq.tcoid,   
         gttconmaq.tconclase,   
         gttconmaq.tcoentcal,   
         gttconmaq.tcmfecins,   
         gttconmaq.tcmfecret, 
         gttconmaq.feccrereg,   
         gttconmaq.codusucid  
    FROM gttconmaq   
" update="gttconmaq" updatewhere=0 updatekeyinplace=yes )
text(band=header alignment="0" text="Contador" border="4" color="0" x="9" y="12" height="60" width="983" html.valueishtml="0"  name=tcoid_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header alignment="0" text="Clase" border="4" color="0" x="1001" y="12" height="60" width="238" html.valueishtml="0"  name=tconclase_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header alignment="0" text="Entra Cálculo" border="4" color="0" x="1248" y="12" height="60" width="293" html.valueishtml="0"  name=tcoentcal_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header alignment="0" text="Fecha Instalación" border="4" color="0" x="1550" y="12" height="60" width="384" html.valueishtml="0"  name=tcmfecins_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header alignment="0" text="Fecha Retirada" border="4" color="0" x="1943" y="12" height="60" width="329" html.valueishtml="0"  name=tcmfecret_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=3 alignment="0" tabsequence=10 border="0" color="0" x="9" y="4" height="60" width="983" format="[general]" html.valueishtml="0"  name=tcoid visible="1" dddw.name=d_dddw_tipocontador dddw.displaycolumn=c_todo dddw.datacolumn=tcoid dddw.percentwidth=0 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=no dddw.case=any dddw.imemode=0 dddw.vscrollbar=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="0" background.color="553648127~tIf (  ( tcmfecret <today()) OR (NOT isNull(tcmfecret) ),  RGB(192,192,192), RGB(255,255,255) )" )
column(band=detail id=4 alignment="0" tabsequence=20 border="0" color="0" x="1001" y="4" height="60" width="238" format="[general]" html.valueishtml="0"  name=tconclase visible="1" ddlb.limit=0 ddlb.allowedit=no ddlb.case=any ddlb.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="0" background.color="553648127~tIf (  ( tcmfecret <today()) OR (NOT isNull(tcmfecret) ),  RGB(192,192,192), RGB(255,255,255) )" )
column(band=detail id=5 alignment="0" tabsequence=30 border="0" color="0" x="1248" y="4" height="60" width="293" format="[general]" html.valueishtml="0"  name=tcoentcal visible="1" ddlb.limit=0 ddlb.allowedit=no ddlb.case=any ddlb.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="0" background.color="553648127~tIf (  ( tcmfecret <today()) OR (NOT isNull(tcmfecret) ),  RGB(192,192,192), RGB(255,255,255) )" )
column(band=detail id=6 alignment="0" tabsequence=40 border="0" color="0" x="1550" y="4" height="60" width="384" format="dd/mm/yyyy" html.valueishtml="0"  name=tcmfecins visible="1" editmask.mask="dd/mm/yyyy" editmask.imemode=0 editmask.focusrectangle=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="0" background.color="553648127~tIf (  ( tcmfecret <today()) OR (NOT isNull(tcmfecret) ),  RGB(192,192,192), RGB(255,255,255) )" )
column(band=detail id=7 alignment="0" tabsequence=50 border="0" color="0" x="1943" y="4" height="60" width="329" format="dd/mm/yyyy" html.valueishtml="0"  name=tcmfecret visible="1" editmask.mask="dd/mm/yyyy" editmask.imemode=0 editmask.focusrectangle=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="0" background.color="553648127~tIf (  ( tcmfecret <today()) OR (NOT isNull(tcmfecret) ),  RGB(192,192,192), RGB(255,255,255) )" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" netscapelayers="0" )

release 8;
datawindow(units=0 timer_interval=0 color=79741120 processing=0 HTMLDW=no print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=368 color="536870912" )
table(column=(type=long updatewhereclause=yes name=greid dbname="htgrpeleter.greid" )
 column=(type=date updatewhereclause=yes name=grefecini dbname="htgrpeleter.grefecini" )
 column=(type=date updatewhereclause=yes name=grefecfin dbname="htgrpeleter.grefecfin" )
 column=(type=char(35) update=yes updatewhereclause=yes name=grpnombre dbname="htgrupoter.grpnombre" )
 column=(type=long update=yes updatewhereclause=yes name=intid dbname="htgrupoter.intid" )
 column=(type=long updatewhereclause=yes name=grpid dbname="htgrpeleter.grpid" )
 column=(type=long updatewhereclause=yes name=maqid dbname="htgrpeleter.maqid" )
 column=(type=long updatewhereclause=yes name=huaid dbname="htgrpeleter.huaid" )
 column=(type=char(1) updatewhereclause=yes name=gretipo dbname="htgrpeleter.gretipo" )
 column=(type=char(50) updatewhereclause=yes name=gtcuentaster_ctcdescri dbname="gtcuentaster.ctcdescri" )
 column=(type=char(10) updatewhereclause=yes name=gtcuentaster_ctcnumsap dbname="gtcuentaster.ctcnumsap" )
 retrieve="PBSELECT( VERSION(400) TABLE(NAME=~"htgrpeleter~" )  TABLE(NAME=~"htgrupoter~" )  TABLE(NAME=~"gtcuentaster~" ) COLUMN(NAME=~"htgrpeleter.greid~") COLUMN(NAME=~"htgrpeleter.grefecini~") COLUMN(NAME=~"htgrpeleter.grefecfin~") COLUMN(NAME=~"htgrupoter.grpnombre~") COLUMN(NAME=~"htgrupoter.intid~") COLUMN(NAME=~"htgrpeleter.grpid~") COLUMN(NAME=~"htgrpeleter.maqid~") COLUMN(NAME=~"htgrpeleter.huaid~") COLUMN(NAME=~"htgrpeleter.gretipo~") COLUMN(NAME=~"gtcuentaster.ctcdescri~") COLUMN(NAME=~"gtcuentaster.ctcnumsap~")    JOIN (LEFT=~"htgrpeleter.grpid~"    OP =~"=~"RIGHT=~"htgrupoter.grpid~" )    JOIN (LEFT=~"htgrupoter.ctcid~"    OP =~"=~"RIGHT=~"gtcuentaster.ctcid~" )) " )
text(band=detail alignment="1" text="Cuenta Tercero" border="0" color="0" x="23" y="16" height="60" width="357" html.valueishtml="0"  name=gtcuentaster_ctcdescri_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="79741120" )
text(band=detail alignment="1" text="Nombre Grupo" border="0" color="0" x="23" y="96" height="60" width="357" html.valueishtml="0"  name=grpnombre_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="Ini/Fin Relación" border="0" color="0" x="18" y="176" height="60" width="357" html.valueishtml="0"  name=grpfecini_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=3 alignment="0" tabsequence=32766 border="2" color="0" x="754" y="176" height="60" width="274" format="dd/mm/yyyy" html.valueishtml="0"  name=grefecfin visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="67108864" )
column(band=detail id=2 alignment="0" tabsequence=32766 border="2" color="0" x="393" y="176" height="60" width="274" format="dd/mm/yyyy" html.valueishtml="0"  name=grefecini visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="67108864" )
text(band=detail alignment="2" text="-" border="0" color="0" x="681" y="176" height="60" width="55" html.valueishtml="0"  name=t_1 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=4 alignment="0" tabsequence=32766 border="2" color="0" x="393" y="96" height="60" width="1161" format="[general]" html.valueishtml="0"  name=grpnombre visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="67108864" )
compute(band=detail alignment="0" expression="if (isNull(gtcuentaster_ctcnumsap), '', gtcuentaster_ctcnumsap) + 
if (isNull(gtcuentaster_ctcdescri),'',' - ' + gtcuentaster_ctcdescri)"border="2" color="0" x="393" y="16" height="60" width="1161" format="[GENERAL]" html.valueishtml="0"  name=compute_1 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="67108864" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" netscapelayers="0" )

release 10.5;
datawindow(units=0 timer_interval=0 color=1073741824 processing=0 HTMLDW=no print.printername="" print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.canusedefaultprinter=yes print.prompt=no print.buttons=no print.preview.buttons=no print.cliptext=no print.overrideprintjob=no print.collate=yes print.preview.outline=yes hidegrayline=no )
header(height=0 color="536870912" )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=64 color="536870912" )
table(column=(type=long updatewhereclause=yes name=comid dbname="comid" )
 )
column(band=detail id=1 alignment="1" tabsequence=10 border="0" color="33554432" x="5" y="0" height="64" width="1445" format="[general]" html.valueishtml="0"  name=comid visible="1" dddw.name=d_dddw_componentes_maquina dddw.displaycolumn=comdescri dddw.datacolumn=comid dddw.percentwidth=0 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=yes dddw.case=any dddw.vscrollbar=yes  font.face="Arial" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" encodeselflinkargs="1" netscapelayers="0" pagingmethod=0 generatedddwframes="1" )
xhtmlgen() cssgen(sessionspecific="0" )
xmlgen(inline="0" )
xsltgen()
jsgen()
export.xml(headgroups="1" includewhitespace="0" metadatatype=0 savemetadata=0 )
import.xml()
export.pdf(method=0 distill.custompostscript="0" xslfop.print="0" )
export.xhtml()
 
release 10.5;
datawindow(units=0 timer_interval=0 color=1073741824 processing=0 HTMLDW=no print.printername="" print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.canusedefaultprinter=yes print.prompt=no print.buttons=no print.preview.buttons=no print.cliptext=no print.overrideprintjob=no print.collate=yes print.preview.outline=yes hidegrayline=no )
header(height=0 color="536870912" )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=60 color="536870912" )
table(column=(type=long updatewhereclause=yes name=comid dbname="comid" )
 column=(type=char(55) updatewhereclause=yes name=comdescri dbname="comdescri" )
 )
column(band=detail id=2 alignment="0" tabsequence=32766 border="0" color="33554432" x="14" y="0" height="60" width="1509" format="[general]" html.valueishtml="0"  name=comdescri visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.autohscroll=yes  font.face="Arial" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" encodeselflinkargs="1" netscapelayers="0" pagingmethod=0 generatedddwframes="1" )
xhtmlgen() cssgen(sessionspecific="0" )
xmlgen(inline="0" )
xsltgen()
jsgen()
export.xml(headgroups="1" includewhitespace="0" metadatatype=0 savemetadata=0 )
import.xml()
export.pdf(method=0 distill.custompostscript="0" xslfop.print="0" )
export.xhtml()
 







































































































































































forward
global type w_form_modelo from w_form_base
end type
type st_5 from statictext within w_form_modelo
end type
end forward

global type w_form_modelo from w_form_base
integer x = 192
integer y = 436
integer width = 2432
integer height = 1692
st_5 st_5
end type
global w_form_modelo w_form_modelo

type variables

long					il_numjugadores, il_coaid
string					is_crmid_hom
string					is_numhom


end variables

forward prototypes
public function integer of_asigna_valores ()
public function boolean of_validadatos ()
public function integer of_abrirmodelo ()
public function boolean of_validacampos ()
end prototypes

public function integer of_asigna_valores ();//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			w_form_modelo
//
//	Función:			of_asigna_valores
//
//	Descripción	  : Asignamos los valores recibidos de CRM
//
//	Usada en:	   Mantenimiento de modelos. Alta/Modificación
//
//	Argumentos:		(None)
//					  
//	Retorno:			0 OK													<br></br>
//						1 Error												<br></br>
//																				<br></br><div><b>
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios									</div><div>
//	--------	--------	---------------------------------		</div><div>
//	PBD 		05/10/07		Creación		</div>
//
///////////////////////////////////////////////////////////////////////////////
dw_1.object.crmtmoid[1]  	 =  App.is_parametros[2]
dw_1.object.tmomatnr[1]  	 =  App.is_parametros[3]
dw_1.object.tmodescri[1] 	 =  App.is_parametros[4]
//dw_1.object.tmaid[1] 	 	 =  long(App.is_parametros[5]) // FRG 2008/02/11 Ya no se recibe el tipo de maquina.
dw_1.object.fypidfab[1]  	 =  long(App.is_parametros[5])
//dw_1.object.tjuid[1] 	 	 =  long(App.is_parametros[7]) // FRG 2008/02/11 Ya no se recibe el tipo de juego.

il_coaid 						 =  long(App.is_parametros[6])
is_numhom	 	 			 =  App.is_parametros[7]
il_numjugadores		 	 =  long(App.is_parametros[8])
is_crmid_hom 				 =  App.is_parametros[9]

IF ii_modo = II_ALTA THEN
	dw_1.object.monid[1] = 1 
END IF
/*
Id modelo en Siccod	Integer	Si es 0 corresponde a una alta en Siccod, 
							Si no es 0 es una modificación
Id modelo en Siebel	Varchar(35)	
Código SAP	Char(7)	
Nombre	Varchar(35)	
Tipo de Máquina	Integer	Id de Siccod.
Fabricante	Integer	Id de Siccod.
Tipo de Juego	Integer	Id de Siccod.
Comunidad de homologación	Integer	Id de Siccod.
Número de homologación	Varchar(10)	
Número de jugadores	Integer	
*/

Return 1




end function

public function boolean of_validadatos ();/* Valida que no haya vacios o nulos en los parametros de la cadena*/

boolean								lb_retorno = TRUE
integer								i, ll_total, li_verificacodsap
String 								ls_mensaje[]

n_cst_do_crm_modelo				lnv_do_crm_modelo


/*ls_mensaje = { &
"ID Modelo", "ID Modelo Siebel", "Código SAP", + &
"Nombre","Tipo de máquina","Fabricante", + &
"Tipo de Juego","Comunidad de homologación","Número de homologación",+&
"Número de jugadores"}*/ // FRG 2008/02/11.- Nuevo formato
ls_mensaje = { &
"ID Modelo", "ID Modelo Siebel", "Código SAP", + &
"Nombre","Fabricante", + &
"Comunidad de homologación","Número de homologación",+&
"Número de jugadores"}


ll_total = UpperBound(App.is_parametros[])

FOR i = 1 TO ll_total
	IF isnull(App.is_parametros[i]) OR trim(App.is_parametros[i]) = '' THEN
		IF UpperBound(ib_canbenull[]) >= i THEN
			IF ib_canbenull[i] = FALSE THEN
				App.srvMsgBox.MessageBox(App.MsgBoxTitle, "No se ha encontrado el dato del " + ls_mensaje[i])
				lb_retorno = FALSE
				EXIT
			END IF
		ELSE
			App.srvMsgBox.MessageBox(App.MsgBoxTitle, "No se ha encontrado el dato del " + ls_mensaje[i])
			lb_retorno = FALSE
			EXIT
		END IF
	END IF
NEXT

/*IF lb_retorno = TRUE THEN

App.inv_Connect.of_CreateInstanceDatos(lnv_do_crm_modelo,"n_cst_do_crm_modelo")

	IF lnv_do_crm_modelo.of_validartipmaquina(long(App.is_parametros[5]),&
								long(App.is_parametros[7])) < 0 THEN
		App.srvMsgBox.MessageBox(App.MsgBoxTitle,  'El tipo de maquina no corresponde al tipo de Juego')
//		ii_valor = -40
		lb_retorno = FALSE
	END IF
END IF*/// FRG 2008/02/11 La validación se pasa a la validacion de la grabacion.

App.inv_Connect.of_CreateInstanceDatos(lnv_do_crm_modelo,"n_cst_do_crm_modelo")

IF lb_retorno = TRUE AND ii_modo = II_ALTA THEN
	
	IF lnv_do_crm_modelo.of_validarcodsiebel(App.is_parametros[2], long(App.is_parametros[1])) < 0 THEN
		App.srvMsgBox.MessageBox(App.MsgBoxTitle, "el Código Siebel ya existe ingrese otro")
//		ii_valor = -10
		lb_retorno = FALSE
	END IF
	
END IF
/*
IF lb_retorno = TRUE AND ii_modo = II_ALTA THEN

	li_verificacodsap = lnv_do_crm_modelo.of_validarcodigosap(App.is_parametros[3], &
							long(App.is_parametros[5]))
		
	IF li_verificacodsap < 0 THEN
		App.srvMsgBox.MessageBox(App.MsgBoxTitle, "el Código SAP ya existe ingrese otro")
//		ii_valor = -20
		lb_retorno = FALSE
	END IF
	
END IF*/// FRG 2008/02/11 La validación se pasa a la validacion de la grabacion.

IF lb_retorno = TRUE THEN

	/*Comprueba que la comunidad exista y no este repetida*/
	//06.02.2008 Comunidad puede ser 0
	IF long(App.is_parametros[6]) > 0 THEN
		IF lnv_do_crm_modelo.of_validarcomunidad(long(App.is_parametros[6])) < 0 THEN
			App.srvMsgBox.MessageBox(App.MsgBoxTitle, 'La Comunidad No existe')
	//		ii_valor = -30 
			lb_retorno = FALSE
		END IF
	END IF
	
END IF

/*IF lb_retorno = TRUE THEN

	IF lnv_do_crm_modelo.of_validarcomunidad(long(App.is_parametros[8]), &
					long(App.is_parametros[5])) < 0 THEN
		App.srvMsgBox.MessageBox(App.MsgBoxTitle, 'Se han encontrado múltiples homologaciones con la misma comunidad')
//			ii_valor = -60 
		lb_retorno = FALSE
	END IF
	
END IF
*/ // FRG 2008/02/11 La validación se pasa a la validacion de la grabacion.
App.inv_Connect.of_DestroyInstance(lnv_do_crm_modelo)

Return lb_retorno
end function

public function integer of_abrirmodelo ();//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			w_form_modelo
//
//	Función:			of_abrirmodelo
//
//	Descripción	  : Cargamos en pantalla los datos del mantenimiento
//
//	Usada en:	   Mantenimiento de modelos. Alta/Modificación
//
//	Argumentos:		(None)
//					  
//	Retorno:			0 OK													<br></br>
//						1 Error												<br></br>
//																				<br></br><div><b>
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios									</div><div>
//	--------	--------	---------------------------------		</div><div>
//	PBD 		05/10/07		Creación		</div>
//
///////////////////////////////////////////////////////////////////////////////
Integer 							li_valor, li_retorno
long								ll_tmoid
Blob    							lb_blobModelo

n_cst_do_crm_modelo 			luo_do_crm_modelo

SetPointer(Hourglass!)

IF Long(App.is_parametros[1]) = 0 THEN
	ii_modo = II_ALTA
ELSE
	ii_modo = II_MODIFICACION
	ll_tmoid = long(App.is_parametros[1])
END IF


App.inv_Connect.of_CreateInstanceDatos(luo_do_crm_modelo,&
		"n_cst_do_crm_modelo")

/*
Si estamos en alta asignamos los valores SetItem* y luego obtenemos
los dddw

En modificación hacemos un retrieve de BBDD y luego los SetItem*
*/

IF of_validadatos() = FALSE THEN
	RETURN -1
END IF

IF of_validacampos() = FALSE THEN
	RETURN -1
END IF

IF ii_modo = II_ALTA THEN
	li_retorno = of_asigna_valores()

	If li_retorno < -1 Then
		App.inv_Connect.of_DestroyInstance(luo_do_crm_modelo)
		App.of_parametro_retorno(This, App.ii_valor)
		RETURN -1
	END IF
	
	dw_1.GetFullState(lb_blobModelo) 
	li_valor = luo_do_crm_modelo.of_recuperadddw(lb_blobModelo)
	THIS.dw_1.SetFullState(lb_blobModelo) 
	
ELSEIF ii_modo = II_MODIFICACION THEN
	
	luo_do_crm_modelo.of_addwhere( "atmodelo.tmoid = " + string(ll_tmoid))
	li_valor = luo_do_crm_modelo.of_retrieveblob(lb_blobModelo)
	
	dw_1.SetFullState(lb_blobModelo)
	
	IF dw_1.RowCount() = 0 THEN
		App.srvMsgBox.MessageBox(App.MsgBoxTitle,  &
						'No se ha encontrado el modelo que pretende modificar.')
		App.ii_valor = -1
		RETURN -1
	END IF
	
	IF li_valor >= 0 THEN
		li_retorno = of_asigna_valores()
		
		If li_retorno < -1 Then
			App.inv_Connect.of_DestroyInstance(luo_do_crm_modelo)
			App.of_parametro_retorno(This, App.ii_valor)
			RETURN -1
		END IF
		
	END IF
	
END IF

App.inv_Connect.of_DestroyInstance(luo_do_crm_modelo)

RETURN 0
end function

public function boolean of_validacampos ();/*is_campos = { &
"ID Modelo Siccod", "ID Modelo Siebel", "Código SAP", + &
"Nombre","Tipo de Máquina","Fabricante", + &
"Tipo de juego","Comunidad de homologación","Número de homologación",+&
"Número de jugadores"&
}*/
boolean		lb_retorno = TRUE

//Fabricante
IF NOT IsNumber(App.is_parametros[5]) OR long(App.is_parametros[5]) = 0 THEN
	App.srvmsgbox.MessageBox("Fabricante no válido",'',Information!)
	RETURN FALSE
END IF

//Comunidad de homologación		//29.01.2008 Puede ser 0 = sin homologación
IF NOT IsNumber(App.is_parametros[6]) THEN
	App.srvmsgbox.MessageBox("Comunidad de homologación no válida",'',Information!)
	RETURN FALSE
END IF

//Número de jugadores
IF NOT of_IsNumber(App.is_parametros[8])  THEN
	App.srvmsgbox.MessageBox("Número de jugadores no válido",'',Information!)
	RETURN FALSE
END IF


RETURN lb_retorno
end function

event m_accok;//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			w_form_modelo
//
//	Evento:			m_accok
//
//	Descripción	  : Guardamos los datos del mantenimiento
//
//	Usada en:	   Mantenimiento de modelos. Alta/Modificación
//
//	Argumentos:		(None)
//					  
//	Retorno:			(None)												
//																				<br></br><div><b>
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios									</div><div>
//	--------	--------	---------------------------------		</div><div>
//	PBD 		05/10/07		Creación		</div>
//
///////////////////////////////////////////////////////////////////////////////
boolean										lb_retorno = TRUE
blob											lb_blobModelo
Int												li_verificacodsap
long											ll_tmoid, ll_ret, ll_maquina, ll_juego
string											ls_error, ls_info, ls_valor
	
str_interlocutor_eu								lstr_parametros
str_modecomu								lstr_modecomu
m_main										lm_menu
n_cst_do_crm_modelo					lnv_do_crm_modelo, lnv_do_local

dw_1.AcceptText()

IF dw_1.ModifiedCount() + dw_1.DeletedCount() = 0 THEN
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,"No se ha realizado ningún cambio")
	RETURN
END IF

// Validamos.
ll_maquina = dw_1.Object.tmaid[1]
IF IsNull(ll_maquina) THEN
	App.srvmsgbox.MessageBox(App.MsgBoxTitle,"Tipo de Máquina no válido")
	RETURN
END IF

ls_valor = dw_1.Describe("Evaluate('LookUpDisplay(tmaid) ', 1)")

if ls_valor <> 'B' and ls_valor <> 'S' and ls_valor <> 'C' then
	ll_juego = dw_1.Object.tjuid[1]
	IF IsNull(ll_juego) THEN
		App.srvmsgbox.MessageBox(App.MsgBoxTitle,"Tipo de Juego no válido")
		RETURN
	END IF
end if

App.inv_Connect.of_CreateInstanceDatos(lnv_do_crm_modelo,"n_cst_do_crm_modelo")

IF lnv_do_crm_modelo.of_validartipmaquina(ll_maquina, ll_juego) < 0 THEN
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  'El tipo de maquina no corresponde al tipo de Juego')
	lb_retorno = FALSE
END IF

IF lb_retorno AND ii_modo = II_ALTA THEN

	li_verificacodsap = lnv_do_crm_modelo.of_validarcodigosap(App.is_parametros[3], ll_maquina)
		
	IF li_verificacodsap < 0 THEN
		App.srvMsgBox.MessageBox(App.MsgBoxTitle, "el Código SAP ya existe ingrese otro")
		lb_retorno = FALSE
	END IF
end if

/*PBD 04.03.2008 Se permiten varias homologaciones por comunidad
IF lb_retorno  then
	IF lnv_do_crm_modelo.of_validarcomunidad(long(App.is_parametros[6]), ll_maquina) < 0 THEN
		App.srvMsgBox.MessageBox(App.MsgBoxTitle, 'Se han encontrado múltiples homologaciones con la misma comunidad')
		lb_retorno = FALSE
	END IF
end if
*/

if lb_retorno then
	dw_1.GetFullState(lb_blobModelo) 
	ll_tmoid = lnv_do_crm_modelo.of_updateblob(lb_blobModelo)
	
	dw_1.SetFullState(lb_blobModelo) 
	
	IF ll_tmoid < 0 THEN
		ls_error = lnv_do_crm_modelo.of_geterrortexto()
		ls_info = lnv_do_crm_modelo.of_geterrorinfo()
	END IF
end if

App.inv_Connect.of_DestroyInstance(lnv_do_crm_modelo)
if NOT lb_retorno then
	Return
end if

IF ll_tmoid > 0 THEN
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  'Información almacenada satisfactoriamente')
		
	dw_1.ResetUpdate()
	
//	IF ii_modo = II_ALTA THEN 
		lm_menu = THIS.MenuID
		lm_menu.m_03.m_0301.Enabled = FALSE
//	END IF
	
	App.il_tmoid = ll_tmoid	//valor que se retornará a CRM
	
	lstr_parametros.str_ugeid = App.il_ugeid
	lstr_parametros.str_intid = ll_tmoid
	lstr_parametros.str_modo =	 ii_modo
	lstr_parametros.str_tag = "eu_modelo_r1"
	
	//Tipos de contador para el modelo
	OpenWithParm (w_response_tconmod, lstr_parametros)
		
	lstr_modecomu.al_modo	= ii_modo
	lstr_modecomu.al_coaid	= il_coaid
	lstr_modecomu.al_tmoid	= ll_tmoid
	lstr_modecomu.as_numhom = is_numhom
	lstr_modecomu.al_numjugadores = il_numjugadores
	lstr_modecomu.as_tmodescri = dw_1.GetItemString(1,"tmodescri")
	lstr_modecomu.as_crmid_hom =	 is_crmid_hom
	lstr_modecomu.str_tag = "eu_modelo_r2"
	
	IF il_coaid > 0 THEN		//Si la comunidad es 0 no tenemos el dato de homologación y no guardamos nada
	
		//Regimen máquina
		OpenWithParm (w_response_modecomu, lstr_modecomu)	
		
	END IF
	//25.01.2008 Al terminar la grabación, cerramos la ventana
	THIS.Event ue_exitapp()
	RETURN
	
ELSE
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  ls_error, ls_info)
	App.il_maqid = -1
	
END IF

end event

event ue_postopen;integer			li_retorno

li_retorno = of_abrirmodelo()

IF li_retorno < 0 THEN
	crm_siccod.il_codretorno = -1
	RETURN FALSE
END IF

RETURN TRUE
end event

on w_form_modelo.create
int iCurrent
call super::create
this.st_5=create st_5
iCurrent=UpperBound(this.Control)
this.Control[iCurrent+1]=this.st_5
end on

on w_form_modelo.destroy
call super::destroy
if IsValid(MenuID) then destroy(MenuID)
destroy(this.st_5)
end on

event ue_preopen;call super::ue_preopen;/*is_campos = { &
"ID Modelo Siccod", "ID Modelo Siebel", "Código SAP", + &
"Nombre","Tipo de Máquina","Fabricante", + &
"Tipo de juego","Comunidad de homologación","Número de homologación",+&
"Número de jugadores"&
}*/ // FRG 2008/02/11
is_campos = { &
"ID Modelo Siccod", "ID Modelo Siebel", "Código SAP", + &
"Nombre","Fabricante", + &
"Comunidad de homologación","Número de homologación",+&
"Número de jugadores", "ID Homologación Siebel"&
}
//ib_canbenull[7] = TRUE // FRG 2008/02/11 .- El tipo de juego ya no se recibe.
ib_canbenull[5] = TRUE
ib_canbenull[6] = TRUE
ib_canbenull[7] = TRUE
ib_canbenull[8] = TRUE
ib_canbenull[9] = TRUE
RETURN TRUE
end event

type dw_1 from w_form_base`dw_1 within w_form_modelo
integer y = 96
integer width = 2400
integer height = 1340
string dataobject = "d_do_crm_modelo"
end type

event dw_1::itemchanged;call super::itemchanged;String				ls_valor
Long				ll_nulo

if row > 0 then
	if dwo.name = 'tmaid' then
		this.AcceptText()
		ls_valor = this.Describe("Evaluate('LookUpDisplay(tmaid) ', " + String(row) + ")")

		SetNull(ll_nulo)
		this.Object.tjuid[1] = ll_nulo
		if ls_valor = 'B' or ls_valor = 'C' or ls_valor = 'S' then
			this.Modify("tjuid.protect = '1'")
			this.Modify("tjuid.Background.Color='79741120'")
		else
			this.Modify("tjuid.protect = '0'")
			this.Modify("tjuid.Background.Color='16777215'")
		end if
	end if
end if
end event

event dw_1::clicked;call super::clicked;String		ls_ruta, ls_fichero

if row > 0 then
	if dwo.name = 't_2' then
		if GetFileOpenName(Parent.title, ls_ruta, ls_fichero, 'BMP','Bitmap (*.BMP), *.BMP, Ficheros GIF (*.GIF), *.GIF, Fichero JPEG (*.JPEG), *.JPG') = 1 then
			this.Object.tmofotmod[1] = ls_ruta
			this.Object.c_bitmap[1] = ls_ruta
		end if
	end if
end if
end event

type st_5 from statictext within w_form_modelo
integer y = 12
integer width = 2418
integer height = 80
boolean bringtotop = true
integer textsize = -10
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
long backcolor = 15780518
string text = "Datos del Modelo"
boolean border = true
boolean focusrectangle = false
end type


forward
global type w_response_tconmod from w_response_base
end type
end forward

global type w_response_tconmod from w_response_base
integer width = 2249
integer height = 1184
end type
global w_response_tconmod w_response_tconmod

type variables
long		il_modelo
date		idt_fechacambio
end variables

forward prototypes
public function integer of_botones (integer ai_modo)
public function integer of_setdefaultvalues ()
end prototypes

public function integer of_botones (integer ai_modo);/*Esta función habilita y deshabilita botones
en función del estado.
Se centraliza aquí para poder aplicar permisos
de acceso.*/

CHOOSE CASE ai_modo
	CASE II_ACCESO_ALTA
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False	/*porque debe guardar
												 alguna antes de salir */
		pb_modificar.enabled = False
		pb_alta.enabled = False
		pb_borrar.enabled = False
		pb_salir.enabled = TRUE	//Siempre permitimos salir
	
	CASE II_ACCESO_MODIFICACION
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = TRUE
		pb_alta.enabled = TRUE
		pb_borrar.enabled = TRUE
		pb_salir.enabled = TRUE	//Siempre permitimos salir
		
	CASE II_INSERTROW
		pb_aceptar.enabled = False
		pb_cancelar.enabled = True
		pb_modificar.enabled = False
		pb_alta.enabled = False
		pb_borrar.enabled = True
		pb_salir.enabled = TRUE	//Siempre permitimos salir
		
	CASE II_MODIFICAR
		pb_aceptar.enabled = True
		pb_cancelar.enabled = True
		pb_modificar.enabled = False
		pb_alta.enabled = False
		pb_borrar.enabled = False
		pb_salir.enabled = TRUE	//Siempre permitimos salir
		
	CASE II_PREPARED_BORRABLE
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = True
		pb_alta.enabled = True
		pb_borrar.enabled = True
		pb_salir.enabled = True
	
	CASE II_PREPARED_NOBORRABLE
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = True
		pb_alta.enabled = True
		pb_borrar.enabled = True
		pb_salir.enabled = True
		
	CASE II_TRASBORRAR
		pb_aceptar.enabled = True
		pb_cancelar.enabled = True
		pb_modificar.enabled = False
		pb_alta.enabled = True
		pb_borrar.enabled = True
		pb_salir.enabled = TRUE	//Siempre permitimos salir
		
	CASE II_TRASGUARDAR
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = True
		pb_alta.enabled = True
		pb_borrar.enabled = True
		pb_salir.enabled = True
		
		pb_aceptar.default = False
		pb_salir.default = True

END CHOOSE




RETURN 0
end function

public function integer of_setdefaultvalues ();
//el interlocutor tiene que ser el que venga de la otra ventana
//para todas las filas que se creen
dw_1.Modify("tmoid.Initial = '" + string(il_modelo) + "'")

RETURN 0
end function

event ue_close;str_interlocutor_eu		lstr_interlocutor

il_ugeid = lstr_interlocutor.str_ugeid
idt_fechacambio  = lstr_interlocutor.str_fecha

Message.PowerObjectParm  = lstr_interlocutor

Close(This)




end event

event ue_save();long						ll_id
integer					li_retorno
blob						lblb_datos
n_cst_do_tconmod		luo_intuge

dw_1.AcceptText()

li_retorno = THIS.Event ue_presave()

IF li_retorno < 0 THEN RETURN

SetPointer(Hourglass!)


App.inv_Connect.of_CreateInstanceDatos(luo_intuge,"n_cst_do_tconmod")

dw_1.GetFullState(lblb_datos)

ll_id = luo_intuge.of_updateblob( lblb_datos)

IF ll_id >= 0 THEN
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  'Información almacenada correctamente.')

	ib_pregunta_salir = FALSE
Else
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  luo_intuge.of_geterrortexto())
END IF
	
App.inv_Connect.of_DestroyInstance(luo_intuge)


IF ll_id < 0 THEN
	RETURN
END IF

THIS.Event ue_retrieve()

of_botones(II_TRASGUARDAR)

f_desabled(dw_1)
end event

event ue_enabled;//dw_1.SetRow(dw_1.GetRow())
//dw_1.SetFocus()

f_enabled(dw_1)

of_botones(II_MODIFICAR)
end event

event ue_retrieve();integer					li_ret
string					ls_where
blob						lblb_datos
n_cst_do_tconmod		luo_tconmod

App.inv_Connect.of_CreateInstanceDatos(luo_tconmod,"n_cst_do_tconmod")

ls_where = 'tmoid = '  + string(il_modelo)
luo_tconmod.of_Addwhere(ls_where)
li_ret = luo_tconmod.of_Retrieveblob(lblb_datos)

dw_1.SetFullState(lblb_datos)

IF li_ret < 0 THEN
	App.srvMsgBox.MessageBox(App.MsgBoxTitle, luo_tconmod.of_geterrortexto())
END IF

of_setdefaultvalues()

dw_1.ResetUpdate()

App.inv_Connect.of_DestroyInstance(luo_tconmod)
end event

event open;call super::open;
long						ll_fila
integer					li_ret
str_interlocutor_eu		lstr_interlocutor

lstr_interlocutor = Message.PowerObjectParm

il_modelo = lstr_interlocutor.str_intid
il_ugeid = lstr_interlocutor.str_ugeid
ii_modo  = lstr_interlocutor.str_modo


Event ue_retrieve()

of_setdefaultvalues() //para que cree filas con intid relleno

IF ii_modo = II_ALTA THEN

	ll_fila = dw_1.InsertRow(0)

	of_botones(II_ACCESO_ALTA)
	dw_1.SetRow(dw_1.RowCount())
	dw_1.SetFocus()
ELSEIF ii_modo = II_MODIFICACION THEN 
	Event ue_retrieve()
	
	of_botones(II_ACCESO_MODIFICACION)
	f_desabled(dw_1)
	ib_pregunta_salir = FALSE
END IF

of_setdefaultvalues()

end event

on w_response_tconmod.create
call super::create
end on

on w_response_tconmod.destroy
call super::destroy
end on

event closequery;integer			li_retorno

IF ib_pregunta_salir = TRUE THEN
	li_retorno = App.srvMsgBox.MessageBox(App.MsgBoxTitle,  &
	'No se han introducido los tipos de contador.~r~n ¿Está seguro de salir?',&
	Question!, YesNo!, 2)
	
	IF li_retorno = 2 THEN
		RETURN 1
	END IF
END IF
end event

type p_icono from w_response_base`p_icono within w_response_tconmod
end type

type st_titulo from w_response_base`st_titulo within w_response_tconmod
string text = "Mantenimiento perfiles de los contadores"
end type

type pb_borrar from w_response_base`pb_borrar within w_response_tconmod
end type

type pb_modificar from w_response_base`pb_modificar within w_response_tconmod
end type

type pb_salir from w_response_base`pb_salir within w_response_tconmod
integer x = 1979
end type

type pb_aceptar from w_response_base`pb_aceptar within w_response_tconmod
end type

type pb_cancelar from w_response_base`pb_cancelar within w_response_tconmod
end type

type pb_alta from w_response_base`pb_alta within w_response_tconmod
end type

type dw_1 from w_response_base`dw_1 within w_response_tconmod
integer width = 2135
string dataobject = "d_do_tconmod"
end type

event rowfocuschanged;IF this.RowCount() < 1 THEN RETURN

SetRedraw (FALSE)
SelectRow (0, FALSE)
SelectRow (GetRow(), TRUE )
SetRedraw (TRUE)
end event

event dberror;Return 1
end event

event itemchanged;
of_botones(ii_modificar)
end event

event editchanged;
of_botones(ii_modificar)
end event

type st_fondo from w_response_base`st_fondo within w_response_tconmod
end type


release 8;
datawindow(units=0 timer_interval=0 color=16777215 processing=1 HTMLDW=no print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no grid.lines=0 )
header(height=76 color="80269524" )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=72 color="536870912" )
table(column=(type=long update=yes updatewhereclause=yes key=yes name=tconmodid dbname="gttconmod.tconmodid" )
 column=(type=long update=yes updatewhereclause=yes name=tcoid dbname="gttconmod.tcoid" )
 column=(type=long update=yes updatewhereclause=yes name=tmoid dbname="gttconmod.tmoid" )
 column=(type=char(1) update=yes updatewhereclause=yes name=tconclase dbname="gttconmod.tconclase" initial="E" values="Entrada	E/Salida	S/Entrada//Salida	A/" )
 column=(type=datetime update=yes updatewhereclause=yes name=feccrereg dbname="gttconmod.feccrereg" )
 column=(type=char(10) update=yes updatewhereclause=yes name=codusucid dbname="gttconmod.codusucid" )
 retrieve="  SELECT gttconmod.tconmodid,   
         gttconmod.tcoid,   
         gttconmod.tmoid,   
         gttconmod.tconclase, 
         gttconmod.feccrereg,   
         gttconmod.codusucid  
    FROM gttconmod   
" update="gttconmod" updatewhere=0 updatekeyinplace=yes )
text(band=header alignment="0" text="Tipo Contador" border="4" color="16711680" x="9" y="8" height="60" width="827" html.valueishtml="0"  name=tcoid_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=header alignment="0" text="Clase" border="4" color="16711680" x="846" y="8" height="60" width="398" html.valueishtml="0"  name=tconclase_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=2 alignment="0" tabsequence=10 border="0" color="0" x="9" y="4" height="60" width="827" format="[general]" html.valueishtml="0"  name=tcoid visible="1" dddw.name=d_dddw_tipocontador dddw.displaycolumn=c_todo dddw.datacolumn=tcoid dddw.percentwidth=200 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=no dddw.case=any dddw.imemode=0 dddw.hscrollbar=yes dddw.vscrollbar=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=4 alignment="0" tabsequence=20 border="0" color="0" x="846" y="4" height="60" width="398" format="[general]" html.valueishtml="0"  name=tconclase visible="1" ddlb.limit=0 ddlb.allowedit=no ddlb.case=any ddlb.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" netscapelayers="0" )

release 8;
datawindow(units=0 timer_interval=0 color=16777215 processing=1 HTMLDW=no print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no grid.lines=0 )
header(height=80 color="80269524" )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=72 color="536870912" )
table(column=(type=long update=yes updatewhereclause=yes key=yes name=hmcid dbname="gtmodecomu.hmcid" )
 column=(type=long update=yes updatewhereclause=yes name=coaid dbname="gtmodecomu.coaid" )
 column=(type=long update=yes updatewhereclause=yes name=tmoid dbname="gtmodecomu.tmoid" )
 column=(type=char(10) update=yes updatewhereclause=yes name=hmcnumhom dbname="gtmodecomu.hmcnumhom" )
 column=(type=char(12) updatewhereclause=yes name=hmcnumreg dbname="gtmodecomu.hmcnumreg" )
 column=(type=long update=yes updatewhereclause=yes name=hmcjugadores dbname="gtmodecomu.hmcjugadores" )
 column=(type=char(35) update=yes updatewhereclause=yes name=hmcdescri dbname="gtmodecomu.hmcdescri" )
 column=(type=datetime update=yes updatewhereclause=yes name=feccrereg dbname="gtmodecomu.feccrereg" )
 column=(type=char(10) update=yes updatewhereclause=yes name=codusucid dbname="gtmodecomu.codusucid" )
 retrieve="PBSELECT( VERSION(400) TABLE(NAME=~"gtmodecomu~" ) COLUMN(NAME=~"gtmodecomu.hmcid~") COLUMN(NAME=~"gtmodecomu.coaid~") COLUMN(NAME=~"gtmodecomu.tmoid~") COLUMN(NAME=~"gtmodecomu.hmcnumhom~") COLUMN(NAME=~"gtmodecomu.hmcnumreg~") COLUMN(NAME=~"gtmodecomu.hmcjugadores~") COLUMN(NAME=~"gtmodecomu.hmcdescri~") COLUMN(NAME=~"gtmodecomu.feccrereg~") COLUMN(NAME=~"gtmodecomu.codusucid~")WHERE(    EXP1 =~"gtmodecomu.tmoid~"   OP =~"=~"    EXP2 =~":an_tmoid~" ) ) ARG(NAME = ~"an_tmoid~" TYPE = number) " update="gtmodecomu" updatewhere=0 updatekeyinplace=yes arguments=(("an_tmoid", number)) )
text(band=header alignment="0" text="Comunidad" border="4" color="0" x="9" y="8" height="60" width="649" html.valueishtml="0"  name=coaid_t visible="1"  font.face="Arial" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=header alignment="0" text="Homologación" border="4" color="0" x="667" y="8" height="60" width="352" html.valueishtml="0"  name=hmcnumhom_t visible="1"  font.face="Arial" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=header alignment="0" text="Descripción" border="4" color="0" x="1029" y="8" height="60" width="795" html.valueishtml="0"  name=hmcdescri_t visible="1"  font.face="Arial" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=header alignment="0" text="Jugadores" border="4" color="0" x="1833" y="8" height="60" width="352" html.valueishtml="0"  name=hmcjugadores_t visible="1"  font.face="Arial" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=2 alignment="0" tabsequence=10 border="0" color="0" x="9" y="4" height="60" width="649" format="[general]" html.valueishtml="0"  name=coaid visible="1" dddw.name=d_dddw_comunidad dddw.displaycolumn=coadescri dddw.datacolumn=coaid dddw.percentwidth=0 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=no dddw.case=any dddw.imemode=0 dddw.hscrollbar=yes dddw.vscrollbar=yes  font.face="Arial" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=4 alignment="0" tabsequence=20 border="0" color="0" x="667" y="4" height="60" width="352" format="[general]" html.valueishtml="0"  name=hmcnumhom visible="1" edit.limit=10 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes edit.imemode=0  font.face="Arial" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=7 alignment="0" tabsequence=30 border="0" color="0" x="1029" y="4" height="60" width="795" format="[general]" html.valueishtml="0"  name=hmcdescri visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Arial" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=6 alignment="0" tabsequence=40 border="0" color="0" x="1833" y="4" height="60" width="352" format="[general]" html.valueishtml="0"  name=hmcjugadores visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Arial" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" netscapelayers="0" )

forward
global type w_response_modecomu from w_response_base
end type
end forward

global type w_response_modecomu from w_response_base
end type
global w_response_modecomu w_response_modecomu

type variables
long					il_numjugadores, il_coaid
string					is_numhom, is_tmodescri, is_crmid_hom
end variables

forward prototypes
public function integer of_botones (integer ai_modo)
public function integer of_setdefaultvalues ()
public function integer of_asignavalores ()
end prototypes

public function integer of_botones (integer ai_modo);/*Esta función habilita y deshabilita botones
en función del estado.
Se centraliza aquí para poder aplicar permisos
de acceso.*/

CHOOSE CASE ai_modo
	CASE II_ACCESO_ALTA
		pb_aceptar.enabled = TRUE
		pb_cancelar.enabled = False	
		pb_modificar.enabled = False
		pb_alta.enabled = False
		pb_borrar.enabled = False
		pb_salir.enabled = False
	
	CASE II_ACCESO_MODIFICACION
		pb_aceptar.enabled = TRUE
		pb_cancelar.enabled = False	
		pb_modificar.enabled = False
		pb_alta.enabled = False
		pb_borrar.enabled = False
		pb_salir.enabled = False
		
	CASE II_INSERTROW
		pb_aceptar.enabled = False
		pb_cancelar.enabled = True
		pb_modificar.enabled = False
		pb_alta.enabled = False
		pb_borrar.enabled = True
		pb_salir.enabled = TRUE	//Siempre permitimos salir
		
	CASE II_MODIFICAR
		pb_aceptar.enabled = True
		pb_cancelar.enabled = True
		pb_modificar.enabled = False
		pb_alta.enabled = False
		pb_borrar.enabled = False
		pb_salir.enabled = TRUE	//Siempre permitimos salir
		
	CASE II_PREPARED_BORRABLE
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = True
		pb_alta.enabled = True
		pb_borrar.enabled = True
		pb_salir.enabled = True
	
	CASE II_PREPARED_NOBORRABLE
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = True
		pb_alta.enabled = True
		pb_borrar.enabled = True
		pb_salir.enabled = True
		
	CASE II_TRASBORRAR
		pb_aceptar.enabled = True
		pb_cancelar.enabled = True
		pb_modificar.enabled = False
		pb_alta.enabled = True
		pb_borrar.enabled = True
		pb_salir.enabled = TRUE	//Siempre permitimos salir
		
	CASE II_TRASGUARDAR
		pb_aceptar.enabled = False
		pb_cancelar.enabled = False
		pb_modificar.enabled = False
		pb_alta.enabled = False
		pb_borrar.enabled = False
		pb_salir.enabled = True
		
		pb_aceptar.default = False
		pb_salir.default = True

END CHOOSE




RETURN 0
end function

public function integer of_setdefaultvalues ();
//el interlocutor tiene que ser el que venga de la otra ventana
//para todas las filas que se creen
dw_1.Modify("tmoid.Initial = '" + string(il_tmoid) + "'")
//dw_1.Modify('ugeid.protect ="0~tif (ugeid = ' + string(il_ugeid) + ', 1, 0)" ')

RETURN 0
end function

public function integer of_asignavalores ();/*
Los valores son los que vienen de CRM. En caso de modificación
hay dos opciones: si la comunidad existe, se ha modificado el
resto de información. Si no existe, es un alta de comunidad.
*/

long		ll_fila = 0, i

IF ii_modo = II_ALTA THEN
	ll_fila = 1
ELSE
	
	FOR i = 1 TO dw_1.RowCount()
		IF /*dw_1.GetItemNumber(i,"coaid") = il_coaid AND*/ dw_1.GetItemString(i, "crmhmcid") = is_crmid_hom	THEN
			ll_fila = i
			EXIT
		END IF
	NEXT

	IF ll_fila = 0 THEN
		ll_fila= dw_1.InsertRow(0)
	END IF
END IF


dw_1.SetItem(ll_fila,"coaid",il_coaid)
dw_1.SetItem(ll_fila,"tmoid",il_tmoid)
dw_1.SetItem(ll_fila,"hmcnumhom",is_numhom)
dw_1.SetItem(ll_fila,"hmcjugadores",il_numjugadores)
dw_1.SetItem(ll_fila,"hmcdescri",is_tmodescri)
dw_1.SetItem(ll_fila,"crmhmcid",is_crmid_hom)

RETURN 0
end function

event ue_aceptar;//istr_par.s_accion = 'aceptar'
this.PostEvent("ue_close")
end event

event ue_cancel;integer			li_respuesta


IF dw_1.Modifiedcount( ) > 0 AND ib_pregunta_salir = FALSE THEN
	li_respuesta = App.srvMsgBox.MessageBox(App.MsgBoxTitle,  'No se han grabado los cambios. ~r~n' + &
	'Está seguro de que desea salir?', Question!, YesNo!, 2)
	
	IF li_respuesta = 2 THEN RETURN
END IF


this.PostEvent("ue_close")
end event

event ue_close;//str_interlocutor_eu		lstr_interlocutor
//
//il_ugeid = lstr_interlocutor.str_ugeid
//
//Message.PowerObjectParm  = lstr_interlocutor

Close(This)




end event

event ue_insertrow();Integer li_row

dw_1.SetFocus()
li_row	=	dw_1.InsertRow(0)
dw_1.SetRow( li_row )
dw_1.ScrollToRow ( li_row )
//dw_1.settaborder('ugeid',1)
//dw_1.setcolumn('ugeid')


f_enabled(dw_1)

of_botones(II_INSERTROW)
end event

event ue_delete();Long	ll_fila

ll_fila = dw_1.GetRow()
IF ll_fila > 0 THEN
	dw_1.deleterow(ll_fila)
	
	IF ll_fila > 1 THEN
		dw_1.SelectRow(ll_fila, TRUE)
	ELSE
		dw_1.SelectRow(1, TRUE)
	END IF
END IF


f_desabled(dw_1)

of_botones(II_TRASBORRAR)
end event

event ue_save;long			ll_id
integer		li_retorno
blob			lblb_datos

dw_1.AcceptText()

li_retorno = THIS.Event ue_presave()

IF li_retorno < 0 THEN RETURN

SetPointer(Hourglass!)

n_cst_do_tconmod		luo_intuge


App.inv_Connect.of_CreateInstanceDatos(luo_intuge,"n_cst_do_tconmod")

dw_1.GetFullState(lblb_datos)

ll_id = luo_intuge.of_updateblob( lblb_datos)

IF ll_id >= 0 THEN
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  'Información almacenada correctamente.')

	ib_pregunta_salir = FALSE
Else
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  luo_intuge.of_geterrortexto())
END IF
	
App.inv_Connect.of_DestroyInstance(luo_intuge)


IF ll_id < 0 THEN
	RETURN
END IF

THIS.Event ue_retrieve()

//07.03.2008
of_botones(II_PREPARED_BORRABLE)
//of_botones(II_TRASGUARDAR)

f_desabled(dw_1)
 
//IF il_fila > 1 THEN
//	pb_aceptar.enabled = False
//	pb_cancelar.enabled = False
//	pb_modificar.enabled = True
//	pb_alta.enabled = True
//	pb_borrar.enabled = False
//	pb_salir.enabled = False
//	
//	pb_aceptar.default = False
//	pb_salir.default = True
//ELSE
//END IF

//gnv_trans.of_actualiza_atlocal(istr_par.l[8])

//w_form_mntlocal.dw_1.retrieve(gnv_trans.istr_par.l[1])
//w_form_mntlocal.dw_1.insertrow(0)

end event

event ue_desabled();
//s dw_1.retrieve(gnv_trans.istr_par.l[1])

of_botones(II_PREPARED_BORRABLE)

Event ue_retrieve()

f_desabled(dw_1)



end event

event ue_modificar();This.Event ue_enabled()
end event

event ue_retrieve();n_cst_do_modecomu		luo_modecomu
blob						lblb_datos
integer					li_ret
string					ls_where

App.inv_Connect.of_CreateInstanceDatos(luo_modecomu,"n_cst_do_modecomu")

ls_where = 'tmoid = '  + string(il_tmoid)
luo_modecomu.of_Addwhere(ls_where)
li_ret = luo_modecomu.of_Retrieveblob(lblb_datos)

dw_1.SetFullState(lblb_datos)

IF li_ret < 0 THEN
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,  luo_modecomu.of_geterrortexto())
END IF

of_setdefaultvalues()

dw_1.ResetUpdate()

App.inv_Connect.of_DestroyInstance(luo_modecomu)
end event

event open;call super::open;
str_interlocutor_eu		lstr_interlocutor
long						ll_fila
integer					li_ret

str_modecomu				lstr_modecomu

lstr_modecomu = Message.PowerObjectParm

ii_modo  = lstr_modecomu.al_modo
il_coaid = lstr_modecomu.al_coaid
il_tmoid = lstr_modecomu.al_tmoid
is_numhom = lstr_modecomu.as_numhom
il_numjugadores = lstr_modecomu.al_numjugadores
is_tmodescri = lstr_modecomu.as_tmodescri
is_crmid_hom = lstr_modecomu.as_crmid_hom


Event ue_retrieve()

ib_pregunta_salir = FALSE

of_setdefaultvalues() //para que cree filas con intid relleno


IF ii_modo = II_ALTA THEN
	
	ll_fila = dw_1.InsertRow(0)
	of_asignavalores()

//	dw_1.object.ugeid[1]   = inv_interlocutor.of_unigestion()
	of_botones(II_ACCESO_ALTA)
	dw_1.SetRow(dw_1.RowCount())
//	dw_1.SetColumn("fcambio")
	dw_1.SetFocus()
	f_desabled(dw_1) //dw no modificable
ELSEIF ii_modo = II_MODIFICACION THEN 
	Event ue_retrieve()
	
//	f_desabled(dw_1)
	of_botones(II_ACCESO_MODIFICACION)
	of_asignavalores()
//	of_asigna_ug_crm()
	f_desabled(dw_1)
END IF

of_setdefaultvalues()

end event

on w_response_modecomu.create
call super::create
end on

on w_response_modecomu.destroy
call super::destroy
end on

event closequery;integer			li_retorno

IF ib_pregunta_salir = TRUE THEN
	li_retorno = App.srvMsgBox.MessageBox(App.MsgBoxTitle,  &
	'No se ha guardado unidad de gestión y es obligatoria.~r~n ¿Está seguro de salir?',&
	Question!, YesNo!, 2)
	
	IF li_retorno = 2 THEN
		RETURN 1
	END IF
END IF
end event

type p_icono from w_response_base`p_icono within w_response_modecomu
end type

type st_titulo from w_response_base`st_titulo within w_response_modecomu
string text = "Homologación por Comunidad y Modelo"
end type

type pb_borrar from w_response_base`pb_borrar within w_response_modecomu
end type

type pb_modificar from w_response_base`pb_modificar within w_response_modecomu
end type

type pb_salir from w_response_base`pb_salir within w_response_modecomu
end type

type pb_aceptar from w_response_base`pb_aceptar within w_response_modecomu
end type

type pb_cancelar from w_response_base`pb_cancelar within w_response_modecomu
end type

type pb_alta from w_response_base`pb_alta within w_response_modecomu
end type

type dw_1 from w_response_base`dw_1 within w_response_modecomu
string dataobject = "d_do_modecomu"
end type

event rowfocuschanged;IF this.RowCount() < 1 THEN RETURN

SetRedraw (FALSE)
SelectRow (0, FALSE)
SelectRow (GetRow(), TRUE )
SetRedraw (TRUE)
end event

event dberror;Return 1
end event

event itemchanged;
of_botones(ii_modificar)
end event

event editchanged;
of_botones(ii_modificar)
end event

type st_fondo from w_response_base`st_fondo within w_response_modecomu
end type


global type str_modecomu from structure
	long		al_modo
	long		al_coaid
	long		al_tmoid
	string		as_numhom
	long		al_numjugadores
	string		as_tmodescri
	string		as_crmid_hom
	string		str_tag
end type















































































































































































forward
global type w_form_localint from w_form_base
end type
type st_5 from statictext within w_form_localint
end type
end forward

global type w_form_localint from w_form_base
integer x = 192
integer y = 436
integer width = 2898
integer height = 1324
st_5 st_5
end type
global w_form_localint w_form_localint

type variables
//string		is_empope
long			il_locid, il_intid
blob			iblb_datos_anteriores
constant 		long		IL_FUNCION_TITFACT = 14
end variables

forward prototypes
public function integer of_asigna_valores ()
public function integer of_abrir_localint ()
public function integer of_asignadescripciones (n_cst_do_crm_localinterloc auo_localinterloc)
public function boolean of_validacampos ()
end prototypes

public function integer of_asigna_valores ();//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			w_form_localint
//
//	Función:			of_asigna_valores
//
//	Descripción	  : Asignamos los valores recibidos de CRM
//
//	Usada en:	   Mantenimiento de locales/interlocutor. Alta/Modificación
//
//	Argumentos:		(None)
//					  
//	Retorno:			0 OK													<br></br>
//						1 Error												<br></br>
//																				<br></br><div><b>
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios									</div><div>
//	--------	--------	---------------------------------		</div><div>
//	PBD 		05/10/07		Creación		</div>
//
///////////////////////////////////////////////////////////////////////////////
date		ld_fecha

//5|0|1-4H8N9M|44554|94166|50079940|10085466|18/03/2019||63||||||YASMINA.ALVAREZ

dw_1.object.crmrleid[1]  	 	=  App.is_parametros[2]
dw_1.object.locid[1]  	 		=  long(App.is_parametros[3])
il_locid								=	long(App.is_parametros[3])
dw_1.object.intid[1]  	 		=  long(App.is_parametros[4])
il_intid								=	long(App.is_parametros[4])
dw_1.object.rlelikunnr[1] 	 	=  App.is_parametros[5]
dw_1.object.rlelifnr[1] 	 	=  App.is_parametros[6]
dw_1.object.tpcid[1] 	 	 	=  IL_FUNCION_TITFACT		//titular de facturación
dw_1.object.rlefecini[1] 	 	=  date(App.is_parametros[7])

IF IsDate(App.is_parametros[8]) THEN //es una baja de relación; 
												  //sólo posible como modificación
	dw_1.object.rlefecfin[1] 	 	=  date(App.is_parametros[8])
	dw_1.object.motidfin[1] = long(App.is_parametros[10])
END IF

dw_1.object.motidini[1] = long(App.is_parametros[9])

// FRG 22/12/2011
dw_1.object.rleeoalta[1] = App.is_parametros[11]
CHOOSE CASE Upper(Left(App.is_parametros[12], 3))
	CASE 'SIN'
		dw_1.object.gtlocal_interloc_tcaid[1] = 1
	CASE 'CON'
		dw_1.object.gtlocal_interloc_tcaid[1] = 2
	CASE ELSE
		dw_1.object.gtlocal_interloc_tcaid[1] = 3
END CHOOSE

dw_1.object.rleeobaja[1] = App.is_parametros[13]
dw_1.object.observbaja[1] = App.is_parametros[14]
/*
Id relación en Siccod	Integer	Si es 0 corresponde a una alta en Siccod
											Si no es 0 es una modificación
Id de la relación en Siebel	Integer	
Id del local en Siccod	Integer	
Id del interlocutor en Siccod	Integer	
Número de SAP de deudor	Varchar(10)	
Número de SAP de acreedor	Varchar(16)	
Con máquinas	Char(1)	"S" o "N"
Fecha de alta	Date	
Fecha de baja	Date	
*/

is_campos = {"ID local-interlocutor", "ID Siebel", "ID local", &
"ID interlocutor", "Número SAP deudor", "Número SAP acreedor", &
"Fecha de alta", "Fecha de baja", "Motivo alta", &
"Motivo baja", "EO Procedencia", "Situacion Local", "EO Mejor Oferta", "Observaciones",&
"Usuario"} // Nuevo, FRG 19/05/2019

Return 1




end function

public function integer of_abrir_localint ();//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			w_form_localint
//
//	Función:			of_abrir_localint
//
//	Descripción	  : Cargamos en pantalla los datos del mantenimiento
//
//	Usada en:	   Mantenimiento de locales/interlocutores. Alta/Modificación
//
//	Argumentos:		(None)
//					  
//	Retorno:			0 OK													<br></br>
//						1 Error												<br></br>
//																				<br></br><div><b>
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios									</div><div>
//	--------	--------	---------------------------------		</div><div>
//	PBD 		05/10/07		Creación		</div>
//
///////////////////////////////////////////////////////////////////////////////
Integer 								li_valor, li_retorno
long									ll_rleid, ll_row
Blob    								lb_blobinterloc
date									ld_fecha
long									ll_locid, i, ll_total,ll_intid
date									ldt_inicio, ldt_fin

string									ls_mensaje
string									ls_error, ls_info
long									ll_error

n_cst_do_crm_localinterloc 	luo_do_localinterloc

IF Long(App.is_parametros[1]) = 0 THEN
	ii_modo = II_ALTA
	//La fecha puede y debe ser nula en caso de alta
	ib_canbenull[10] = TRUE
ELSE
	ii_modo = II_MODIFICACION
	ll_rleid = long(App.is_parametros[1])
END IF



App.inv_Connect.of_CreateInstanceDatos(luo_do_localinterloc,&
		"n_cst_do_crm_localinterloc")

/*
Si estamos en alta asignamos los valores SetItem* y luego obtenemos
los dddw

En modificación hacemos un retrieve de BBDD y luego los SetItem*
*/

IF of_validadatos() = FALSE THEN
	RETURN -1
END IF

IF of_validacampos() = FALSE THEN
	RETURN -1
END IF

IF ii_modo = II_ALTA THEN
	li_retorno = of_asigna_valores()

	If li_retorno < -1 Then
		App.inv_Connect.of_DestroyInstance(luo_do_localinterloc)
//		App.of_parametro_retorno(This, App.ii_valor)
		App.ii_valor = -1
		RETURN -1
	END IF

	of_asignadescripciones(luo_do_localinterloc)
	
	dw_1.GetFullState(lb_blobinterloc) 
	li_valor = luo_do_localinterloc.of_recuperadddw(lb_blobinterloc)
	THIS.dw_1.SetFullState(lb_blobinterloc) 
	
	
ELSEIF ii_modo = II_MODIFICACION THEN
	
	luo_do_localinterloc.of_addwhere( "gtlocal_interloc.rleid = " + string(ll_rleid))
	li_valor = luo_do_localinterloc.of_retrieveblob(lb_blobinterloc)
	
	dw_1.SetFullState(lb_blobinterloc)
	
	IF dw_1.RowCount() = 0 THEN
		App.srvMsgBox.MessageBox(App.MsgBoxTitle,  'No se ha encontrado la relación que pretende modificar.')
		App.ii_valor = -1
		App.inv_Connect.of_DestroyInstance(luo_do_localinterloc)
		RETURN -1
	END IF
	
	IF li_valor >= 0 THEN
		li_retorno = of_asigna_valores()
		
		If li_retorno < -1 Then
			App.inv_Connect.of_DestroyInstance(luo_do_localinterloc)
			App.of_parametro_retorno(This, App.ii_valor)
			RETURN -1
		END IF

	of_asignadescripciones(luo_do_localinterloc)
		
	END IF
	
END IF


//28.02.2008 Comprobamos que no haya una solapación de fechas
//en las modificaciones


ll_total = dw_1.RowCount()

FOR i = 1 TO ll_total
	ll_locid = dw_1.GetItemNumber(i,"locid")
	ll_rleid = dw_1.GetItemNumber(i,"rleid")
	ldt_inicio = dw_1.GetItemDate(i,"rlefecini")
	ldt_fin = dw_1.GetItemDate(i,"rlefecfin")
	li_retorno = luo_do_localinterloc.of_validarinterlocutorlocal(IL_FUNCION_TITFACT, ll_rleid, ll_locid, ldt_inicio, ldt_fin)
	
	IF li_retorno < 0 THEN 
		
		ls_error = luo_do_localinterloc.of_geterrortexto()
		ll_error = luo_do_localinterloc.of_geterrornumero()
		ls_info  = luo_do_localinterloc.of_geterrorinfo()
		
		//App.srvMsgBox.MessageBox(App.MsgBoxTitle,  'Hay una solapación entre las fechas de relación con el local.')
		App.srvMsgBox.MessageBox(App.MsgBoxTitle,  ls_error, ls_info)
		
	
		
		App.ii_valor = -1
		App.inv_Connect.of_DestroyInstance(luo_do_localinterloc)
		RETURN -1
		
	END IF
NEXT

//28.02.2008 Comprobamos que el local y el interlocutor pertenecen a la misma Unidad de Gestión

IF ii_modo = II_ALTA THEN
	
	FOR i = 1 TO ll_total
		ll_locid = dw_1.GetItemNumber(i,"locid")
		ll_intid = dw_1.GetItemNumber(i,"intid")
		
		li_retorno = luo_do_localinterloc.of_validaruge(ll_intid, ll_locid)
		IF li_retorno < 0 THEN
			CHOOSE CASE li_retorno
				CASE -1
					ls_mensaje = "Las unidades de gestión del local y el interlocutor no coinciden."
				CASE -2
					ls_mensaje = "No se ha encontrado la unidad de gestión del interlocutor."
				CASE -3
					ls_mensaje = "No se ha encontrado la unidad de gestión del local."
			END CHOOSE
			
			App.srvMsgBox.MessageBox(App.MsgBoxTitle,  ls_mensaje)
			App.ii_valor = -1
			App.inv_Connect.of_DestroyInstance(luo_do_localinterloc)
			RETURN -1
			
		END IF
		
	NEXT
	
END IF

IF dw_1.RowCount() >= 0 THEN
	ll_row = dw_1.GetRow()
	IF ll_row > 0 THEN
		ld_fecha = dw_1.GetItemDate(ll_row, "rlefecfin")
		IF IsNull(ld_fecha) OR ld_fecha = 1900-01-01 THEN
			//En alta (o modificación que no sea baja) no debe poder modificar los campos de motidfin
			dw_1.Modify("rleeobaja.protect='1' observbaja.protect='1'")
		END IF
	END IF
END IF


App.inv_Connect.of_DestroyInstance(luo_do_localinterloc)

RETURN 0
end function

public function integer of_asignadescripciones (n_cst_do_crm_localinterloc auo_localinterloc);integer			li_retorno = 0
string			ls_locnombre, ls_intnombre


li_retorno = auo_localinterloc.of_getlocnombre(il_locid, ls_locnombre)
IF li_retorno = 0 THEN
	li_retorno = auo_localinterloc.of_getintnombre (il_intid, ls_intnombre)
	
	IF li_retorno = 0 THEN
		dw_1.SetItem(1,"locnombre",ls_locnombre)
		dw_1.SetItem(1,"intnombre",ls_intnombre)
	END IF
	
END IF

RETURN li_retorno
end function

public function boolean of_validacampos ();/*is_campos = {"ID local-interlocutor", "ID Siebel", "ID local", &
"ID interlocutor", "Número SAP deudor", "Número SAP acreedor", &
"Tiene máquinas", "Fecha de alta", &
"Fecha de baja", "Motivo alta", "Motivo baja"}*/

//ID de Local
IF Long(App.is_parametros[3]) <= 0 THEN
	App.srvmsgbox.MessageBox("ID de Local no válido",'',Information!)
	RETURN FALSE
END IF

//ID de interlocutor
IF Long(App.is_parametros[4]) <= 0 THEN
	App.srvmsgbox.MessageBox("ID de interlocutor no válido",'',Information!)
	RETURN FALSE
END IF

//Fecha de alta
IF NOT IsDate(App.is_parametros[7])  THEN
	App.srvmsgbox.MessageBox("Fecha de alta no válida",'La fecha recibida es: ' + App.is_parametros[7],Information!)
	RETURN FALSE
END IF

//Fecha de baja
IF App.is_parametros[8] <> "" THEN
	IF NOT IsDate(App.is_parametros[8])  THEN
		App.srvmsgbox.MessageBox("Fecha de baja no válida",'La fecha recibida es: ' + App.is_parametros[8],Information!)
		RETURN FALSE
	END IF
END IF

//Motivo alta
IF Long(App.is_parametros[9]) <= 0 THEN
	App.srvmsgbox.MessageBox("Motivo de alta no válido",'',Information!)
	RETURN FALSE
END IF

//Motivo baja
IF Long(App.is_parametros[10]) <= 0 AND App.is_parametros[10] <> "" THEN
	App.srvmsgbox.MessageBox("Motivo de baja no válido",'',Information!)
	RETURN FALSE
END IF


RETURN TRUE
end function

event m_accok;//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Objeto:			w_form_localint
//
//	Evento:			m_accok
//
//	Descripción	  : Guardamos los datos del mantenimiento
//
//	Usada en:	   Mantenimiento de locales/interlocutores. Alta/Modificación
//
//	Argumentos:		(None)
//					  
//	Retorno:			(None)												
//																				<br></br><div><b>
//	Modificaciones:														</b></div><div>
//	Autor		Fecha			Comentarios									</div><div>
//	--------	--------	---------------------------------		</div><div>
//	PBD 		05/10/07		Creación		</div>
//
///////////////////////////////////////////////////////////////////////////////
blob											lb_blob_localinterloc
long											ll_rleid, ll_ret, ll_error
string											ls_error, ls_info
integer										iteracion, li_respuesta

m_main										lm_menu
n_cst_do_crm_localinterloc				lnv_do_crm_interloc

SetPointer(Hourglass!)

dw_1.AcceptText()

IF dw_1.ModifiedCount() + dw_1.DeletedCount() = 0 THEN
	App.srvMsgBox.MessageBox(App.MsgBoxTitle,"No se ha realizado ningún cambio")
	RETURN
END IF


App.inv_Connect.of_CreateInstanceDatos(lnv_do_crm_interloc,"n_cst_do_crm_localinterloc")

DO WHILE ll_rleid = 0
	
	iteracion ++
	IF iteracion = 1 THEN
		dw_1.GetFullState(lb_blob_localinterloc) 

		ll_rleid = lnv_do_crm_interloc.of_updateblob(lb_blob_localinterloc)
	ELSE
		ll_rleid = lnv_do_crm_interloc.of_update()
	END IF
	
	IF ll_rleid < 0 THEN
		ls_error = lnv_do_crm_interloc.of_geterrortexto()
		ll_error = lnv_do_crm_interloc.of_geterrornumero()
		ls_info  = lnv_do_crm_interloc.of_geterrorinfo()
	END IF
	
	IF ll_rleid > 0 THEN
		App.srvMsgBox.MessageBox(App.MsgBoxTitle,  'Información almacenada satisfactoriamente')
	
		IF ii_modo = II_ALTA THEN 
			lm_menu = THIS.MenuID
			lm_menu.m_03.m_0301.Enabled = FALSE
		END IF
	
		App.il_rleid = ll_rleid	//valor que se retornará a CRM
		
		lnv_do_crm_interloc.of_updateblob(iblb_datos_anteriores)
		
		App.inv_Connect.of_DestroyInstance(lnv_do_crm_interloc)
		//25.01.2008 Al terminar la grabación, cerramos la ventana
		THIS.Event ue_exitapp()
		RETURN
		
		
	ELSEIF	ll_rleid < 0 AND ll_error = 0 THEN
		//se trata de un aviso, todavía el alta es posible
		
		li_respuesta = App.srvMsgBox.MessageBox(App.MsgBoxTitle,  ls_error, ls_info, Question!, YesNo!)
		
		IF li_respuesta = 1 THEN 
			ll_rleid = 0
		ELSE
			ll_rleid = -1
			App.il_rleid = -1
		END IF
	
	ELSE
		App.srvMsgBox.MessageBox(App.MsgBoxTitle,  ls_error, ls_info)
		App.il_rleid = -1
		EXIT
		
	END IF
LOOP

App.inv_Connect.of_DestroyInstance(lnv_do_crm_interloc)


end event

event ue_postopen;long				ll_retorno
boolean			lb_retorno = TRUE

ll_retorno = of_abrir_localint()

IF ll_retorno < 0 THEN lb_retorno = FALSE

RETURN lb_retorno
end event

on w_form_localint.create
int iCurrent
call super::create
this.st_5=create st_5
iCurrent=UpperBound(this.Control)
this.Control[iCurrent+1]=this.st_5
end on

on w_form_localint.destroy
call super::destroy
if IsValid(MenuID) then destroy(MenuID)
destroy(this.st_5)
end on

event ue_preopen;call super::ue_preopen;DAte		ld_fin
Int		li_rtn
String	ls_error
n_cst_do_crm_localinterloc				lnv_do_crm_interloc

is_campos = {"ID local-interlocutor", "ID Siebel", "ID local", &
"ID interlocutor", "Número SAP deudor", "Número SAP acreedor", &
 "Fecha de alta", "Fecha de baja", &
"Motivo alta", "Motivo baja", & 
/* frg 22/12/2011 */ "EO Procedencia", "Situacion Local", "EO Mejor Oferta", "Observaciones"}
ib_canbenull[8] = TRUE
ib_canbenull[5] = TRUE
ib_canbenull[6] = TRUE

ib_canbenull[10] = TRUE

// FRG 22/12/2011
ib_canbenull[11] = TRUE // EO Procedencia
ib_canbenull[12] = TRUE // Situacion Local
ib_canbenull[13] = TRUE // EO Mejor Oferta
ib_canbenull[14] = TRUE // Observaciones

// FRG 19/05/2019. Validamos la fecha de baja con la fecha de ultima recaudacion
//if '5|0|1-GkSIN|26666|707|||10/01/2008|11/01/2008|211||PACO'
ld_fin = date(App.is_parametros[8])
if not isnull(ld_fin) and year(ld_fin) > 1950 then
	App.inv_Connect.of_CreateInstanceDatos(lnv_do_crm_interloc, 'n_cst_do_crm_localinterloc')
	li_rtn = lnv_do_crm_interloc.of_puede_dar_baja(app.srvUsers.codi, ld_fin, long(App.is_parametros[3]), ls_error)
	lnv_do_crm_interloc.of_setcomplete()
	App.inv_Connect.of_DestroyInstance(lnv_do_crm_interloc)
	if li_rtn <> 1 then
		app.SrvMsgBox.MessageBox(this.title, ls_error, Exclamation!)
		Return FALSE
	end if
end if

RETURN TRUE
end event

type dw_1 from w_form_base`dw_1 within w_form_localint
integer y = 96
integer width = 3931
integer height = 960
string dataobject = "d_do_crm_localinterloc"
end type

type st_5 from statictext within w_form_localint
integer x = 9
integer y = 8
integer width = 3346
integer height = 80
boolean bringtotop = true
integer textsize = -10
integer weight = 700
fontcharset fontcharset = ansi!
fontpitch fontpitch = variable!
fontfamily fontfamily = swiss!
string facename = "Tahoma"
long backcolor = 15780518
string text = "Datos de la relación Local Interlocutor"
boolean border = true
boolean focusrectangle = false
end type


release 8;
datawindow(units=0 timer_interval=60000 color=67108864 processing=0 HTMLDW=no print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=960 color="536870912" )
table(column=(type=long update=yes updatewhereclause=yes key=yes name=rleid dbname="gtlocal_interloc.rleid" )
 column=(type=long update=yes updatewhereclause=yes name=locid dbname="gtlocal_interloc.locid" )
 column=(type=long update=yes updatewhereclause=yes name=intid dbname="gtlocal_interloc.intid" )
 column=(type=long update=yes updatewhereclause=yes name=tpcid dbname="gtlocal_interloc.tpcid" )
 column=(type=char(10) update=yes updatewhereclause=yes name=rlelikunnr dbname="gtlocal_interloc.rlelikunnr" )
 column=(type=char(16) update=yes updatewhereclause=yes name=rlelifnr dbname="gtlocal_interloc.rlelifnr" )
 column=(type=date update=yes updatewhereclause=yes name=rlefecini dbname="gtlocal_interloc.rlefecini" )
 column=(type=long update=yes updatewhereclause=yes name=motidini dbname="gtlocal_interloc.motidini" )
 column=(type=date update=yes updatewhereclause=yes name=rlefecfin dbname="gtlocal_interloc.rlefecfin" )
 column=(type=long update=yes updatewhereclause=yes name=motidfin dbname="gtlocal_interloc.motidfin" )
 column=(type=datetime update=yes updatewhereclause=yes name=feccrereg dbname="gtlocal_interloc.feccrereg" )
 column=(type=char(10) update=yes updatewhereclause=yes name=codusucid dbname="gtlocal_interloc.codusucid" )
 column=(type=char(250) update=yes updatewhereclause=yes name=observbaja dbname="gtlocal_interloc.observbaja" )
 column=(type=char(35) updatewhereclause=yes name=intnombre dbname="atinterlocutor.intnombre" )
 column=(type=char(35) updatewhereclause=yes name=locnombre dbname="atlocal.locnombre" )
 column=(type=long update=yes updatewhereclause=yes name=gtlocal_interloc_tcaid dbname="gtlocal_interloc.tcaid" values="	3/Sin Máquinas	1/Con maqs. Competencia	2/" )
 column=(type=char(15) update=yes updatewhereclause=yes name=rleeoalta dbname="gtlocal_interloc.rleeoalta" )
 column=(type=char(15) update=yes updatewhereclause=yes name=rleeobaja dbname="gtlocal_interloc.rleeobaja" )
 retrieve="  SELECT gtlocal_interloc.rleid,   
         gtlocal_interloc.locid,   
         gtlocal_interloc.intid,   
         gtlocal_interloc.tpcid,   
         gtlocal_interloc.rlelikunnr,   
         gtlocal_interloc.rlelifnr,   
         gtlocal_interloc.rlefecini,   
         gtlocal_interloc.motidini,   
         gtlocal_interloc.rlefecfin,   
         gtlocal_interloc.motidfin,  
         gtlocal_interloc.feccrereg,   
         gtlocal_interloc.codusucid,
         gtlocal_interloc.observbaja,
         atinterlocutor.intnombre,   
         atlocal.locnombre  ,
			gtlocal_interloc.tcaid,
		   gtlocal_interloc.rleeoalta,
		   gtlocal_interloc.rleeobaja
    FROM gtlocal_interloc,   
         atinterlocutor,   
         atlocal 
   WHERE ( atinterlocutor.intid = gtlocal_interloc.intid ) and  
         ( atlocal.locid = gtlocal_interloc.locid )       
" update="gtlocal_interloc" updatewhere=0 updatekeyinplace=no  sort="rlefecfin D tpcid A rlefecini A " )
groupbox(band=detail text=""border="5" color="33554432" x="14" y="16" height="888" width="3337"  name=gb_1 visible="1"  font.face="Arial" font.height="-12" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=3 alignment="0" tabsequence=32766 border="0" color="0" x="4969" y="40" height="60" width="119" format="[general]" html.valueishtml="0"  name=intid visible="0" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="16777215" )
compute(band=detail alignment="0" expression="if ( rlefecfin < today() ,rgb(192,192,192),rgb(255,255,255))"border="0" color="0" x="4869" y="40" height="60" width="91" format="[GENERAL]" html.valueishtml="0"  name=c_backcolor visible="1~t0"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=4 alignment="0" tabsequence=32766 border="2" color="0" x="654" y="40" height="60" width="599" format="[general]" html.valueishtml="0"  name=tpcid visible="1" dddw.name=d_dddw_xtfuncion_externo dddw.displaycolumn=tpcdescri dddw.datacolumn=tpcid dddw.percentwidth=200 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=no dddw.case=any dddw.imemode=3 dddw.vscrollbar=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="0" text="Cod. Relación" border="0" color="0" x="1513" y="40" height="60" width="398" html.valueishtml="0"  name=t_1 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
compute(band=detail alignment="0" expression="string(locid)+~"-~"+string(intid)"border="2" color="0" x="1938" y="40" height="60" width="453" format="[GENERAL]" html.valueishtml="0"  name=compute_3 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="16777215" )
column(band=detail id=5 alignment="0" tabsequence=32766 border="2" color="0" x="654" y="316" height="60" width="599" format="[general]" html.valueishtml="0"  name=rlelikunnr visible="1" edit.limit=10 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="0" text="Acreedor SAP" border="0" color="0" x="1513" y="316" height="60" width="398" html.valueishtml="0"  name=rlelifnr_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=6 alignment="0" tabsequence=32766 border="2" color="0" x="1938" y="316" height="60" width="453" format="[general]" html.valueishtml="0"  name=rlelifnr visible="1" edit.limit=16 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=7 alignment="0" tabsequence=32766 border="2" color="0" x="654" y="408" height="60" width="599" format="dd/mm/yyyy" html.valueishtml="0"  name=rlefecini visible="1" editmask.mask="dd/mm/yyyy" editmask.imemode=0 editmask.focusrectangle=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=8 alignment="0" tabsequence=10 border="2" color="0" x="1938" y="408" height="60" width="453" format="[general]" html.valueishtml="0"  name=motidini visible="1" dddw.name=d_dddw_motivo_inirelacion dddw.displaycolumn=motdescri dddw.datacolumn=motid dddw.percentwidth=200 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=no dddw.case=any dddw.imemode=3 dddw.vscrollbar=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="16777215" )
column(band=detail id=9 alignment="0" tabsequence=32766 border="2" color="0" x="654" y="592" height="60" width="599" format="dd/mm/yyyy" html.valueishtml="0"  name=rlefecfin visible="1" editmask.mask="dd/mm/yyyy" editmask.imemode=0 editmask.focusrectangle=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=10 alignment="0" tabsequence=30 border="2" color="0" x="1938" y="592" height="60" width="453" format="[general]" html.valueishtml="0"  name=motidfin visible="1~tif ( isnull( rlefecfin) ,0,1)" dddw.name=d_dddw_motivo_finrelacion dddw.displaycolumn=motdescri dddw.datacolumn=motid dddw.percentwidth=200 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=no dddw.case=any dddw.imemode=0 dddw.vscrollbar=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="16777215" )
text(band=detail alignment="0" text="Tipo Función" border="0" color="0" x="23" y="40" height="60" width="599" html.valueishtml="0"  name=tpcid_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="0" text="Interlocutor" border="0" color="0" x="23" y="132" height="60" width="599" html.valueishtml="0"  name=intnombre_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="0" text="Nombre Local" border="0" color="33554432" x="23" y="224" height="60" width="599" html.valueishtml="0"  name=t_3 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="0" text="Deudor SAP" border="0" color="0" x="23" y="316" height="60" width="599" html.valueishtml="0"  name=rlelikunnr_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="0" text="Inicio Relación" border="0" color="0" x="23" y="408" height="60" width="599" html.valueishtml="0"  name=rlefecini_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="0" text="Situac. Local" border="0" color="0" x="23" y="500" height="60" width="599" html.valueishtml="0"  name=gtlocal_interloc_tcaid_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="0" text="Final Relación" border="0" color="0" x="23" y="592" height="60" width="599" html.valueishtml="0"  name=rlefecfin_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="0" text="E.O. Mejor Oferta" border="0" color="0" x="23" y="684" height="60" width="599" html.valueishtml="0"  name=rleeobaja_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="0" text="Observaciones fin relación" border="0" color="0" x="23" y="776" height="60" width="599" html.valueishtml="0"  name=observbaja_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="134217747" )
text(band=detail alignment="0" text="Motivo Inicio" border="0" color="0" x="1513" y="408" height="60" width="398" html.valueishtml="0"  name=motidini_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="0" text="Motivo Final" border="0" color="0" x="1513" y="592" height="60" width="398" html.valueishtml="0"  name=motidfin_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=14 alignment="0" tabsequence=32766 border="2" color="0" x="654" y="132" height="60" width="882" format="[general]" html.valueishtml="0"  name=intnombre  tag="" visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=15 alignment="0" tabsequence=32766 border="2" color="0" x="654" y="224" height="60" width="882" format="[general]" html.valueishtml="0"  name=locnombre visible="1" edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=no edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=16 alignment="0" tabsequence=20 border="2" color="0" x="654" y="500" height="60" width="599" format="[general]" html.valueishtml="0" protect="0~tif(tpcid <> 14 , 1,0)"  name=gtlocal_interloc_tcaid visible="1" ddlb.limit=0 ddlb.allowedit=no ddlb.case=any ddlb.nilisnull=yes ddlb.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="16777215" )
column(band=detail id=18 alignment="0" tabsequence=40 border="2" color="0" x="654" y="684" height="60" width="599" format="[general]" html.valueishtml="0"  name=rleeobaja visible="1" edit.limit=15 edit.case=any edit.focusrectangle=no edit.autoselect=no edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="16777215" )
column(band=detail id=13 alignment="0" tabsequence=50 border="2" color="0" x="654" y="776" height="60" width="2624" format="[general]" html.valueishtml="0" protect="0~tif ( (isNull(  motidfin  ) and isNull(  rlefecfin  )),1,0)"  name=observbaja visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="16777215" )

sparse(names="tpcid")htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" netscapelayers="0" )

release 8;
datawindow(units=0 timer_interval=0 color=67108864 processing=1 HTMLDW=no print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no grid.lines=0 )
header(height=68 color="536870912" )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=84 color="536870912" )
table(column=(type=char(15) update=yes updatewhereclause=yes name=neonempop dbname="atempope.neonempop" )
 column=(type=long update=yes updatewhereclause=yes key=yes name=neoid dbname="atempope.neoid" )
 column=(type=long update=yes updatewhereclause=yes name=socid dbname="atempope.socid" )
 retrieve="PBSELECT( VERSION(400) TABLE(NAME=~"atempope~" ) COLUMN(NAME=~"atempope.neonempop~") COLUMN(NAME=~"atempope.neoid~") COLUMN(NAME=~"atempope.socid~")) " update="atempope" updatewhere=1 updatekeyinplace=no )
text(band=header alignment="0" text="Empresa Operadora" border="4" color="16711680" x="9" y="8" height="52" width="791" html.valueishtml="0"  name=neonempop_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=1 alignment="0" tabsequence=10 border="0" color="33554432" x="9" y="8" height="64" width="791" format="[general]" html.valueishtml="0"  name=neonempop visible="1" edit.limit=15 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" netscapelayers="0" )

















































































































































































release 8;
datawindow(units=0 timer_interval=0 color=79741120 processing=0 HTMLDW=no print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=72 color="536870912" )
table(column=(type=long updatewhereclause=yes key=no name=paiid dbname="xtpais.paiid" )
 column=(type=char(35) updatewhereclause=yes name=paidescri dbname="xtpais.paidescri" )
 retrieve="  SELECT xtpais.paiid,   
         xtpais.paidescri  
    FROM xtpais 
" update="xtpais" updatewhere=0 updatekeyinplace=no  sort="paidescri A " )
column(band=detail id=2 alignment="0" tabsequence=32766 border="0" color="0" x="9" y="4" height="60" width="805" format="[general]" html.valueishtml="0"  name=paidescri visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" netscapelayers="0" )

release 8;
datawindow(units=0 timer_interval=0 color=80269524 processing=0 HTMLDW=no print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=76 color="553648127" )
table(column=(type=long update=yes updatewhereclause=yes key=yes name=tloid dbname="xttipolocal.tloid" )
 column=(type=char(2) update=yes updatewhereclause=yes name=tloabrtip dbname="xttipolocal.tloabrtip" )
 column=(type=char(35) update=yes updatewhereclause=yes name=tlodescri dbname="xttipolocal.tlodescri" )
 column=(type=long update=yes updatewhereclause=yes name=tloramind dbname="xttipolocal.tloramind" )
 column=(type=datetime update=yes updatewhereclause=yes name=feccrereg dbname="xttipolocal.feccrereg" )
 column=(type=char(10) update=yes updatewhereclause=yes name=codusucid dbname="xttipolocal.codusucid" )
 retrieve="  SELECT xttipolocal.tloid,   
         xttipolocal.tloabrtip,   
         xttipolocal.tlodescri,   
         xttipolocal.tloramind,  
         xttipolocal.feccrereg,   
         xttipolocal.codusucid  
    FROM xttipolocal   
" update="xttipolocal" updatewhere=1 updatekeyinplace=no  sort="tlodescri A " )
text(band=header alignment="2" text="Tipo de Local" border="0" color="0" x="14" y="8" height="52" width="987" html.valueishtml="0"  name=tlodescri_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=3 alignment="0" tabsequence=32766 border="0" color="0" x="14" y="8" height="60" width="901" format="[general]" html.valueishtml="0"  name=tlodescri visible="1" edit.limit=35 edit.case=any edit.autoselect=yes edit.autohscroll=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" netscapelayers="0" )

release 8;
datawindow(units=0 timer_interval=0 color=79741120 processing=0 HTMLDW=no print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=84 color="553648127" )
table(column=(type=long updatewhereclause=yes key=no name=coaid dbname="xtcomunidad.coaid" )
 column=(type=char(35) updatewhereclause=yes name=coadescri dbname="xtcomunidad.coadescri" )
 column=(type=char(2) updatewhereclause=yes name=coacodsap dbname="xtcomunidad.coacodsap" )
 retrieve="  SELECT xtcomunidad.coaid,   
         xtcomunidad.coadescri,   
         xtcomunidad.coacodsap  
    FROM xtcomunidad  
" update="xtcomunidad" updatewhere=0 updatekeyinplace=no  sort="coadescri A " )
column(band=detail id=2 alignment="0" tabsequence=32766 border="0" color="0" x="155" y="12" height="60" width="805" format="[general]" html.valueishtml="0"  name=coadescri visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=3 alignment="0" tabsequence=32766 border="0" color="0" x="9" y="12" height="60" width="133" format="[general]" html.valueishtml="0"  name=coacodsap visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" netscapelayers="0" )

release 8;
datawindow(units=0 timer_interval=0 color=80269524 processing=0 HTMLDW=no print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=64 color="536870912" )
table(column=(type=char(35) updatewhereclause=yes name=fypnombre dbname="xtfabriprovee.fypnombre" )
 column=(type=long updatewhereclause=yes key=no name=fypid dbname="xtfabriprovee.fypid" )
 retrieve="  SELECT xtfabriprovee.fypnombre,   
         xtfabriprovee.fypid  
    FROM xtfabriprovee   
" update="xtfabriprovee" updatewhere=0 updatekeyinplace=no  sort="fypnombre A " )
column(band=detail id=1 alignment="0" tabsequence=32766 border="0" color="0" x="18" y="4" height="56" width="713" format="[general]" html.valueishtml="0"  name=fypnombre visible="1" edit.limit=35 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" netscapelayers="0" )

release 8;
datawindow(units=0 timer_interval=0 color=79741120 processing=0 HTMLDW=no print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=72 color="536870912" )
table(column=(type=long updatewhereclause=yes key=no name=monid dbname="xtmoneda.monid" )
 column=(type=char(25) updatewhereclause=yes name=mondescri dbname="xtmoneda.mondescri" )
 column=(type=char(5) updatewhereclause=yes name=monabrevi dbname="xtmoneda.monabrevi" )
 column=(type=long updatewhereclause=yes name=mondecred dbname="xtmoneda.mondecred" )
 column=(type=long updatewhereclause=yes name=monmonbas dbname="xtmoneda.monmonbas" )
 column=(type=datetime updatewhereclause=yes name=feccrereg dbname="xtmoneda.feccrereg" )
 column=(type=char(10) updatewhereclause=yes name=codusucid dbname="xtmoneda.codusucid" )
 retrieve="  SELECT xtmoneda.monid,   
         xtmoneda.mondescri,   
         xtmoneda.monabrevi,   
         xtmoneda.mondecred,   
         xtmoneda.monmonbas, 
         xtmoneda.feccrereg,   
         xtmoneda.codusucid  
    FROM xtmoneda   
" update="xtmoneda" updatewhere=0 updatekeyinplace=no  sort="mondescri A " )
column(band=detail id=2 alignment="0" tabsequence=32766 border="0" color="0" x="197" y="8" height="56" width="713" format="[general]" html.valueishtml="0"  name=mondescri visible="1" edit.limit=25 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.required=yes edit.nilisnull=yes edit.autohscroll=yes edit.imemode=0  font.face="Arial" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=3 alignment="0" tabsequence=32766 border="0" color="0" x="18" y="8" height="56" width="155" format="[general]" html.valueishtml="0"  name=monabrevi visible="1" edit.limit=5 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.required=yes edit.nilisnull=yes edit.autohscroll=yes edit.imemode=0  font.face="Arial" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" netscapelayers="0" )

release 8;
datawindow(units=0 timer_interval=0 color=79741120 processing=0 HTMLDW=no print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=72 color="536870912" )
table(column=(type=long updatewhereclause=yes name=tmaid dbname="xttipomaquina.tmaid" )
 column=(type=char(35) updatewhereclause=yes name=tmadescri dbname="xttipomaquina.tmadescri" )
 retrieve="  SELECT xttipomaquina.tmaid,   
         xttipomaquina.tmadescri  
    FROM xttipomaquina  
" )
column(band=detail id=2 alignment="0" tabsequence=32766 border="0" color="33554432" x="14" y="4" height="52" width="805" format="[general]" html.valueishtml="0"  name=tmadescri visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" netscapelayers="0" )

release 8;
datawindow(units=0 timer_interval=0 color=79741120 processing=0 HTMLDW=no print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=72 color="536870912" )
table(column=(type=long updatewhereclause=yes key=no name=tjuid dbname="xttipojuego.tjuid" )
 column=(type=char(35) updatewhereclause=yes name=tjudescri dbname="xttipojuego.tjudescri" )
 retrieve="  SELECT xttipojuego.tjuid,   
         xttipojuego.tjudescri  
    FROM xttipojuego 
" update="xttipojuego" updatewhere=0 updatekeyinplace=no )
column(band=detail id=2 alignment="0" tabsequence=32766 border="0" color="33554432" x="14" y="4" height="60" width="928" format="[general]" html.valueishtml="0"  name=tjudescri visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" netscapelayers="0" )

release 8;
datawindow(units=0 timer_interval=0 color=16777215 processing=0 HTMLDW=no print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=68 color="536870912" )
table(column=(type=long updatewhereclause=yes name=neoid dbname="atempope.neoid" )
 column=(type=long updatewhereclause=yes name=domnot dbname="atempope.domnot" )
 column=(type=long updatewhereclause=yes name=domofi dbname="atempope.domofi" )
 column=(type=char(15) updatewhereclause=yes name=neonempop dbname="atempope.neonempop" )
 column=(type=char(1) updatewhereclause=yes name=neotipmaq dbname="atempope.neotipmaq" )
 column=(type=date updatewhereclause=yes name=neofecini dbname="atempope.neofecini" )
 column=(type=date updatewhereclause=yes name=neofeccad dbname="atempope.neofeccad" )
 column=(type=long updatewhereclause=yes name=epiid dbname="atempope.epiid" )
 column=(type=char(35) updatewhereclause=yes name=socrazons dbname="atsociedad.socrazons" )
 column=(type=char(16) updatewhereclause=yes name=socdninif dbname="atsociedad.socdninif" )
 column=(type=long updatewhereclause=yes name=socid dbname="atsociedad.socid" )
 retrieve="  SELECT atempope.neoid,   
         atempope.domnot,   
         atempope.domofi,   
         atempope.neonempop,   
         atempope.neotipmaq,   
         atempope.neofecini,   
         atempope.neofeccad,   
         atempope.epiid,   
         atsociedad.socrazons,   
         atsociedad.socdninif,   
         atsociedad.socid  
    FROM atempope,   
         atsociedad  
   WHERE ( atsociedad.socid = atempope.socid )   
 
"  sort="socrazons A neonempop A " )
compute(band=detail alignment="0" expression="trim( socrazons ) + ' - ' +  neonempop "border="0" color="0" x="9" y="8" height="52" width="1111" format="[GENERAL]" html.valueishtml="0"  name=neodescri visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" netscapelayers="0" )

release 8;
datawindow(units=0 timer_interval=0 color=79741120 processing=0 HTMLDW=no print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=72 color="536870912" )
table(column=(type=long updatewhereclause=yes key=yes name=motid dbname="xtmotivo.motid" )
 column=(type=char(2) updatewhereclause=yes name=mottipmot dbname="xtmotivo.mottipmot" )
 column=(type=char(35) updatewhereclause=yes name=motdescri dbname="xtmotivo.motdescri" )
 column=(type=datetime updatewhereclause=yes name=feccrereg dbname="xtmotivo.feccrereg" )
 column=(type=char(10) updatewhereclause=yes name=codusucid dbname="xtmotivo.codusucid" )
 retrieve="  SELECT xtmotivo.motid,   
         xtmotivo.mottipmot,   
         xtmotivo.motdescri, 
         xtmotivo.feccrereg,   
         xtmotivo.codusucid  
    FROM xtmotivo  
   WHERE xtmotivo.mottipmot ='FC'
			
" update="xtmotivo" updatewhere=0 updatekeyinplace=no )
column(band=detail id=3 alignment="0" tabsequence=32766 border="0" color="0" x="9" y="4" height="60" width="987" format="[general]" html.valueishtml="0"  name=motdescri visible="1" edit.limit=35 edit.case=any edit.autoselect=yes edit.autohscroll=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" netscapelayers="0" )

release 8;
datawindow(units=0 timer_interval=0 color=79741120 processing=0 HTMLDW=no print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=72 color="536870912" )
table(column=(type=long updatewhereclause=yes key=yes name=motid dbname="xtmotivo.motid" )
 column=(type=char(2) updatewhereclause=yes name=mottipmot dbname="xtmotivo.mottipmot" )
 column=(type=char(35) updatewhereclause=yes name=motdescri dbname="xtmotivo.motdescri" )
 column=(type=datetime updatewhereclause=yes name=feccrereg dbname="xtmotivo.feccrereg" )
 column=(type=char(10) updatewhereclause=yes name=codusucid dbname="xtmotivo.codusucid" )
 retrieve="  SELECT xtmotivo.motid,   
         xtmotivo.mottipmot,   
         xtmotivo.motdescri,   
         xtmotivo.feccrereg,   
         xtmotivo.codusucid  
    FROM xtmotivo  
   WHERE xtmotivo.mottipmot = 'IC'

			
" update="xtmotivo" updatewhere=0 updatekeyinplace=no )
column(band=detail id=3 alignment="0" tabsequence=32766 border="0" color="0" x="9" y="4" height="60" width="987" format="[general]" html.valueishtml="0"  name=motdescri visible="1" edit.limit=35 edit.case=any edit.autoselect=yes edit.autohscroll=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" netscapelayers="0" )

release 8;
datawindow(units=0 timer_interval=0 color=79741120 processing=0 HTMLDW=no print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=72 color="536870912" )
table(column=(type=long updatewhereclause=yes key=yes name=tpcid dbname="xtfuncion.tpcid" )
 column=(type=char(35) updatewhereclause=yes name=tpcdescri dbname="xtfuncion.tpcdescri" )
 column=(type=datetime updatewhereclause=yes name=feccrereg dbname="xtfuncion.feccrereg" )
 column=(type=char(10) updatewhereclause=yes name=codusucid dbname="xtfuncion.codusucid" )
 column=(type=char(1) updatewhereclause=yes name=tpcmotivo dbname="xtfuncion.tpcmotivo" )
 column=(type=char(1) updatewhereclause=yes name=tpcobliga dbname="xtfuncion.tpcobliga" )
 column=(type=char(1) updatewhereclause=yes name=tpcobldni dbname="xtfuncion.tpcobldni" )
 column=(type=char(1) updatewhereclause=yes name=tpcoblbas dbname="xtfuncion.tpcoblbas" )
 column=(type=char(35) updatewhereclause=yes name=tpcbitmap dbname="xtfuncion.tpcbitmap" )
 retrieve="  SELECT xtfuncion.tpcid,   
         xtfuncion.tpcdescri, 
         xtfuncion.feccrereg,   
         xtfuncion.codusucid,   
         xtfuncion.tpcmotivo,   
         xtfuncion.tpcobliga,   
         xtfuncion.tpcobldni,   
         xtfuncion.tpcoblbas,   
         xtfuncion.tpcbitmap
    FROM xtfuncion   
   WHERE tpcambapl = 'E'

" update="xtfuncion" updatewhere=0 updatekeyinplace=no  sort="tpcdescri A " )
column(band=detail id=2 alignment="0" tabsequence=32766 border="0" color="33554432" x="9" y="4" height="60" width="1120" format="[general]" html.valueishtml="0"  name=tpcdescri visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" netscapelayers="0" )

release 8;
datawindow(units=0 timer_interval=0 color=79741120 processing=0 HTMLDW=no print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=72 color="536870912" )
table(column=(type=long updatewhereclause=yes name=ugeid dbname="xtunigestion.ugeid" )
 column=(type=long updatewhereclause=yes name=uorid dbname="xtunigestion.uorid" )
 column=(type=char(35) updatewhereclause=yes name=ugedescri dbname="xtunigestion.ugedescri" )
 column=(type=date updatewhereclause=yes name=ugefecini dbname="xtunigestion.ugefecini" )
 column=(type=date updatewhereclause=yes name=ugefecfin dbname="xtunigestion.ugefecfin" )
 column=(type=datetime updatewhereclause=yes name=feccrereg dbname="xtunigestion.feccrereg" )
 column=(type=char(10) updatewhereclause=yes name=codusucid dbname="xtunigestion.codusucid" )
 column=(type=char(35) updatewhereclause=yes name=uordescri dbname="xtuniorganizacion.uordescri" )
 column=(type=char(35) updatewhereclause=yes name=uorbitmap dbname="xtuniorganizacion.uorbitmap" )
 retrieve="  SELECT xtunigestion.ugeid,   
         xtunigestion.uorid,   
         xtunigestion.ugedescri,   
         xtunigestion.ugefecini,   
         xtunigestion.ugefecfin, 
         xtunigestion.feccrereg,   
         xtunigestion.codusucid,   
         xtuniorganizacion.uordescri,   
         xtuniorganizacion.uorbitmap  
    FROM xtunigestion,   
         xtuniorganizacion  
   WHERE ( xtuniorganizacion.uorid = xtunigestion.uorid ) 
"  sort="ugedescri A " )
column(band=detail id=3 alignment="0" tabsequence=32766 border="0" color="33554432" x="9" y="4" height="60" width="969" format="[general]" html.valueishtml="0"  name=ugedescri visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" netscapelayers="0" )

release 8;
datawindow(units=0 timer_interval=0 color=79741120 processing=0 HTMLDW=no print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=72 color="536870912" )
table(column=(type=long updatewhereclause=yes name=viaid dbname="xttipovia.viaid" )
 column=(type=char(10) updatewhereclause=yes name=codusucid dbname="xttipovia.codusucid" )
 column=(type=datetime updatewhereclause=yes name=feccrereg dbname="xttipovia.feccrereg" )
 column=(type=char(35) updatewhereclause=yes name=viadescri dbname="xttipovia.viadescri" )
 retrieve="  SELECT xttipovia.viaid,   
         xttipovia.codusucid,   
         xttipovia.feccrereg, 
         xttipovia.viadescri  
    FROM xttipovia
"  sort="viadescri A " )
column(band=detail id=4 alignment="0" tabsequence=32766 border="0" color="0" x="9" y="4" height="60" width="987" format="[general]" html.valueishtml="0"  name=viadescri visible="1" edit.limit=35 edit.case=any edit.autoselect=yes edit.autohscroll=yes edit.imemode=0  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" netscapelayers="0" )






























































































































































































release 10.5;
datawindow(units=0 timer_interval=0 color=80269524 processing=0 HTMLDW=no print.printername="" print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.canusedefaultprinter=yes print.prompt=no print.buttons=no print.preview.buttons=no print.cliptext=no print.overrideprintjob=no print.collate=yes print.preview.outline=yes hidegrayline=no )
header(height=0 color="536870912" )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=2448 color="536870912" )
table(column=(type=long update=yes updatewhereclause=yes key=yes name=maqid dbname="atmaquina.maqid" )
 column=(type=long update=yes updatewhereclause=yes name=tmoid dbname="atmaquina.tmoid" )
 column=(type=long update=yes updatewhereclause=yes name=coaid dbname="atmaquina.coaid" )
 column=(type=char(2) update=yes updatewhereclause=yes name=campo2codmaq dbname="atmaquina.campo2codmaq" )
 column=(type=char(10) update=yes updatewhereclause=yes name=maqsersap dbname="atmaquina.maqsersap" )
 column=(type=char(12) update=yes updatewhereclause=yes name=maqnumgui dbname="atmaquina.maqnumgui" )
 column=(type=char(20) update=yes updatewhereclause=yes name=maqnumhom dbname="atmaquina.maqnumhom" )
 column=(type=long update=yes updatewhereclause=yes name=fypidpro dbname="atmaquina.fypidpro" )
 column=(type=date update=yes updatewhereclause=yes name=maqfecfab dbname="atmaquina.maqfecfab" )
 column=(type=long update=yes updatewhereclause=yes name=monid dbname="atmaquina.monid" )
 column=(type=char(1) update=yes updatewhereclause=yes name=maqsegesp dbname="atmaquina.maqsegesp" initial="N" values="	S/	N" )
 column=(type=char(1) update=yes updatewhereclause=yes name=maqesreci dbname="atmaquina.maqesreci" initial="N" values="	S/	N" )
 column=(type=decimal(4) update=yes updatewhereclause=yes name=maqcareo dbname="atmaquina.maqcareo" initial="0" )
 column=(type=decimal(4) update=yes updatewhereclause=yes name=maqcarloc dbname="atmaquina.maqcarloc" initial="0" )
 column=(type=decimal(4) update=yes updatewhereclause=yes name=maqcarter dbname="atmaquina.maqcarter" initial="0" )
 column=(type=decimal(4) update=yes updatewhereclause=yes name=maqcarrec dbname="atmaquina.maqcarrec" initial="0" )
 column=(type=char(15) update=yes updatewhereclause=yes name=crmmaqid dbname="atmaquina.crmmaqid" )
 column=(type=datetime update=yes updatewhereclause=yes name=feccrereg dbname="atmaquina.feccrereg" )
 column=(type=char(35) updatewhereclause=yes name=tmodescri dbname="atmodelo.tmodescri" )
 column=(type=char(7) updatewhereclause=yes name=tmomatnr dbname="atmodelo.tmomatnr" )
 column=(type=long update=yes updatewhereclause=yes name=ugeid dbname="atmaquina.ugeid" )
 column=(type=char(10) update=yes updatewhereclause=yes name=codusucid dbname="atmaquina.codusucid" )
 column=(type=char(2) updatewhereclause=yes name=coacodsap dbname="xtcomunidad.coacodsap" )
 column=(type=char(10) update=yes updatewhereclause=yes name=maqnserie dbname="atmaquina.maqnserie" )
 column=(type=decimal(4) update=yes updatewhereclause=yes name=maqrulda dbname="atmaquina.maqrulda" )
 column=(type=decimal(4) update=yes updatewhereclause=yes name=maqacudho dbname="atmaquina.maqacudho" )
 column=(type=decimal(4) update=yes updatewhereclause=yes name=maqporpre dbname="atmaquina.maqporpre" )
 column=(type=char(35) updatewhereclause=yes name=tmadescri dbname="xttipomaquina.tmadescri" )
 column=(type=char(1) updatewhereclause=yes name=tmatipmaq dbname="xttipomaquina.tmatipmaq" )
 column=(type=char(45) update=yes updatewhereclause=yes name=codmaq dbname="atmaquina.codmaq" )
 column=(type=date update=yes updatewhereclause=yes name=atmaquina_maqfecinsp dbname="atmaquina.maqfecinsp" )
 column=(type=char(10) updatewhereclause=yes name=gtmodecomu_hmcnumhom dbname="xtcomunidad.hmcnumhom" values="	/	/" )
 column=(type=long updatewhereclause=yes name=fypidfab dbname="atmodelo.fypidfab" )
 column=(type=date update=yes updatewhereclause=yes name=atmaquina_maqfecnguia dbname="atmaquina.maqfecnguia" )
 column=(type=long updatewhereclause=yes name=htsocimaq_socid dbname="xtcomunidad.socid" )
 column=(type=char(35) updatewhereclause=yes name=socrazons dbname="xtcomunidad.socrazons" )
 column=(type=char(1) update=yes updatewhereclause=yes name=maqletser dbname="atmaquina.maqletser" )
 column=(type=long update=yes updatewhereclause=yes name=hmcid dbname="atmaquina.hmcid" )
 retrieve="SELECT  distinct atmaquina.maqid,    
         atmaquina.tmoid,   
         atmaquina.coaid,   
         atmaquina.campo2codmaq,   
         atmaquina.maqsersap,   
         atmaquina.maqnumgui,   
         atmaquina.maqnumhom,   
         atmaquina.fypidpro,   
         atmaquina.maqfecfab,   
         atmaquina.monid,   
         atmaquina.maqsegesp,   
         atmaquina.maqesreci,   
         atmaquina.maqcareo,   
         atmaquina.maqcarloc,   
         atmaquina.maqcarter,   
         atmaquina.maqcarrec,
			atmaquina.crmmaqid,
         atmaquina.feccrereg,   
         atmodelo.tmodescri,   
         atmodelo.tmomatnr,   
         atmaquina.ugeid,   
         atmaquina.codusucid,   
         (select xtcomunidad.coacodsap from xtcomunidad where coaid = atmaquina.coaid),   
         atmaquina.maqnserie,     
         atmaquina.maqrulda,   
         atmaquina.maqacudho,   
         atmaquina.maqporpre,   
         xttipomaquina.tmadescri,
	 		xttipomaquina.tmatipmaq,
	 		atmaquina.codmaq,
	 		atmaquina.maqfecinsp,
			gtmodecomu.hmcnumhom,
		   atmodelo.fypidfab,
			atmaquina.maqfecnguia,
             htsocimaq.socid,
             atsociedad.socrazons,
			atmaquina.maqletser,
			atmaquina.hmcid
    FROM atmodelo,   
         xttipomaquina, 
	      atmaquina,
			outer ( gtmodecomu),
             outer (htsocimaq,atsociedad)
   WHERE ( atmodelo.tmoid      = atmaquina.tmoid) AND
  			( xttipomaquina.tmaid = atmodelo.tmaid ) AND  
			( gtmodecomu.hmcid    = atmaquina.hmcid) AND
     (atmaquina.maqid = htsocimaq.maqid) and
                    (htsocimaq.hsmtipsoc = 'FA') and
                    (htsocimaq.hsmid = (Select max(b.hsmid) from  htsocimaq b
                                                          where b.maqid = atmaquina.maqid and
                                                                    b.hsmtipsoc = 'FA')) and
                   (htsocimaq.socid = atsociedad.socid)" update="atmaquina" updatewhere=0 updatekeyinplace=yes  sort="codmaq A " )
groupbox(band=detail text="Datos Identificativos"border="5" color="0" x="18" y="16" height="564" width="1486"  name=gb_2 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=30 alignment="0" tabsequence=32766 border="2" color="0" x="443" y="80" height="60" width="805" format="[general]" html.valueishtml="0"  name=codmaq visible="1" edit.limit=0 edit.case=any edit.autoselect=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="80269524" )
bitmap(band=detail filename="imatges/SAP16.bmp" x="347" y="80" height="64" width="73" border="2"  name=p_1 visible="0" )
column(band=detail id=23 alignment="0" tabsequence=32766 border="2" color="12632256" x="2030" y="1068" height="52" width="325" format="[general]" html.valueishtml="0"  name=coacodsap visible="1~t0" edit.limit=0 edit.case=any edit.autoselect=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="1090519039" )
column(band=detail id=20 alignment="0" tabsequence=32766 border="0" color="12632256" x="2030" y="1136" height="52" width="517" format="[general]" html.valueishtml="0"  name=tmomatnr visible="1~t0" edit.limit=0 edit.case=any edit.autoselect=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="1090519039" )
column(band=detail id=2 alignment="0" tabsequence=32766 border="0" color="12632256" x="2030" y="1212" height="80" width="128" format="[general]" html.valueishtml="0"  name=tmoid visible="1~t0" edit.limit=0 edit.case=any edit.autoselect=yes  font.face="Arial" font.height="-12" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="1090519039" )
column(band=detail id=10 alignment="0" tabsequence=32766 border="2" color="12632256" x="2030" y="1316" height="56" width="274" format="[general]" html.valueishtml="0"  name=monid visible="1~t0" dddw.name=d_dddw_moneda dddw.displaycolumn=mondescri dddw.datacolumn=monid dddw.percentwidth=200 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=no dddw.case=any dddw.hscrollbar=yes dddw.vscrollbar=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="1090519039" )
column(band=detail id=29 alignment="0" tabsequence=32766 border="0" color="12632256" x="2030" y="908" height="56" width="919" format="[general]" html.valueishtml="0"  name=tmatipmaq visible="1~t0" edit.limit=0 edit.case=any edit.autoselect=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="1090519039" )
groupbox(band=detail text="Datos Compra"border="5" color="0" x="18" y="588" height="320" width="1486"  name=gb_3 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="1" text="Fec.Fabricación" border="0" color="16711680" x="32" y="804" height="60" width="384" html.valueishtml="0"  name=maqfecfab_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="% Premios" border="0" color="0" x="864" y="804" height="60" width="283" html.valueishtml="0"  name=maqporpre_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=27 alignment="0" tabsequence=10 border="2" color="0" x="1166" y="804" height="60" width="283" format="#,##0.00" html.valueishtml="0"  name=maqporpre visible="1" editmask.mask="###.00" editmask.focusrectangle=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="1090519039" )
groupbox(band=detail text="Atributos"border="5" color="0" x="18" y="908" height="472" width="1486"  name=gb_4 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="1" text="U. de Gestión" border="0" color="0" x="32" y="980" height="60" width="384" html.valueishtml="0"  name=ugeid_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="Proveedor" border="0" color="0" x="32" y="732" height="56" width="384" html.valueishtml="0"  name=fypidpro_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="Fabricante" border="0" color="0" x="32" y="652" height="64" width="384" html.valueishtml="0"  name=t_4 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
groupbox(band=detail text="Saldo Carga"border="5" color="0" x="18" y="1388" height="240" width="1486"  name=gb_1 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="1" text="Emp.Operadora" border="0" color="0" x="32" y="1456" height="60" width="375" html.valueishtml="0"  name=maqcareo_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="Local" border="0" color="0" x="32" y="1532" height="64" width="375" html.valueishtml="0"  name=maqcarloc_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=13 alignment="1" tabsequence=32766 border="2" color="0" x="434" y="1456" height="60" width="329" format="#,##0.00" html.valueishtml="0"  name=maqcareo visible="1" edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=14 alignment="1" tabsequence=32766 border="2" color="0" x="434" y="1532" height="64" width="329" format="#,##0.00" html.valueishtml="0"  name=maqcarloc visible="1" edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="1" text="Tercero" border="0" color="0" x="795" y="1456" height="60" width="315" html.valueishtml="0"  name=maqcarter_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="Recaudación" border="0" color="0" x="795" y="1532" height="64" width="315" html.valueishtml="0"  name=maqcarrec_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=16 alignment="1" tabsequence=32766 border="2" color="0" x="1129" y="1532" height="64" width="334" format="#,##0.00" html.valueishtml="0"  name=maqcarrec visible="1" edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=15 alignment="1" tabsequence=32766 border="2" color="0" x="1129" y="1456" height="60" width="334" format="#,##0.00" html.valueishtml="0"  name=maqcarter visible="1" edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="1" text="Guia Circulación" border="0" color="0" x="32" y="1148" height="56" width="384" html.valueishtml="0"  name=maqnumgui_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=6 alignment="0" tabsequence=20 border="2" color="0" x="439" y="1148" height="56" width="347" format="[general]" html.valueishtml="0"  name=maqnumgui visible="1" edit.limit=12 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="1090519039" )
text(band=detail alignment="1" text="Seg. Especial" border="0" color="0" x="969" y="1148" height="56" width="384" html.valueishtml="0"  name=maqsegesp_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=11 alignment="0" tabsequence=30 border="0" color="0" x="1371" y="1148" height="56" width="105" format="[general]" html.valueishtml="0"  name=maqsegesp visible="1" checkbox.text="" checkbox.on="S" checkbox.off="N" checkbox.scale=no checkbox.threed=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=12 alignment="0" tabsequence=50 border="0" color="0" x="1371" y="1220" height="60" width="105" format="[general]" html.valueishtml="0"  name=maqesreci visible="1" checkbox.text="" checkbox.on="S" checkbox.off="N" checkbox.scale=no checkbox.threed=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="1" text="Transformada" border="0" color="0" x="969" y="1220" height="60" width="384" html.valueishtml="0"  name=maqesreci_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="Num.Explotación" border="0" color="0" x="32" y="1220" height="52" width="384" html.valueishtml="0"  name=t_2 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="Vto. Inspeccion" border="0" color="0" x="32" y="1296" height="52" width="384" html.valueishtml="0"  name=t_3 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="Expedición" border="0" color="0" x="800" y="1292" height="52" width="384" html.valueishtml="0"  name=t_5 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=34 alignment="0" tabsequence=70 border="2" color="0" x="1202" y="1292" height="64" width="279" format="[general]" html.valueishtml="0"  name=atmaquina_maqfecnguia visible="1" editmask.mask="dd/mm/yyyy" editmask.focusrectangle=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="16777215" )
text(band=detail alignment="1" text="S. de Facturación" border="0" color="0" x="32" y="1060" height="52" width="384" html.valueishtml="0"  name=socrazons_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=21 alignment="0" tabsequence=32766 border="2" color="0" x="439" y="980" height="60" width="850" format="[General]" html.valueishtml="0"  name=ugeid visible="1" dddw.name=d_dddw_unidadgestion dddw.displaycolumn=ugedescri dddw.datacolumn=ugeid dddw.percentwidth=150 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=no dddw.case=any dddw.hscrollbar=yes dddw.vscrollbar=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=35 alignment="0" tabsequence=32766 border="0" color="0" x="2030" y="812" height="52" width="992" format="[general]" html.valueishtml="0"  name=htsocimaq_socid visible="0" edit.limit=0 edit.case=any edit.autoselect=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="80269524" )
text(band=detail alignment="1" text="Tipo máquina" border="0" color="0" x="37" y="268" height="56" width="384" html.valueishtml="0"  name=tmadescri_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="Modelo" border="0" color="16711680" x="37" y="188" height="64" width="384" html.valueishtml="0"  name=tmoid_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=19 alignment="0" tabsequence=32766 border="2" color="0" x="443" y="188" height="64" width="690" format="[general]" html.valueishtml="0"  name=tmodescri visible="1" edit.limit=0 edit.case=any edit.autoselect=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="1" text="Año" border="0" color="16711680" x="37" y="340" height="60" width="384" html.valueishtml="0"  name=maqnserie_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="Nº Serie" border="0" color="0" x="946" y="340" height="60" width="210" html.valueishtml="0"  name=maqsersap_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=7 alignment="0" tabsequence=40 border="2" color="0" x="439" y="1220" height="60" width="347" format="[general]" html.valueishtml="0"  name=maqnumhom visible="1" edit.limit=0 edit.case=any edit.autoselect=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="16777215" )
column(band=detail id=31 alignment="0" tabsequence=60 border="2" color="0" x="439" y="1292" height="64" width="347" format="[general]" html.valueishtml="0"  name=atmaquina_maqfecinsp visible="1" editmask.mask="dd/mm/yyyy" editmask.focusrectangle=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="1090519039" )
text(band=detail alignment="1" text="Letra" border="0" color="0" x="649" y="340" height="60" width="128" html.valueishtml="0"  name=maqletser_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
compute(band=detail alignment="0" expression="if (isnull(tmomatnr),'',trim(tmomatnr)+~"/~")+
if (isnull( coacodsap  ),'', string( coacodsap ) +~"/~")+
if (isnull(maqnserie),'', maqnserie+~"/~")+ 
if (isNull(maqsersap),'',maqsersap)"border="2" color="0" x="2021" y="732" height="64" width="805" format="[GENERAL]" html.valueishtml="0"  name=referenciasap visible="1~t0"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="80269524" )
column(band=detail id=17 alignment="0" tabsequence=32766 border="0" color="0" x="1559" y="152" height="52" width="347" format="[general]" html.valueishtml="0"  name=crmmaqid visible="1" edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="80269524" )
column(band=detail id=28 alignment="0" tabsequence=32766 border="2" color="0" x="443" y="268" height="56" width="416" format="[general]" html.valueishtml="0"  name=tmadescri visible="1" edit.limit=0 edit.case=any edit.autoselect=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="80269524" )
column(band=detail id=37 alignment="0" tabsequence=32766 border="2" color="0" x="791" y="340" height="60" width="123" format="[general]" html.valueishtml="0"  name=maqletser visible="1" editmask.mask="!" editmask.focusrectangle=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="80269524" )
column(band=detail id=5 alignment="0" tabsequence=32766 border="2" color="0" x="1175" y="340" height="60" width="283" format="[general]" html.valueishtml="0"  name=maqsersap visible="1" edit.limit=5 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="80269524" )
column(band=detail id=33 alignment="0" tabsequence=32766 border="2" color="0" x="439" y="652" height="64" width="850" format="[general]" html.valueishtml="0"  name=fypidfab visible="1" dddw.name=d_dddw_fabriprovee dddw.displaycolumn=fypnombre dddw.datacolumn=fypid dddw.percentwidth=0 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=no dddw.case=any  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="80269524" )
column(band=detail id=9 alignment="0" tabsequence=32766 border="2" color="0" x="439" y="804" height="60" width="283" format="dd/mm/yyyy" html.valueishtml="0"  name=maqfecfab visible="1" editmask.mask="dd/mm/yyyy" editmask.focusrectangle=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="80269524" )
column(band=detail id=8 alignment="0" tabsequence=32766 border="2" color="0" x="439" y="732" height="56" width="850" format="[general]" html.valueishtml="0"  name=fypidpro visible="1" dddw.name=d_dddw_fabriprovee dddw.displaycolumn=fypnombre dddw.datacolumn=fypid dddw.percentwidth=0 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=no dddw.case=any dddw.hscrollbar=yes dddw.vscrollbar=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="80269524" )
column(band=detail id=36 alignment="0" tabsequence=32766 border="2" color="0" x="439" y="1068" height="56" width="850" format="[general]" html.valueishtml="0"  name=socrazons visible="1" edit.limit=0 edit.case=any edit.autoselect=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="80269524" )
column(band=detail id=38 alignment="0" tabsequence=80 border="2" color="0" x="1595" y="268" height="56" width="110" format="[general]" html.valueishtml="0"  name=hmcid visible="0" edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=no  font.face="Tahoma" font.height="-10" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="16777215" )
text(band=detail alignment="1" text="Homologación" border="0" color="0" x="41" y="496" height="60" width="384" html.valueishtml="0"  name=maqnumhom_t visible="1~tif (  tmatipmaq = 'S', 0, 1)"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=32 alignment="0" tabsequence=32766 border="2" color="0" x="443" y="496" height="60" width="690" format="[general]" html.valueishtml="0"  name=gtmodecomu_hmcnumhom visible="1~tif (  tmatipmaq = 'S', 0, 1)" ddlb.limit=0 ddlb.allowedit=no ddlb.case=any  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="80269524" )
column(band=detail id=3 alignment="0" tabsequence=32766 border="2" color="0" x="443" y="416" height="60" width="690" format="[general]" html.valueishtml="0" protect="0~tif (isRowNew(), 0, 1)"  name=coaid visible="1~tif (  tmatipmaq = 'S', 0, 1)" dddw.name=d_dddw_comunidad dddw.displaycolumn=coadescri dddw.datacolumn=coaid dddw.percentwidth=0 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=no dddw.case=any dddw.vscrollbar=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="0" background.color="67108864~tif( isRowNew(), 1073741824, 79741120 )" )
text(band=detail alignment="1" text="Comunidad" border="0" color="16711680" x="37" y="416" height="60" width="384" html.valueishtml="0"  name=maqautsap_t visible="1~tif (  tmatipmaq = 'S', 0, 1)"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="Cod. AADD:" border="0" color="16711680" x="37" y="416" height="60" width="384" html.valueishtml="0"  name=campo2codmaq_t visible="1~tif (  tmatipmaq = 'S', 1, 0)"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=24 alignment="0" tabsequence=32766 border="2" color="0" x="443" y="340" height="60" width="178" format="[general]" html.valueishtml="0"  name=maqnserie visible="1" editmask.mask="####" editmask.focusrectangle=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="80269524" )
column(band=detail id=4 alignment="0" tabsequence=90 border="2" color="0" x="443" y="416" height="52" width="128" format="[general]" html.valueishtml="0"  name=campo2codmaq visible="1~tif (  tmatipmaq = 'S', 1, 0)" edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="80269524" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" encodeselflinkargs="1" netscapelayers="0" pagingmethod=0 generatedddwframes="1" )
xhtmlgen() cssgen(sessionspecific="0" )
xmlgen(inline="0" )
xsltgen()
jsgen()
export.xml(headgroups="1" includewhitespace="0" metadatatype=0 savemetadata=0 )
import.xml()
export.pdf(method=0 distill.custompostscript="0" xslfop.print="0" )
export.xhtml()
 
release 10.5;
datawindow(units=0 timer_interval=0 color=80269524 processing=0 HTMLDW=no print.printername="" print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.canusedefaultprinter=yes print.prompt=no print.buttons=no print.preview.buttons=no print.cliptext=no print.overrideprintjob=no print.collate=yes print.preview.outline=yes hidegrayline=no )
header(height=0 color="536870912" )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=1288 color="536870912" )
table(column=(type=long update=yes updatewhereclause=yes key=yes name=locid dbname="atlocal.locid" )
 column=(type=long update=yes updatewhereclause=yes name=pobsid dbname="atlocal.pobsid" )
 column=(type=long update=yes updatewhereclause=yes name=viaid dbname="atlocal.viaid" )
 column=(type=long update=yes updatewhereclause=yes name=tloid dbname="atlocal.tloid" )
 column=(type=long update=yes updatewhereclause=yes name=tlocaadd dbname="atlocal.tlocaadd" )
 column=(type=char(35) update=yes updatewhereclause=yes name=locnombre dbname="atlocal.locnombre" )
 column=(type=char(35) update=yes updatewhereclause=yes name=locnomvia dbname="atlocal.locnomvia" )
 column=(type=char(8) update=yes updatewhereclause=yes name=locnumvia dbname="atlocal.locnumvia" )
 column=(type=char(20) update=yes updatewhereclause=yes name=locobsvia dbname="atlocal.locobsvia" )
 column=(type=char(10) update=yes updatewhereclause=yes name=loccoopla dbname="atlocal.loccoopla" )
 column=(type=char(10) update=yes updatewhereclause=yes name=locposgps dbname="atlocal.locposgps" )
 column=(type=char(12) update=yes updatewhereclause=yes name=loctelef1 dbname="atlocal.loctelef1" )
 column=(type=char(12) update=yes updatewhereclause=yes name=loctelef2 dbname="atlocal.loctelef2" )
 column=(type=char(12) update=yes updatewhereclause=yes name=loctelefm dbname="atlocal.loctelefm" )
 column=(type=char(12) update=yes updatewhereclause=yes name=locteleff dbname="atlocal.locteleff" )
 column=(type=long update=yes updatewhereclause=yes name=locperiod dbname="atlocal.locperiod" initial="7" )
 column=(type=char(1) update=yes updatewhereclause=yes name=locdiacie dbname="atlocal.locdiacie" initial="W" values="Lunes	L/Martes	M/Miércoles	X/Jueves	J/Viernes	V/Sábado	S/Domingo	D/Desconocido	W/No Cierra	N/" )
 column=(type=char(1) update=yes updatewhereclause=yes name=locdiare1 dbname="atlocal.locdiare1" initial="D" values="Lunes	L/Martes	M/Miércoles	X/Jueves	J/Viernes	V/Sábado	S/Domingo	D/	/	/" )
 column=(type=char(1) update=yes updatewhereclause=yes name=locdiare2 dbname="atlocal.locdiare2" initial="D" values="Lunes	L/Martes	M/Miércoles	X/Jueves	J/Viernes	V/Sábado	S/Domingo	D/	/	/" )
 column=(type=char(8) update=yes updatewhereclause=yes name=locgesmaq dbname="atlocal.locgesmaq" )
 column=(type=long update=yes updatewhereclause=yes name=epiid dbname="atlocal.epiid" )
 column=(type=char(1) update=yes updatewhereclause=yes name=locregime dbname="atlocal.locregime" initial="N" values="Propio	P/Alquilado	A/Realquilado	R/Codere	C/Desconocido	N/" )
 column=(type=char(35) update=yes updatewhereclause=yes name=loce_mail dbname="atlocal.loce_mail" )
 column=(type=char(35) update=yes updatewhereclause=yes name=locpagweb dbname="atlocal.locpagweb" )
 column=(type=char(6) update=yes updatewhereclause=yes name=loctablla dbname="atlocal.loctablla" )
 column=(type=char(1) update=yes updatewhereclause=yes name=locindref dbname="atlocal.locindref" initial="N" values="	S/	N" )
 column=(type=date update=yes updatewhereclause=yes name=locfecref dbname="atlocal.locfecref" )
 column=(type=long update=yes updatewhereclause=yes name=locmesain dbname="atlocal.locmesain" )
 column=(type=long update=yes updatewhereclause=yes name=locmesaex dbname="atlocal.locmesaex" )
 column=(type=decimal(4) update=yes updatewhereclause=yes name=locpotenc dbname="atlocal.locpotenc" )
 column=(type=long update=yes updatewhereclause=yes name=locmetbar dbname="atlocal.locmetbar" )
 column=(type=long update=yes updatewhereclause=yes name=locbrzcaf dbname="atlocal.locbrzcaf" )
 column=(type=long update=yes updatewhereclause=yes name=blqid dbname="atlocal.blqid" )
 column=(type=long update=yes updatewhereclause=yes name=borid dbname="atlocal.borid" )
 column=(type=datetime update=yes updatewhereclause=yes name=feccrereg dbname="atlocal.feccrereg" )
 column=(type=char(10) update=yes updatewhereclause=yes name=codusucid dbname="atlocal.codusucid" )
 column=(type=long update=yes updatewhereclause=yes name=atlocal_locsuperf dbname="atlocal.locsuperf" )
 column=(type=char(10) update=yes updatewhereclause=yes name=atlocal_locnumayu dbname="atlocal.locnumayu" )
 column=(type=char(8) update=yes updatewhereclause=yes name=lochornov dbname="atlocal.lochornov" )
 column=(type=char(8) update=yes updatewhereclause=yes name=lochorrec dbname="atlocal.lochorrec" )
 column=(type=char(8) update=yes updatewhereclause=yes name=lochordom dbname="atlocal.lochordom" )
 column=(type=char(8) update=yes updatewhereclause=yes name=lochorsab dbname="atlocal.lochorsab" )
 column=(type=char(8) update=yes updatewhereclause=yes name=lochorlab dbname="atlocal.lochorlab" )
 column=(type=char(10) updatewhereclause=yes name=pobcodpos dbname="vtpostal.pobcodpos" )
 column=(type=char(35) updatewhereclause=yes name=pobpoblac dbname="vtpostal.pobpoblac" )
 column=(type=char(35) updatewhereclause=yes name=prvdescri dbname="vtpostal.prvdescri" )
 column=(type=char(35) updatewhereclause=yes name=paidescri dbname="vtpostal.paidescri" )
 column=(type=decimal(4) update=yes updatewhereclause=yes name=locpencob dbname="atlocal.locpencob" )
 column=(type=long update=yes updatewhereclause=yes name=atlocal_ugeid dbname="atlocal.ugeid" )
 column=(type=char(10) updatewhereclause=yes name=rlelikunnr dbname="atlocal.rlelikunnr" )
 column=(type=char(16) updatewhereclause=yes name=rlelifnr dbname="atlocal.rlelifnr" )
 column=(type=char(55) updatewhereclause=yes name=atinterlocutor_intnombre dbname="atlocal.intnombre" )
 column=(type=long update=yes updatewhereclause=yes name=locdiacom dbname="atlocal.locdiacom" )
 column=(type=char(1) update=yes updatewhereclause=yes name=locdiare3 dbname="atlocal.locdiare3" initial="D" values="Lunes	L/Martes	M/Miercoles	X/Jueves	J/Viernes	V/Sabado	S/Domingo	D/ 	/" )
 column=(type=char(15) update=yes updatewhereclause=yes name=crmlocid dbname="atlocal.crmlocid" values="	S/	N" )
 column=(type=char(15) updatewhereclause=yes name=crmcpoid dbname="xtpoblacion.crmcpoid" )
 column=(type=char(15) updatewhereclause=yes name=crmpobid dbname="xtpoblacion.crmpobid" )
 column=(type=char(15) updatewhereclause=yes name=crmprvid dbname="xtpoblacion.crmprvid" )
 column=(type=char(12) update=yes updatewhereclause=yes name=locordesta dbname="atlocal.locordesta" )
 column=(type=char(1) update=yes updatewhereclause=yes name=loccompar dbname="atlocal.loccompar" values="	S/	N" )
 column=(type=long update=yes updatewhereclause=yes name=nodolocalid dbname="atlocal.nodolocalid" )
 column=(type=long update=yes updatewhereclause=yes name=locblocktramite dbname="atlocal.locblocktramite" )
 column=(type=long update=yes updatewhereclause=yes name=loceordserv dbname="atlocal.loceordserv" )
 column=(type=char(40) updatewhereclause=yes name=tiposalaaadd dbname="tiposalaaadd" )
 column=(type=char(36) update=yes updatewhereclause=yes name=crmpuntoventaid dbname="atlocal.crmpuntoventaid" )
 column=(type=char(200) update=yes updatewhereclause=yes name=deydeid dbname="atlocal.deydeid" )
 column=(type=decimal(8) update=yes updatewhereclause=yes name=loclatitud dbname="atlocal.loclatitud" )
 column=(type=decimal(8) update=yes updatewhereclause=yes name=loclongitud dbname="atlocal.loclongitud" )
 retrieve="  SELECT atlocal.locid,   
         atlocal.pobsid,   
         atlocal.viaid,   
         atlocal.tloid,   
         atlocal.tlocaadd,   
         atlocal.locnombre,   
         atlocal.locnomvia,   
         atlocal.locnumvia,   
         atlocal.locobsvia,   
         atlocal.loccoopla,   
         atlocal.locposgps,   
         atlocal.loctelef1,   
         atlocal.loctelef2,   
         atlocal.loctelefm,   
         atlocal.locteleff,   
         atlocal.locperiod,   
         atlocal.locdiacie,   
         atlocal.locdiare1,   
         atlocal.locdiare2,   
         atlocal.locgesmaq,   
         atlocal.epiid,   
         atlocal.locregime,   
         atlocal.loce_mail,   
         atlocal.locpagweb,   
         atlocal.loctablla,   
         atlocal.locindref,   
         atlocal.locfecref,   
         atlocal.locmesain,   
         atlocal.locmesaex,   
         atlocal.locpotenc,   
         atlocal.locmetbar,   
         atlocal.locbrzcaf,   
         atlocal.blqid,   
         atlocal.borid,   
         atlocal.feccrereg,   
         atlocal.codusucid,   
         atlocal.locsuperf,   
         atlocal.locnumayu,   
         atlocal.lochornov,   
         atlocal.lochorrec,   
         atlocal.lochordom,   
         atlocal.lochorsab,   
         atlocal.lochorlab,   
         vtpostal.pobcodpos,   
         vtpostal.pobpoblac,   
         vtpostal.prvdescri,   
         vtpostal.paidescri,   
         atlocal.locpencob,   
         atlocal.ugeid  ,
			gtlocal_interloc.rlelikunnr,
			gtlocal_interloc.rlelifnr,
			atinterlocutor.intnombre,
			atlocal.locdiacom	,
			atlocal.locdiare3,
			atlocal.crmlocid,
		   xtpoblacion.crmcpoid,
			xtpoblacion.crmpobid,
			xtpoblacion.crmprvid,
         atlocal.locordesta,
			atlocal.loccompar,
			atlocal.nodolocalid,
			atlocal.locblocktramite,
			atlocal.loceordserv,
			'                                        ' as tiposalaaadd,
			atlocal.crmpuntoventaid,
			atlocal.deydeid ,
			atlocal.loclatitud, 
			atlocal.loclongitud 
    FROM atlocal,   
         vtpostal,
			outer ( gtlocal_interloc, atinterlocutor ),
			xtpoblacion
   WHERE ( vtpostal.pobsid = atlocal.pobsid ) AND
         ( gtlocal_interloc.locid = atlocal.locid ) and  
			( gtlocal_interloc.rlefecfin is null) and
         ( gtlocal_interloc.tpcid = 14 ) and  
			( atinterlocutor.intid = gtlocal_interloc.intid ) AND
			( atlocal.pobsid = xtpoblacion.pobsid )
			" update="atlocal" updatewhere=0 updatekeyinplace=no )
groupbox(band=detail text="Domicilio"border="6" color="33554432" x="23" y="728" height="528" width="1655"  name=gb_3 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="1" text="Web" border="0" color="33554432" x="2080" y="384" height="60" width="233" html.valueishtml="0"  name=locpagweb_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="Teléfonos" border="0" color="33554432" x="2080" y="80" height="60" width="233" html.valueishtml="0"  name=loctelef1_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="Móvil" border="0" color="33554432" x="2158" y="232" height="60" width="155" html.valueishtml="0"  name=soctelefm_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="Fax" border="0" color="33554432" x="2158" y="308" height="60" width="155" html.valueishtml="0"  name=socteleff_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="e-Mail" border="0" color="33554432" x="2080" y="460" height="60" width="233" html.valueishtml="0"  name=loce_mail_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
bitmap(band=detail filename="images\email.jpg" x="2002" y="384" height="64" width="73" border="0"  name=p_3 visible="1" )
bitmap(band=detail filename="Images\telephone.jpg" x="2002" y="80" height="64" width="73" border="0"  name=p_2 visible="1" )
column(band=detail id=12 alignment="0" tabsequence=32766 border="2" color="0" x="2331" y="80" height="60" width="329" format="[general]" html.valueishtml="0"  name=loctelef1 visible="1" edit.limit=12 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="67108864" )
column(band=detail id=13 alignment="0" tabsequence=32766 border="2" color="0" x="2331" y="156" height="60" width="329" format="[general]" html.valueishtml="0"  name=loctelef2 visible="1" edit.limit=12 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="67108864" )
column(band=detail id=14 alignment="0" tabsequence=32766 border="2" color="0" x="2331" y="232" height="60" width="329" format="[general]" html.valueishtml="0"  name=loctelefm visible="1" edit.limit=12 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="67108864" )
column(band=detail id=15 alignment="0" tabsequence=32766 border="2" color="0" x="2331" y="308" height="60" width="329" format="[general]" html.valueishtml="0"  name=locteleff visible="1" edit.limit=12 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="67108864" )
column(band=detail id=24 alignment="0" tabsequence=32766 border="2" color="0" x="2331" y="384" height="60" width="763" format="[general]" html.valueishtml="0"  name=locpagweb visible="1" edit.limit=35 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="67108864" )
column(band=detail id=23 alignment="0" tabsequence=32766 border="2" color="0" x="2331" y="460" height="60" width="763" format="[general]" html.valueishtml="0"  name=loce_mail visible="1" edit.limit=35 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="67108864" )
groupbox(band=detail text=" Días y Horarios Recaudación"border="6" color="33554432" x="1714" y="728" height="532" width="1408"  name=gb_6 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="1" text="Obs. Vía" border="0" color="0" x="37" y="948" height="60" width="215" html.valueishtml="0"  name=locobsvia_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
bitmap(band=detail filename="Poblacion.bmp" x="183" y="1024" height="64" width="73" border="0"  name=p_1  tag="Setpoblacion" visible="1" )
column(band=detail id=44 alignment="0" tabsequence=32766 border="0" color="0" x="270" y="1024" height="60" width="233" format="[general]" html.valueishtml="0"  name=pobcodpos visible="1"  slideleft=yes edit.limit=0 edit.case=any edit.autoselect=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="Número" border="0" color="33554432" x="37" y="872" height="60" width="215" html.valueishtml="0"  name=locnumvia_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="1" text="Dirección" border="0" color="16711680" x="37" y="796" height="60" width="215" html.valueishtml="0"  name=viaid_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=3 alignment="0" tabsequence=32766 border="2" color="0" x="270" y="796" height="60" width="302" format="[general]" html.valueishtml="0"  name=viaid visible="1" dddw.name=d_dddw_via dddw.displaycolumn=viadescri dddw.datacolumn=viaid dddw.percentwidth=150 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=no dddw.case=any dddw.vscrollbar=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=8 alignment="0" tabsequence=32766 border="2" color="0" x="270" y="872" height="60" width="265" format="[general]" html.valueishtml="0"  name=locnumvia visible="1" edit.limit=8 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
bitmap(band=detail filename="images\calendar.jpg" x="1751" y="796" height="128" width="146" border="0"  name=p_5 pointer="" visible="1" )
text(band=detail alignment="1" text="1er. Día" border="0" color="16711680" x="1906" y="800" height="60" width="169" html.valueishtml="0"  name=locdiare1_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=2 alignment="1" tabsequence=32766 border="0" color="12632256" x="1289" y="1108" height="60" width="146" format="[general]" html.valueishtml="0"  name=pobsid visible="1~t0" edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="1090519039" )
bitmap(band=detail filename="Imatges\Domic16.bmp" x="1390" y="1104" height="64" width="78" border="0"  name=p_domcom  tag="Setpoblacion" pointer="" visible="1~t0" )
column(band=detail id=46 alignment="0" tabsequence=32766 border="0" color="0" x="270" y="1100" height="60" width="965" format="[general]" html.valueishtml="0"  name=prvdescri visible="1" edit.limit=0 edit.case=any edit.autoselect=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=45 alignment="0" tabsequence=32766 border="0" color="0" x="521" y="1024" height="60" width="965" format="[general]" html.valueishtml="0"  name=pobpoblac visible="1"  slideleft=yes edit.limit=0 edit.case=any edit.autoselect=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="Sábados" border="0" color="0" x="2473" y="1104" height="60" width="242" html.valueishtml="0"  name=lochorsab_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="Periodo" border="0" color="16711680" x="2473" y="800" height="60" width="242" html.valueishtml="0"  name=locperiod_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="2º Día" border="0" color="0" x="1911" y="876" height="60" width="165" html.valueishtml="0"  name=locdiare2_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=41 alignment="2" tabsequence=60 border="2" color="0" x="2094" y="1180" height="60" width="338" format="xx:xx xx:xx" html.valueishtml="0"  name=lochordom visible="1" editmask.mask="xx:xx xx:xx" editmask.focusrectangle=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="1090519039" )
text(band=detail alignment="1" text="Domingos" border="0" color="0" x="1751" y="1180" height="60" width="325" html.valueishtml="0"  name=lochordom_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="Recaudación" border="0" color="0" x="1751" y="1104" height="60" width="325" html.valueishtml="0"  name=lochorrec_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=43 alignment="2" tabsequence=20 border="2" color="0" x="2094" y="1028" height="60" width="338" format="xx:xx xx:xx" html.valueishtml="0"  name=lochorlab visible="1" editmask.mask="xx:xx xx:xx" editmask.focusrectangle=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="1090519039" )
text(band=detail alignment="1" text="No visitar" border="0" color="0" x="2473" y="1028" height="60" width="242" html.valueishtml="0"  name=lochornov_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=39 alignment="2" tabsequence=30 border="2" color="0" x="2738" y="1028" height="60" width="338" format="xx:xx xx:xx" html.valueishtml="0"  name=lochornov visible="1" editmask.mask="xx:xx xx:xx" editmask.focusrectangle=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="1090519039" )
column(band=detail id=42 alignment="2" tabsequence=50 border="2" color="0" x="2738" y="1104" height="60" width="338" format="xx:xx xx:xx" html.valueishtml="0"  name=lochorsab visible="1" editmask.mask="xx:xx xx:xx" editmask.focusrectangle=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="1090519039" )
column(band=detail id=40 alignment="2" tabsequence=40 border="2" color="0" x="2094" y="1104" height="60" width="338" format="xx:xx xx:xx" html.valueishtml="0"  name=lochorrec visible="1" editmask.mask="xx:xx xx:xx" editmask.focusrectangle=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="1090519039" )
text(band=detail alignment="1" text="Normal" border="0" color="0" x="1751" y="1028" height="60" width="325" html.valueishtml="0"  name=lochorlab_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=53 alignment="0" tabsequence=10 border="2" color="0" x="2738" y="952" height="60" width="338" format="0.00E+00" html.valueishtml="0"  name=locdiacom visible="1" editmask.mask="##" editmask.spinrange="0~~31" editmask.focusrectangle=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="1090519039" )
text(band=detail alignment="1" text="3º Día" border="0" color="0" x="1751" y="952" height="52" width="325" html.valueishtml="0"  name=t_5 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="Día Cierre" border="0" color="16711680" x="2473" y="876" height="60" width="242" html.valueishtml="0"  name=locdiacie_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="Comercial" border="0" color="0" x="2473" y="952" height="52" width="242" html.valueishtml="0"  name=locdiacom_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=7 alignment="0" tabsequence=32766 border="2" color="0" x="590" y="796" height="60" width="1051" format="[general]" html.valueishtml="0"  name=locnomvia visible="1" edit.limit=35 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=18 alignment="0" tabsequence=32766 border="2" color="0" x="2094" y="800" height="60" width="338" format="[general]" html.valueishtml="0"  name=locdiare1 visible="1" ddlb.limit=0 ddlb.allowedit=no ddlb.case=any  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="67108864" )
column(band=detail id=19 alignment="0" tabsequence=32766 border="2" color="0" x="2094" y="876" height="60" width="338" format="[general]" html.valueishtml="0"  name=locdiare2 visible="1" ddlb.limit=0 ddlb.allowedit=no ddlb.case=any ddlb.nilisnull=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="67108864" )
column(band=detail id=54 alignment="0" tabsequence=32766 border="2" color="0" x="2094" y="952" height="60" width="338" format="[general]" html.valueishtml="0"  name=locdiare3 visible="1" ddlb.limit=0 ddlb.allowedit=no ddlb.case=any ddlb.nilisnull=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="67108864" )
column(band=detail id=16 alignment="1" tabsequence=32766 border="2" color="0" x="2738" y="800" height="60" width="178" format="[general]" html.valueishtml="0"  name=locperiod visible="1" edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="67108864" )
column(band=detail id=17 alignment="0" tabsequence=32766 border="2" color="0" x="2738" y="876" height="60" width="338" format="[general]" html.valueishtml="0"  name=locdiacie visible="1" ddlb.limit=0 ddlb.allowedit=no ddlb.case=any ddlb.vscrollbar=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="67108864" )
column(band=detail id=9 alignment="0" tabsequence=32766 border="2" color="0" x="270" y="948" height="60" width="1371" format="[general]" html.valueishtml="0"  name=locobsvia visible="1" edit.limit=20 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="134217739" )
groupbox(band=detail text="Contacto"border="6" color="33554432" x="1966" y="4" height="712" width="1157"  name=gb_2 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
groupbox(band=detail text="Datos Generales"border="6" color="33554432" x="27" y="4" height="712" width="1902"  name=gb_1 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="1" text="Código SAP Tit. Fact." border="0" color="33554432" x="1047" y="64" height="60" width="485" html.valueishtml="0"  name=t_2 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="1" text="Refer. GESMAQ" border="0" color="0" x="1083" y="292" height="60" width="448" html.valueishtml="0"  name=locgesmaq_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="Nº de Ayuntamiento" border="0" color="0" x="1083" y="216" height="60" width="448" html.valueishtml="0"  name=atlocal_locnumayu_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="0" text="Nº Acreedor " border="0" color="33554432" x="1083" y="140" height="60" width="448" html.valueishtml="0"  name=t_4 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=50 alignment="0" tabsequence=32766 border="2" color="0" x="1550" y="64" height="60" width="366" format="[general]" html.valueishtml="0"  name=rlelikunnr visible="1" edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=51 alignment="0" tabsequence=32766 border="2" color="0" x="1550" y="140" height="60" width="366" format="[general]" html.valueishtml="0"  name=rlelifnr visible="1" edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=1 alignment="1" tabsequence=32766 border="2" color="0" x="288" y="64" height="60" width="197" format="[general]" html.valueishtml="0"  name=locid visible="1" edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="Orden estadística" border="0" color="0" x="1083" y="368" height="52" width="448" html.valueishtml="0"  name=locordesta_t  tag="" visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=38 alignment="0" tabsequence=32766 border="2" color="0" x="1550" y="216" height="60" width="366" format="[general]" html.valueishtml="0"  name=atlocal_locnumayu visible="1" edit.limit=10 edit.case=any edit.autoselect=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="134217739" )
column(band=detail id=20 alignment="0" tabsequence=32766 border="2" color="0" x="1550" y="292" height="60" width="366" format="[general]" html.valueishtml="0"  name=locgesmaq visible="1"  hidesnaked=1 edit.limit=8 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="134217739" )
column(band=detail id=59 alignment="0" tabsequence=32766 border="2" color="0" x="1550" y="368" height="60" width="366" format="[general]" html.valueishtml="0"  name=locordesta visible="1" edit.limit=12 edit.case=upper edit.focusrectangle=no edit.autoselect=no edit.nilisnull=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="134217739" )
column(band=detail id=22 alignment="0" tabsequence=32766 border="0" color="0" x="288" y="448" height="208" width="773" format="[general]" html.valueishtml="0"  name=locregime visible="1" radiobuttons.columns=2 radiobuttons.scale=no radiobuttons.threed=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=52 alignment="0" tabsequence=32766 border="2" color="0" x="288" y="368" height="60" width="773" format="[general]" html.valueishtml="0"  name=atinterlocutor_intnombre visible="1" edit.limit=0 edit.case=any edit.autoselect=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="134217739" )
text(band=detail alignment="0" text="Unidad de Gestión" border="0" color="0" x="1088" y="436" height="52" width="448" html.valueishtml="0"  name=t_1  tag="" visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=49 alignment="0" tabsequence=32766 border="2" color="0" x="1088" y="496" height="60" width="827" format="[general]" html.valueishtml="0"  name=atlocal_ugeid visible="1"  hidesnaked=1 dddw.name=d_dddw_unidadgestion dddw.displaycolumn=ugedescri dddw.datacolumn=ugeid dddw.percentwidth=0 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=no dddw.case=any dddw.vscrollbar=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=61 alignment="0" tabsequence=70 border="2" color="0" x="1321" y="580" height="60" width="594" format="[general]" html.valueishtml="0"  name=nodolocalid visible="1" edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="0" text="Nodo BGT" border="0" color="33554432" x="1088" y="584" height="52" width="215" html.valueishtml="0"  name=t_7 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="134217739" )
text(band=detail alignment="0" text="Local Compartido" border="0" color="33554432" x="1088" y="652" height="52" width="448" html.valueishtml="0"  name=t_6 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=60 alignment="0" tabsequence=32766 border="2" color="0" x="1550" y="652" height="56" width="69" format="[general]" html.valueishtml="0"  name=loccompar visible="1" checkbox.text="" checkbox.on="S" checkbox.off="N" checkbox.lefttext=yes checkbox.scale=no checkbox.threed=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=6 alignment="0" tabsequence=32766 border="2" color="0" x="288" y="140" height="60" width="773" format="[general]" html.valueishtml="0"  name=locnombre visible="1"  hidesnaked=1 edit.limit=35 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=4 alignment="0" tabsequence=32766 border="2" color="0" x="288" y="216" height="60" width="773" format="[general]" html.valueishtml="0"  name=tloid visible="1" dddw.name=d_dddw_tipolocal dddw.displaycolumn=tlodescri dddw.datacolumn=tloid dddw.percentwidth=100 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=no dddw.case=any dddw.vscrollbar=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=64 alignment="0" tabsequence=80 border="2" color="0" x="288" y="292" height="60" width="773" format="[general]" html.valueishtml="0"  name=tiposalaaadd visible="1" edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="67108864" )
text(band=detail alignment="1" text="Tipo AADD" border="0" color="16711680" x="32" y="292" height="52" width="238" html.valueishtml="0"  name=t_8 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="79741120" )
text(band=detail alignment="1" text="Tit. Fact." border="0" color="0" x="32" y="368" height="60" width="238" html.valueishtml="0"  name=t_3 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="79741120" )
text(band=detail alignment="1" text="Régimen " border="0" color="33554432" x="32" y="448" height="60" width="238" html.valueishtml="0"  name=locregime_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="1" text="Tipo" border="0" color="16711680" x="32" y="216" height="60" width="238" html.valueishtml="0"  name=tloid_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="79741120" )
text(band=detail alignment="1" text="Nombre" border="0" color="16711680" x="32" y="140" height="60" width="238" html.valueishtml="0"  name=locnombre_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="ID Local" border="0" color="0" x="32" y="64" height="60" width="238" html.valueishtml="0"  name=locid_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=65 alignment="0" tabsequence=32766 border="0" color="0" x="69" y="1380" height="52" width="471" format="[general]" html.valueishtml="0"  name=crmpuntoventaid visible="0" edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="67108864" )
column(band=detail id=66 alignment="0" tabsequence=32766 border="0" color="0" x="571" y="1368" height="52" width="923" format="[general]" html.valueishtml="0"  name=deydeid visible="0" edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="67108864" )
column(band=detail id=68 alignment="0" tabsequence=100 border="2" color="0" x="1984" y="1396" height="52" width="485" format="[general]" html.valueishtml="0"  name=loclongitud visible="0" edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="67108864" )
column(band=detail id=67 alignment="0" tabsequence=90 border="2" color="0" x="1431" y="1392" height="52" width="480" format="[general]" html.valueishtml="0"  name=loclatitud visible="0" edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="67108864" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" encodeselflinkargs="1" netscapelayers="0" pagingmethod=0 generatedddwframes="1" )
xhtmlgen() cssgen(sessionspecific="0" )
xmlgen(inline="0" )
xsltgen()
jsgen()
export.xml(headgroups="1" includewhitespace="0" metadatatype=0 savemetadata=0 )
import.xml()
export.pdf(method=0 distill.custompostscript="0" xslfop.print="0" )
export.xhtml()
 
release 10.5;
datawindow(units=0 timer_interval=0 color=80269524 processing=0 HTMLDW=no print.printername="" print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.canusedefaultprinter=yes print.prompt=no print.buttons=no print.preview.buttons=no print.cliptext=no print.overrideprintjob=no print.collate=yes print.preview.outline=yes hidegrayline=no )
header(height=0 color="536870912" )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=1352 color="536870912" )
table(column=(type=long update=yes updatewhereclause=yes key=yes name=tmoid dbname="atmodelo.tmoid" )
 column=(type=long update=yes updatewhereclause=yes name=tjuid dbname="atmodelo.tjuid" )
 column=(type=char(7) update=yes updatewhereclause=yes name=tmomatnr dbname="atmodelo.tmomatnr" )
 column=(type=char(10) update=yes updatewhereclause=yes name=tmoserie dbname="atmodelo.tmoserie" )
 column=(type=char(35) update=yes updatewhereclause=yes name=tmodescri dbname="atmodelo.tmodescri" )
 column=(type=long update=yes updatewhereclause=yes name=fypidfab dbname="atmodelo.fypidfab" )
 column=(type=decimal(4) update=yes updatewhereclause=yes name=tmocarini dbname="atmodelo.tmocarini" )
 column=(type=long update=yes updatewhereclause=yes name=monid dbname="atmodelo.monid" )
 column=(type=decimal(4) update=yes updatewhereclause=yes name=tmoporini dbname="atmodelo.tmoporini" )
 column=(type=char(50) update=yes updatewhereclause=yes name=tmofotmod dbname="atmodelo.tmofotmod" )
 column=(type=datetime update=yes updatewhereclause=yes name=feccrereg dbname="atmodelo.feccrereg" )
 column=(type=char(10) update=yes updatewhereclause=yes name=codusucid dbname="atmodelo.codusucid" )
 column=(type=long update=yes updatewhereclause=yes name=tmaid dbname="atmodelo.tmaid" )
 column=(type=char(15) update=yes updatewhereclause=yes name=crmtmoid dbname="atmodelo.crmtmoid" )
 column=(type=char(1) updatewhereclause=yes name=tmatipmaq dbname="xttipomaquina.tmatipmaq" )
 column=(type=char(50) updatewhereclause=yes name=c_bitmap dbname="atmodelo.c_bitmap" )
 column=(type=char(35) updatewhereclause=yes name=tmadescri dbname="xttipomaquina.tmadescri" )
 retrieve="  SELECT atmodelo.tmoid,   
         atmodelo.tjuid,   
         atmodelo.tmomatnr,   
         atmodelo.tmoserie,   
         atmodelo.tmodescri,   
         atmodelo.fypidfab,   
         atmodelo.tmocarini,   
         atmodelo.monid,   
         atmodelo.tmoporini,   
         atmodelo.tmofotmod,  
         atmodelo.feccrereg,   
         atmodelo.codusucid,   
         atmodelo.tmaid,
			atmodelo.crmtmoid,
         xttipomaquina.tmatipmaq,   
         atmodelo.tmofotmod as c_bitmap  ,
			xttipomaquina.tmadescri
    FROM atmodelo,   
         xttipomaquina  
   WHERE ( xttipomaquina.tmaid = atmodelo.tmaid )    
" update="atmodelo" updatewhere=0 updatekeyinplace=yes )
groupbox(band=detail text="Datos Descriptivos"border="5" color="0" x="32" y="12" height="260" width="2318"  name=gb_1 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="1" text="Descripción" border="0" color="16711680" x="960" y="88" height="52" width="311" html.valueishtml="0"  name=tmodescri_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="Fabricante" border="0" color="0" x="960" y="172" height="52" width="311" html.valueishtml="0"  name=fypidfab_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="Tipo Máquina" border="0" color="16711680" x="82" y="172" height="52" width="311" html.valueishtml="0"  name=tmaid_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="Código SAP" border="0" color="16711680" x="82" y="88" height="52" width="311" html.valueishtml="0"  name=tmomatnr_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=15 alignment="0" tabsequence=32766 border="2" color="0" x="2821" y="400" height="52" width="178" format="[general]" html.valueishtml="0"  name=tmatipmaq visible="1~t0" edit.limit=0 edit.case=any edit.autoselect=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="1090519039" )
text(band=detail alignment="1" text="Serie" border="0" color="0" x="2496" y="328" height="52" width="311" html.valueishtml="0"  name=tmoserie_t visible="0"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=4 alignment="0" tabsequence=30 border="2" color="0" x="2825" y="328" height="52" width="521" format="[general]" html.valueishtml="0"  name=tmoserie visible="0" editmask.mask="XXXX" editmask.focusrectangle=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="1090519039" )
groupbox(band=detail text="Standard del modelo"border="5" color="0" x="37" y="300" height="996" width="2318"  name=gb_2 visible="1"  resizeable=1  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="1" text="Tipo Juego" border="0" color="0" x="105" y="368" height="52" width="311" html.valueishtml="0"  name=tjuid_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=2 alignment="0" tabsequence=20 border="2" color="0" x="434" y="368" height="52" width="521" format="[general]" html.valueishtml="0"  name=tjuid visible="1" dddw.name=d_dddw_juego dddw.displaycolumn=tjudescri dddw.datacolumn=tjuid dddw.percentwidth=0 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=no dddw.case=any dddw.hscrollbar=yes dddw.vscrollbar=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="67108864" )
column(band=detail id=8 alignment="0" tabsequence=50 border="2" color="0" x="782" y="460" height="52" width="338" format="[general]" html.valueishtml="0"  name=monid visible="1" dddw.name=d_dddw_moneda dddw.displaycolumn=mondescri dddw.datacolumn=monid dddw.percentwidth=150 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=no dddw.case=any dddw.hscrollbar=yes dddw.vscrollbar=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="1090519039" )
text(band=detail alignment="1" text="Carga Teórica" border="0" color="0" x="105" y="460" height="52" width="311" html.valueishtml="0"  name=tmocarini_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="Teórico Premios" border="0" color="0" x="1312" y="460" height="52" width="352" html.valueishtml="0"  name=tmoporini_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=9 alignment="1" tabsequence=60 border="2" color="0" x="1682" y="460" height="52" width="238" format="#,##0.00" html.valueishtml="0"  name=tmoporini visible="1" editmask.mask="###.00" editmask.focusrectangle=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="1090519039" )
column(band=detail id=10 alignment="0" tabsequence=70 border="2" color="0" x="439" y="552" height="52" width="1399" format="[general]" html.valueishtml="0"  name=tmofotmod visible="1" edit.limit=50 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="1090519039" )
text(band=detail alignment="1" text="Foto" border="0" color="0" x="105" y="552" height="52" width="311" html.valueishtml="0"  name=tmofotmod_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="2" text="···" border="2" color="0" x="1856" y="552" height="60" width="64" html.valueishtml="0"  name=t_2  tag="OpenBMPModelos" visible="1"  hidesnaked=1  font.face="Tahoma" font.height="-8" font.weight="700"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=16 alignment="0" tabsequence=32766 border="2" color="0" x="439" y="636" height="568" width="1033" format="[general]" html.valueishtml="0"  name=c_bitmap visible="1" bitmapname=yes edit.limit=0 edit.case=any edit.autoselect=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="1090519039" )
column(band=detail id=14 alignment="0" tabsequence=32766 border="0" color="0" x="2455" y="44" height="52" width="347" format="[general]" html.valueishtml="0"  name=crmtmoid visible="1" edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="1090519039" )
column(band=detail id=3 alignment="0" tabsequence=32766 border="2" color="0" x="411" y="88" height="52" width="521" format="[general]" html.valueishtml="0"  name=tmomatnr visible="1" edit.limit=18 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="67108864" )
column(band=detail id=5 alignment="0" tabsequence=32766 border="2" color="0" x="1289" y="88" height="52" width="987" format="[general]" html.valueishtml="0"  name=tmodescri visible="1" edit.limit=35 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes edit.autovscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="67108864" )
column(band=detail id=6 alignment="0" tabsequence=32766 border="2" color="0" x="1289" y="172" height="52" width="987" format="[general]" html.valueishtml="0"  name=fypidfab visible="1" dddw.name=d_dddw_fabriprovee dddw.displaycolumn=fypnombre dddw.datacolumn=fypid dddw.percentwidth=0 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=no dddw.case=any dddw.hscrollbar=yes dddw.vscrollbar=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="67108864" )
column(band=detail id=7 alignment="1" tabsequence=40 border="2" color="0" x="434" y="460" height="52" width="329" format="#,##0.00" html.valueishtml="0"  name=tmocarini visible="1" editmask.mask="##,###,###.00" editmask.focusrectangle=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="1090519039" )
column(band=detail id=13 alignment="0" tabsequence=10 border="2" color="0" x="411" y="172" height="52" width="521" format="[general]" html.valueishtml="0"  name=tmaid visible="1" dddw.name=d_dddw_tmaquina dddw.displaycolumn=tmadescri dddw.datacolumn=tmaid dddw.percentwidth=0 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=no dddw.case=any dddw.hscrollbar=yes dddw.vscrollbar=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="1090519039" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" encodeselflinkargs="1" netscapelayers="0" pagingmethod=0 generatedddwframes="1" )
xhtmlgen() cssgen(sessionspecific="0" )
xmlgen(inline="0" )
xsltgen()
jsgen()
export.xml(headgroups="1" includewhitespace="0" metadatatype=0 savemetadata=0 )
import.xml()
export.pdf(method=0 distill.custompostscript="0" xslfop.print="0" )
export.xhtml()
 
release 10.5;
datawindow(units=0 timer_interval=0 color=79741120 processing=0 HTMLDW=no print.printername="" print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.canusedefaultprinter=yes print.prompt=no print.buttons=no print.preview.buttons=no print.cliptext=no print.overrideprintjob=no print.collate=yes print.preview.outline=yes hidegrayline=no )
header(height=0 color="536870912" )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=1400 color="536870912" height.autosize=yes )
table(column=(type=long update=yes updatewhereclause=yes key=yes name=intid dbname="atinterlocutor.intid" )
 column=(type=long update=yes updatewhereclause=yes name=pobsid dbname="atinterlocutor.pobsid" )
 column=(type=char(55) update=yes updatewhereclause=yes name=intnombre dbname="atinterlocutor.intnombre" )
 column=(type=char(16) update=yes updatewhereclause=yes name=intdninif dbname="atinterlocutor.intdninif" )
 column=(type=long update=yes updatewhereclause=yes name=viaid dbname="atinterlocutor.viaid" )
 column=(type=char(35) update=yes updatewhereclause=yes name=intnomvia dbname="atinterlocutor.intnomvia" )
 column=(type=char(8) update=yes updatewhereclause=yes name=intnumvia dbname="atinterlocutor.intnumvia" )
 column=(type=char(2) update=yes updatewhereclause=yes name=intescvia dbname="atinterlocutor.intescvia" )
 column=(type=char(2) update=yes updatewhereclause=yes name=intpisvia dbname="atinterlocutor.intpisvia" )
 column=(type=char(2) update=yes updatewhereclause=yes name=intpuevia dbname="atinterlocutor.intpuevia" )
 column=(type=char(12) update=yes updatewhereclause=yes name=inttelef1 dbname="atinterlocutor.inttelef1" )
 column=(type=char(12) update=yes updatewhereclause=yes name=inttelef2 dbname="atinterlocutor.inttelef2" )
 column=(type=char(12) update=yes updatewhereclause=yes name=inttelefm dbname="atinterlocutor.inttelefm" )
 column=(type=char(12) update=yes updatewhereclause=yes name=intteleff dbname="atinterlocutor.intteleff" )
 column=(type=char(100) update=yes updatewhereclause=yes name=inte_mail dbname="atinterlocutor.inte_mail" )
 column=(type=char(35) update=yes updatewhereclause=yes name=intpagweb dbname="atinterlocutor.intpagweb" )
 column=(type=date update=yes updatewhereclause=yes name=intfeccum dbname="atinterlocutor.intfeccum" )
 column=(type=date updatewhereclause=yes name=intfecani dbname="atinterlocutor.intfecani" )
 column=(type=long updatewhereclause=yes name=intnumhij dbname="atinterlocutor.intnumhij" )
 column=(type=char(35) updatewhereclause=yes name=intnomcon dbname="atinterlocutor.intnomcon" )
 column=(type=char(5) update=yes updatewhereclause=yes name=inttratam dbname="atinterlocutor.inttratam" values="Sr.	SR/Sra.	SRA/Don	DON/" )
 column=(type=long update=yes updatewhereclause=yes name=intidioma dbname="atinterlocutor.intidioma" initial="1" values="Castellano	1/Catalán	2/Euskera	3/Gallego	4/Valenciano	5/" )
 column=(type=datetime update=yes updatewhereclause=yes name=feccrereg dbname="atinterlocutor.feccrereg" )
 column=(type=char(10) update=yes updatewhereclause=yes name=codusucid dbname="atinterlocutor.codusucid" )
 column=(type=char(8) update=yes updatewhereclause=yes name=intsaprh dbname="atinterlocutor.intsaprh" )
 column=(type=char(1) update=yes updatewhereclause=yes name=intescli dbname="atinterlocutor.intescli" initial="N" values="	S/	N" )
 column=(type=char(1) update=yes updatewhereclause=yes name=intester dbname="atinterlocutor.intester" initial="N" values="	S/	N" )
 column=(type=char(1) update=yes updatewhereclause=yes name=intespart dbname="atinterlocutor.intespart" values="	S/	N" )
 column=(type=char(10) updatewhereclause=yes name=pobcodpos dbname="vtpostal.pobcodpos" )
 column=(type=char(35) updatewhereclause=yes name=pobdescri dbname="vtpostal.pobpoblac" )
 column=(type=char(35) updatewhereclause=yes name=prvdescri dbname="vtpostal.prvdescri" )
 column=(type=long updatewhereclause=yes name=prvpretel dbname="vtpostal.prvpretel" )
 column=(type=char(35) updatewhereclause=yes name=paidescri dbname="vtpostal.paidescri" )
 column=(type=char(35) updatewhereclause=yes name=coadescri dbname="vtpostal.coadescri" )
 column=(type=char(8) update=yes updatewhereclause=yes name=intsapter dbname="atinterlocutor.intsapter" )
 column=(type=char(8) update=yes updatewhereclause=yes name=intsapacre dbname="atinterlocutor.intsapacre" )
 column=(type=char(2) update=yes updatewhereclause=yes name=intentlegal dbname="atinterlocutor.intentlegal" values="Comunidad de Bienes	CB/Persona Física	PF/Persona Jurídica	PJ/Sociedad Civil	SC/" )
 column=(type=long updatewhereclause=yes name=atinterlocutor_edad dbname="edad" )
 column=(type=long update=yes updatewhereclause=yes name=intnacionalidad dbname="atinterlocutor.intnacionalidad" )
 column=(type=datetime update=yes updatewhereclause=yes name=intvtonicnif dbname="atinterlocutor.intvtonicnif" )
 column=(type=char(15) update=yes updatewhereclause=yes name=crmintid dbname="atinterlocutor.crmintid" )
 column=(type=datetime update=yes updatewhereclause=yes name=intvtonicnif dbname="atinterlocutor.intvtonicnif" )
 column=(type=long update=yes updatewhereclause=yes name=codempleadosap dbname="atinterlocutor.codempleadosap" )
 column=(type=char(50) updatewhereclause=yes name=guidcrm dbname="atinterlocutor.guidcrm" )
 column=(type=char(50) update=yes updatewhereclause=yes name=formalegal dbname="atinterlocutor.formalegal" )
 retrieve="  SELECT atinterlocutor.intid,   
         atinterlocutor.pobsid,   
         atinterlocutor.intnombre,   
         atinterlocutor.intdninif,   
         atinterlocutor.viaid,   
         atinterlocutor.intnomvia,   
         atinterlocutor.intnumvia,   
         atinterlocutor.intescvia,   
         atinterlocutor.intpisvia,   
         atinterlocutor.intpuevia,   
         atinterlocutor.inttelef1,   
         atinterlocutor.inttelef2,   
         atinterlocutor.inttelefm,   
         atinterlocutor.intteleff,   
         atinterlocutor.inte_mail,   
         atinterlocutor.intpagweb,   
         atinterlocutor.intfeccum,   
         atinterlocutor.intfecani,   
         atinterlocutor.intnumhij,   
         atinterlocutor.intnomcon,   
         atinterlocutor.inttratam,   
         atinterlocutor.intidioma, 
         atinterlocutor.feccrereg,   
         atinterlocutor.codusucid,   
         atinterlocutor.intsaprh,   
         atinterlocutor.intescli,   
         atinterlocutor.intester,   
         atinterlocutor.intespart,   
         vtpostal.pobcodpos,   
         vtpostal.pobpoblac,   
         vtpostal.prvdescri,   
         vtpostal.prvpretel,   
         vtpostal.paidescri,   
         vtpostal.coadescri,   
         atinterlocutor.intsapter,   
			atinterlocutor.intsapacre,
         atinterlocutor.intentlegal,
         1 as edad  ,
			atinterlocutor.intnacionalidad,
         atinterlocutor.intvtonicnif,
			crmintid,
			intvtonicnif,
         atinterlocutor.codempleadosap,
			atinterlocutor.guidcrm,
			atinterlocutor.formalegal
    FROM atinterlocutor,   
          OUTER vtpostal  
   WHERE ( atinterlocutor.pobsid  = vtpostal.pobsid)    
" update="atinterlocutor" updatewhere=0 updatekeyinplace=yes )
bitmap(band=detail filename="Imatges\SAP16.bmp" x="1541" y="92" height="60" width="73" border="0"  name=p_4 visible="1" )
text(band=detail alignment="1" text="Código SAP RR.HH." border="0" color="33554432" x="1618" y="92" height="60" width="448" html.valueishtml="0"  name=intsaprh_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="Código Deudor SAP" border="0" color="33554432" x="1435" y="168" height="60" width="631" html.valueishtml="0"  name=intsapter_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="Código Acreedor SAP" border="0" color="33554432" x="1435" y="244" height="60" width="631" html.valueishtml="0"  name=t_1 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=25 alignment="0" tabsequence=32766 border="2" color="33554432" x="2085" y="92" height="60" width="320" format="[general]" html.valueishtml="0"  name=intsaprh visible="1" edit.limit=0 edit.case=any edit.autoselect=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=35 alignment="0" tabsequence=32766 border="2" color="33554432" x="2085" y="168" height="60" width="320" format="[general]" html.valueishtml="0"  name=intsapter visible="1" edit.limit=8 edit.case=any edit.autoselect=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=36 alignment="0" tabsequence=32766 border="2" color="33554432" x="2085" y="244" height="60" width="320" format="[general]" html.valueishtml="0"  name=intsapacre visible="1" edit.limit=0 edit.case=any edit.autoselect=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=43 alignment="0" tabsequence=32766 border="2" color="0" x="2085" y="320" height="60" width="320" format="[general]" html.valueishtml="0"  name=codempleadosap visible="1" edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=no edit.nilisnull=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="1" text="Código Empleado SAP" border="0" color="33554432" x="1435" y="324" height="52" width="631" html.valueishtml="0"  name=t_5 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="Nombre" border="0" color="16711680" x="59" y="76" height="60" width="251" html.valueishtml="0"  name=intnombre_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="NIF / CIF" border="0" color="33554432" x="59" y="152" height="60" width="251" html.valueishtml="0"  name=intdninif_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=4 alignment="0" tabsequence=32766 border="2" color="33554432" x="329" y="152" height="60" width="343" format="[general]" html.valueishtml="0"  name=intdninif visible="1" edit.limit=16 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=40 alignment="0" tabsequence=32766 border="2" color="33554432" x="951" y="152" height="60" width="334" format="[shortdate] [time]" html.valueishtml="0"  name=intvtonicnif visible="1" editmask.mask="dd/mm/yyyy" editmask.focusrectangle=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="1" text="Vto" border="0" color="33554432" x="686" y="152" height="60" width="251" html.valueishtml="0"  name=t_3 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
groupbox(band=detail text="Datos Personales"border="6" color="33554432" x="32" y="944" height="444" width="2633"  name=gb_1 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="1" text="Nacionalidad" border="0" color="33554432" x="59" y="1160" height="60" width="370" html.valueishtml="0"  name=t_2 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="Tratamiento" border="0" color="33554432" x="59" y="1088" height="60" width="370" html.valueishtml="0"  name=inttratam_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="Idioma" border="0" color="33554432" x="59" y="1016" height="60" width="370" html.valueishtml="0"  name=intidioma_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=21 alignment="0" tabsequence=32766 border="2" color="33554432" x="448" y="1088" height="60" width="375" format="[general]" html.valueishtml="0"  name=inttratam visible="1" ddlb.limit=0 ddlb.allowedit=no ddlb.case=any  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=39 alignment="0" tabsequence=32766 border="2" color="33554432" x="448" y="1160" height="60" width="699" format="[general]" html.valueishtml="0"  name=intnacionalidad visible="1" dddw.name=d_dddw_pais dddw.displaycolumn=paidescri dddw.datacolumn=paiid dddw.percentwidth=0 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=no dddw.case=any dddw.vscrollbar=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=22 alignment="0" tabsequence=32766 border="2" color="33554432" x="448" y="1016" height="60" width="375" format="[general]" html.valueishtml="0"  name=intidioma visible="1" ddlb.limit=0 ddlb.allowedit=no ddlb.case=any ddlb.nilisnull=yes ddlb.vscrollbar=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="1" text="Fec. Nacimiento" border="0" color="33554432" x="59" y="1232" height="60" width="370" html.valueishtml="0"  name=intfeccum_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=17 alignment="0" tabsequence=32766 border="2" color="33554432" x="448" y="1232" height="60" width="334" format="dd/mm/yyyy" html.valueishtml="0"  name=intfeccum visible="1" editmask.mask="dd/mm/yyyy" editmask.focusrectangle=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="1" text="Edad" border="0" color="0" x="293" y="1304" height="60" width="137" html.valueishtml="0"  name=atinterlocutor_edad_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=38 alignment="0" tabsequence=32766 border="2" color="33554432" x="448" y="1304" height="60" width="87" format="[general]" html.valueishtml="0"  name=atinterlocutor_edad visible="1" edit.limit=0 edit.case=any edit.autoselect=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=44 alignment="0" tabsequence=32766 border="0" color="0" x="1467" y="992" height="52" width="1152" format="[general]" html.valueishtml="0"  name=guidcrm visible="0" edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="65535" )
groupbox(band=detail text=" Domicilio"border="6" color="33554432" x="32" y="480" height="456" width="1321"  name=gb_3 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
bitmap(band=detail filename="images\vcard.jpg" x="69" y="700" height="64" width="73" border="0"  name=p_3  tag="Setpoblacion" visible="1" )
groupbox(band=detail text="Datos Contacto"border="6" color="33554432" x="1403" y="480" height="456" width="1266"  name=gb_2 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="0" text="Piso" border="0" color="33554432" x="818" y="624" height="60" width="96" html.valueishtml="0"  name=intpisvia_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="0" text="Puerta" border="0" color="33554432" x="1061" y="624" height="60" width="151" html.valueishtml="0"  name=intpuevia_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="1" text="Móvil" border="0" color="33554432" x="2149" y="548" height="60" width="146" html.valueishtml="0"  name=inttelefm_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="Fax" border="0" color="33554432" x="2158" y="624" height="60" width="137" html.valueishtml="0"  name=intteleff_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="Teléfonos" border="0" color="33554432" x="1518" y="548" height="60" width="238" html.valueishtml="0"  name=inttelef1_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
bitmap(band=detail filename="Images\telephone.jpg" x="1440" y="548" height="64" width="73" border="0"  name=p_1 visible="1" )
text(band=detail alignment="1" text="Web" border="0" color="33554432" x="1518" y="772" height="60" width="238" html.valueishtml="0"  name=intpagweb_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
bitmap(band=detail filename="images\email.jpg" x="1440" y="772" height="64" width="73" border="0"  name=p_2 visible="1" )
text(band=detail alignment="0" text="Escalera" border="0" color="33554432" x="480" y="624" height="60" width="192" html.valueishtml="0"  name=intescvia_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="0" text="Número" border="0" color="33554432" x="59" y="624" height="60" width="169" html.valueishtml="0"  name=intnumvia_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="1" text="e-Mail" border="0" color="33554432" x="1518" y="844" height="60" width="238" html.valueishtml="0"  name=inte_mail_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="0" text="Via" border="0" color="33554432" x="992" y="844" height="60" width="91" html.valueishtml="0"  name=viaid_t visible="1~t0"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="0" text="Nombre Via" border="0" color="33554432" x="1097" y="848" height="60" width="247" html.valueishtml="0"  name=intnomvia_t visible="1~t0"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="1" text="Teléfonos" border="0" color="33554432" x="1518" y="624" height="60" width="238" html.valueishtml="0"  name=inttelef2_t visible="1~t0"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=29 alignment="0" tabsequence=32766 border="0" color="33554432" x="160" y="700" height="60" width="192" format="[general]" html.valueishtml="0"  name=pobcodpos visible="1" edit.limit=0 edit.case=any edit.autoselect=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=30 alignment="0" tabsequence=32766 border="0" color="33554432" x="370" y="700" height="60" width="955" format="[general]" html.valueishtml="0"  name=pobdescri visible="1" edit.limit=0 edit.case=any edit.autoselect=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=31 alignment="0" tabsequence=32766 border="0" color="33554432" x="160" y="772" height="60" width="805" format="[general]" html.valueishtml="0"  name=prvdescri visible="1" edit.limit=0 edit.case=any edit.autoselect=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=33 alignment="0" tabsequence=32766 border="0" color="33554432" x="160" y="844" height="60" width="805" format="[general]" html.valueishtml="0"  name=paidescri visible="1" edit.limit=0 edit.case=any edit.autoselect=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=2 alignment="0" tabsequence=32766 border="0" color="0" x="1061" y="772" height="60" width="128" format="[general]" html.valueishtml="0"  name=pobsid  tag="" visible="1~t0" edit.limit=0 edit.case=any edit.autoselect=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="16777215" )
column(band=detail id=5 alignment="0" tabsequence=32766 border="2" color="33554432" x="59" y="548" height="60" width="297" format="[general]" html.valueishtml="0"  name=viaid visible="1" dddw.name=d_dddw_via dddw.displaycolumn=viadescri dddw.datacolumn=viaid dddw.percentwidth=125 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=no dddw.case=any dddw.vscrollbar=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=6 alignment="0" tabsequence=32766 border="2" color="33554432" x="370" y="548" height="60" width="955" format="[general]" html.valueishtml="0"  name=intnomvia visible="1" edit.limit=35 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=7 alignment="0" tabsequence=32766 border="2" color="33554432" x="242" y="624" height="60" width="219" format="[general]" html.valueishtml="0"  name=intnumvia visible="1" edit.limit=8 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=8 alignment="0" tabsequence=32766 border="2" color="33554432" x="686" y="624" height="60" width="101" format="[general]" html.valueishtml="0"  name=intescvia visible="1" edit.limit=2 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=9 alignment="0" tabsequence=32766 border="2" color="33554432" x="928" y="624" height="60" width="101" format="[general]" html.valueishtml="0"  name=intpisvia visible="1" edit.limit=2 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=10 alignment="0" tabsequence=32766 border="2" color="33554432" x="1225" y="624" height="60" width="101" format="[general]" html.valueishtml="0"  name=intpuevia visible="1" edit.limit=2 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=16 alignment="0" tabsequence=32766 border="2" color="33554432" x="1769" y="772" height="60" width="869" format="[general]" html.valueishtml="0"  name=intpagweb visible="1" edit.limit=0 edit.case=any edit.autoselect=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=11 alignment="0" tabsequence=32766 border="2" color="33554432" x="1769" y="548" height="60" width="320" format="[general]" html.valueishtml="0"  name=inttelef1 visible="1" edit.limit=12 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=12 alignment="0" tabsequence=32766 border="2" color="33554432" x="1769" y="624" height="60" width="320" format="[general]" html.valueishtml="0"  name=inttelef2 visible="1" edit.limit=12 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=13 alignment="0" tabsequence=32766 border="2" color="33554432" x="2313" y="548" height="60" width="320" format="[general]" html.valueishtml="0"  name=inttelefm visible="1" edit.limit=12 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=14 alignment="0" tabsequence=32766 border="2" color="33554432" x="2313" y="624" height="60" width="320" format="[general]" html.valueishtml="0"  name=intteleff visible="1" edit.limit=12 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=15 alignment="0" tabsequence=32766 border="2" color="33554432" x="1769" y="844" height="60" width="869" format="[general]" html.valueishtml="0"  name=inte_mail visible="1" edit.limit=35 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
groupbox(band=detail text="Datos Principales"border="6" color="0" x="41" y="4" height="468" width="1321"  name=gb_5 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
groupbox(band=detail text="Interfase SAP"border="6" color="0" x="1399" y="4" height="468" width="1266"  name=gb_4 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="1" text="Tercero" border="0" color="33554432" x="59" y="392" height="60" width="183" html.valueishtml="0"  name=intester_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=27 alignment="0" tabsequence=32766 border="0" color="33554432" x="265" y="392" height="60" width="69" format="[general]" html.valueishtml="0"  name=intester visible="1" checkbox.text="" checkbox.on="S" checkbox.off="N" checkbox.scale=no checkbox.threed=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="1" text="Cliente" border="0" color="33554432" x="379" y="392" height="60" width="160" html.valueishtml="0"  name=intescli_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=26 alignment="0" tabsequence=32766 border="0" color="0" x="558" y="392" height="60" width="69" format="[general]" html.valueishtml="0"  name=intescli visible="1" checkbox.text="" checkbox.on="S" checkbox.off="N" checkbox.scale=no checkbox.threed=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="1" text="Colaborador/Cta Partícipe" border="0" color="33554432" x="667" y="392" height="60" width="576" html.valueishtml="0"  name=t_4 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=28 alignment="0" tabsequence=32766 border="0" color="33554432" x="1262" y="392" height="60" width="69" format="[general]" html.valueishtml="0"  name=intespart visible="1" checkbox.text="" checkbox.on="S" checkbox.off="N" checkbox.scale=no checkbox.threed=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="1090519039" )
column(band=detail id=37 alignment="0" tabsequence=32766 border="2" color="33554432" x="530" y="308" height="60" width="745" format="[general]" html.valueishtml="0"  name=intentlegal visible="1" ddlb.limit=0 ddlb.allowedit=no ddlb.case=any ddlb.vscrollbar=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="1" text="Tipo de entidad legal" border="0" color="33554432" x="59" y="308" height="60" width="453" html.valueishtml="0"  name=intentlegal_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="0" text="Forma Legal" border="0" color="33554432" x="50" y="232" height="52" width="265" html.valueishtml="0"  name=t_6 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=3 alignment="0" tabsequence=32766 border="2" color="33554432" x="329" y="76" height="60" width="960" format="[general]" html.valueishtml="0"  name=intnombre visible="1" edit.limit=55 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=45 alignment="0" tabsequence=10 border="2" color="0" x="329" y="228" height="60" width="955" format="[general]" html.valueishtml="0"  name=formalegal visible="1" dddw.name=d_dddw_formalegal dddw.displaycolumn=forma_legal dddw.datacolumn=abreviatura dddw.percentwidth=0 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=yes dddw.case=any dddw.vscrollbar=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" encodeselflinkargs="1" netscapelayers="0" pagingmethod=0 generatedddwframes="1" )
xhtmlgen() cssgen(sessionspecific="0" )
xmlgen(inline="0" )
xsltgen()
jsgen()
export.xml(headgroups="1" includewhitespace="0" metadatatype=0 savemetadata=0 )
import.xml()
export.pdf(method=0 distill.custompostscript="0" xslfop.print="0" )
export.xhtml()
 
release 10.5;
datawindow(units=0 timer_interval=60000 color=67108864 processing=0 HTMLDW=no print.printername="" print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.canusedefaultprinter=yes print.prompt=no print.buttons=no print.preview.buttons=no print.cliptext=no print.overrideprintjob=no print.collate=yes print.preview.outline=yes hidegrayline=no )
header(height=0 color="536870912" )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=960 color="536870912" )
table(column=(type=long update=yes updatewhereclause=yes key=yes name=rleid dbname="gtlocal_interloc.rleid" )
 column=(type=long update=yes updatewhereclause=yes name=locid dbname="gtlocal_interloc.locid" )
 column=(type=long update=yes updatewhereclause=yes name=intid dbname="gtlocal_interloc.intid" )
 column=(type=long update=yes updatewhereclause=yes name=tpcid dbname="gtlocal_interloc.tpcid" )
 column=(type=char(10) update=yes updatewhereclause=yes name=rlelikunnr dbname="gtlocal_interloc.rlelikunnr" )
 column=(type=char(16) update=yes updatewhereclause=yes name=rlelifnr dbname="gtlocal_interloc.rlelifnr" )
 column=(type=date update=yes updatewhereclause=yes name=rlefecini dbname="gtlocal_interloc.rlefecini" )
 column=(type=long update=yes updatewhereclause=yes name=motidini dbname="gtlocal_interloc.motidini" )
 column=(type=date update=yes updatewhereclause=yes name=rlefecfin dbname="gtlocal_interloc.rlefecfin" )
 column=(type=long update=yes updatewhereclause=yes name=motidfin dbname="gtlocal_interloc.motidfin" )
 column=(type=datetime update=yes updatewhereclause=yes name=feccrereg dbname="gtlocal_interloc.feccrereg" )
 column=(type=char(10) update=yes updatewhereclause=yes name=codusucid dbname="gtlocal_interloc.codusucid" )
 column=(type=char(250) update=yes updatewhereclause=yes name=observbaja dbname="gtlocal_interloc.observbaja" )
 column=(type=char(55) updatewhereclause=yes name=intnombre dbname="atinterlocutor.intnombre" )
 column=(type=char(35) updatewhereclause=yes name=locnombre dbname="atlocal.locnombre" )
 column=(type=long update=yes updatewhereclause=yes name=gtlocal_interloc_tcaid dbname="gtlocal_interloc.tcaid" values="	3/Sin Máquinas	1/Con maqs. Competencia	2/" )
 column=(type=char(35) update=yes updatewhereclause=yes name=rleeoalta dbname="gtlocal_interloc.rleeoalta" )
 column=(type=char(35) update=yes updatewhereclause=yes name=rleeobaja dbname="gtlocal_interloc.rleeobaja" )
 column=(type=char(15) update=yes updatewhereclause=yes name=crmrleid dbname="gtlocal_interloc.crmrleid" )
 retrieve="  SELECT gtlocal_interloc.rleid,   
         gtlocal_interloc.locid,   
         gtlocal_interloc.intid,   
         gtlocal_interloc.tpcid,   
         gtlocal_interloc.rlelikunnr,   
         gtlocal_interloc.rlelifnr,   
         gtlocal_interloc.rlefecini,   
         gtlocal_interloc.motidini,   
         gtlocal_interloc.rlefecfin,   
         gtlocal_interloc.motidfin,  
         gtlocal_interloc.feccrereg,   
         gtlocal_interloc.codusucid,
         gtlocal_interloc.observbaja,
         atinterlocutor.intnombre,   
         atlocal.locnombre  ,
			gtlocal_interloc.tcaid,
		   gtlocal_interloc.rleeoalta,
		   gtlocal_interloc.rleeobaja,
			gtlocal_interloc.crmrleid
    FROM gtlocal_interloc,   
         atinterlocutor,   
         atlocal 
   WHERE ( atinterlocutor.intid = gtlocal_interloc.intid ) and  
         ( atlocal.locid = gtlocal_interloc.locid )       
" update="gtlocal_interloc" updatewhere=0 updatekeyinplace=no  sort="rlefecfin D tpcid A rlefecini A " )
groupbox(band=detail text=""border="5" color="33554432" x="18" y="416" height="192" width="2807"  name=gb_1 visible="1"  font.face="Arial" font.height="-12" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
groupbox(band=detail text=""border="5" color="33554432" x="5" y="12" height="380" width="2821"  name=gb_2 visible="1"  font.face="Arial" font.height="-12" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=4 alignment="0" tabsequence=32766 border="2" color="0" x="654" y="40" height="60" width="599" format="[general]" html.valueishtml="0"  name=tpcid visible="1" dddw.name=d_dddw_xtfuncion_externo dddw.displaycolumn=tpcdescri dddw.datacolumn=tpcid dddw.percentwidth=200 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=no dddw.case=any dddw.vscrollbar=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=5 alignment="0" tabsequence=32766 border="2" color="0" x="654" y="316" height="60" width="599" format="[general]" html.valueishtml="0"  name=rlelikunnr visible="1" edit.limit=10 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="0" text="Tipo Función" border="0" color="0" x="23" y="40" height="60" width="599" html.valueishtml="0"  name=tpcid_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="0" text="Interlocutor" border="0" color="0" x="23" y="132" height="60" width="599" html.valueishtml="0"  name=intnombre_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="0" text="Nombre Local" border="0" color="33554432" x="23" y="224" height="60" width="599" html.valueishtml="0"  name=t_3 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="0" text="Deudor SAP" border="0" color="0" x="23" y="316" height="60" width="599" html.valueishtml="0"  name=rlelikunnr_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=6 alignment="0" tabsequence=32766 border="2" color="0" x="1938" y="316" height="60" width="809" format="[general]" html.valueishtml="0"  name=rlelifnr visible="1" edit.limit=16 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=3 alignment="0" tabsequence=32766 border="0" color="0" x="2994" y="40" height="60" width="119" format="[general]" html.valueishtml="0"  name=intid visible="0" edit.limit=0 edit.case=any edit.autoselect=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="16777215" )
compute(band=detail alignment="0" expression="if ( rlefecfin < today() ,rgb(192,192,192),rgb(255,255,255))"border="0" color="0" x="2894" y="40" height="60" width="91" format="[GENERAL]" html.valueishtml="0"  name=c_backcolor visible="1~t0"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
groupbox(band=detail text=""border="5" color="33554432" x="18" y="628" height="292" width="2807"  name=gb_3 visible="1"  font.face="Arial" font.height="-12" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="0" text="Observaciones fin relación" border="0" color="0" x="23" y="848" height="60" width="599" html.valueishtml="0"  name=observbaja_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="0" text="E.O. Mejor Oferta" border="0" color="0" x="23" y="756" height="60" width="599" html.valueishtml="0"  name=rleeobaja_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="0" text="Final Relación" border="0" color="0" x="23" y="664" height="60" width="599" html.valueishtml="0"  name=rlefecfin_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=9 alignment="0" tabsequence=32766 border="2" color="0" x="654" y="664" height="60" width="599" format="~tif (isNull(rlefecfin), '','dd/mm/yyyy')" html.valueishtml="0"  name=rlefecfin visible="1" editmask.useformat=yes editmask.mask="dd/mm/yyyy" editmask.focusrectangle=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=10 alignment="0" tabsequence=32766 border="2" color="0" x="1938" y="664" height="60" width="809" format="[general]" html.valueishtml="0" protect="0~tif ( isnull( rlefecfin) ,1,0)"  name=motidfin visible="1" dddw.name=d_dddw_motivo_finrelacion dddw.displaycolumn=motdescri dddw.datacolumn=motid dddw.percentwidth=150 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=no dddw.case=any dddw.vscrollbar=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
compute(band=detail alignment="0" expression="string(locid)+~"-~"+string(intid)"border="2" color="0" x="1938" y="40" height="60" width="809" format="[GENERAL]" html.valueishtml="0"  name=compute_3 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=14 alignment="0" tabsequence=32766 border="2" color="0" x="654" y="132" height="60" width="2094" format="[general]" html.valueishtml="0"  name=intnombre  tag="" visible="1" edit.limit=0 edit.case=any edit.autoselect=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=15 alignment="0" tabsequence=32766 border="2" color="0" x="654" y="224" height="60" width="2094" format="[general]" html.valueishtml="0"  name=locnombre visible="1" edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="1" text="Cod. Relación" border="0" color="0" x="1600" y="40" height="60" width="311" html.valueishtml="0"  name=t_1 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="1" text="Acreedor SAP" border="0" color="0" x="1600" y="316" height="60" width="311" html.valueishtml="0"  name=rlelifnr_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="Motivo Final" border="0" color="0" x="1600" y="664" height="60" width="311" html.valueishtml="0"  name=motidfin_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="0" text="Inicio Relación" border="0" color="0" x="23" y="436" height="60" width="599" html.valueishtml="0"  name=rlefecini_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=7 alignment="0" tabsequence=32766 border="2" color="0" x="654" y="436" height="60" width="599" format="dd/mm/yyyy" html.valueishtml="0"  name=rlefecini visible="1" editmask.mask="dd/mm/yyyy" editmask.focusrectangle=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=detail alignment="1" text="Motivo Inicio" border="0" color="0" x="1600" y="436" height="60" width="311" html.valueishtml="0"  name=motidini_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=8 alignment="0" tabsequence=32766 border="2" color="0" x="1938" y="436" height="60" width="809" format="[general]" html.valueishtml="0" protect="0~tif ( isnull( rlefecini) ,1,0)"  name=motidini visible="1" dddw.name=d_dddw_motivo_inirelacion dddw.displaycolumn=motdescri dddw.datacolumn=motid dddw.percentwidth=150 dddw.lines=0 dddw.limit=0 dddw.allowedit=no dddw.useasborder=no dddw.case=any dddw.vscrollbar=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="0" text="E.O. Procedencia" border="0" color="0" x="23" y="540" height="52" width="599" html.valueishtml="0"  name=t_2 visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
text(band=detail alignment="1" text="Situac. Local" border="0" color="0" x="1600" y="536" height="60" width="311" html.valueishtml="0"  name=gtlocal_interloc_tcaid_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="553648127" )
column(band=detail id=16 alignment="0" tabsequence=32766 border="2" color="0" x="1938" y="536" height="60" width="809" format="[general]" html.valueishtml="0" protect="0~tif(tpcid <> 14 , 1,0)"  name=gtlocal_interloc_tcaid visible="1" ddlb.limit=0 ddlb.allowedit=no ddlb.case=any ddlb.nilisnull=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="134217739" )
column(band=detail id=17 alignment="0" tabsequence=32766 border="2" color="33554432" x="654" y="536" height="60" width="910" format="[general]" html.valueishtml="0"  name=rleeoalta visible="1" edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="134217739" )
column(band=detail id=18 alignment="0" tabsequence=32766 border="2" color="0" x="654" y="756" height="60" width="1166" format="[general]" html.valueishtml="0"  name=rleeobaja visible="1" edit.limit=35 edit.case=any edit.focusrectangle=no edit.autoselect=no  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="134217739" )
column(band=detail id=13 alignment="0" tabsequence=32766 border="2" color="0" x="654" y="848" height="60" width="2094" format="[general]" html.valueishtml="0" protect="0~tif ( (isNull(  motidfin  ) and isNull(  rlefecfin  )),1,0)"  name=observbaja visible="1" edit.limit=0 edit.case=any edit.autoselect=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="2" background.color="134217739" )

sparse(names="tpcid")htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" encodeselflinkargs="1" netscapelayers="0" pagingmethod=0 generatedddwframes="1" )
xhtmlgen() cssgen(sessionspecific="0" )
xmlgen(inline="0" )
xsltgen()
jsgen()
export.xml(headgroups="1" includewhitespace="0" metadatatype=0 savemetadata=0 )
import.xml()
export.pdf(method=0 distill.custompostscript="0" xslfop.print="0" )
export.xhtml()
 
release 10.5;
datawindow(units=0 timer_interval=0 color=16777215 processing=1 HTMLDW=no print.printername="" print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.canusedefaultprinter=yes print.prompt=no print.buttons=no print.preview.buttons=no print.cliptext=no print.overrideprintjob=no print.collate=yes print.preview.outline=yes hidegrayline=no grid.lines=0 )
header(height=68 color="67108864" )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=96 color="536870912" )
table(column=(type=long update=yes updatewhereclause=yes key=yes name=heuid dbname="hthiseunica.heuid" dbalias=".heuid" )
 column=(type=char(10) update=yes updatewhereclause=yes name=codusucid dbname="hthiseunica.codusucid" dbalias=".codusucid" )
 column=(type=datetime update=yes updatewhereclause=yes name=feccrereg dbname="hthiseunica.feccrereg" dbalias=".feccrereg" )
 column=(type=char(250) update=yes updatewhereclause=yes name=heuida dbname="hthiseunica.heuida" dbalias=".heuida" )
 column=(type=long update=yes updatewhereclause=yes name=heuvuelta dbname="hthiseunica.heuvuelta" dbalias=".heuvuelta" )
 retrieve="PBSELECT( VERSION(400) TABLE(NAME=~"hthiseunica~" ) COLUMN(NAME=~"hthiseunica.heuid~") COLUMN(NAME=~"hthiseunica.codusucid~") COLUMN(NAME=~"hthiseunica.feccrereg~") COLUMN(NAME=~"hthiseunica.heuida~") COLUMN(NAME=~"hthiseunica.heuvuelta~")) " update="hthiseunica" updatewhere=1 updatekeyinplace=no )
text(band=header alignment="2" text="Feccrereg" border="4" color="16711680" x="558" y="8" height="52" width="503" html.valueishtml="0"  name=feccrereg_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=header alignment="2" text="Heuid" border="4" color="16711680" x="9" y="8" height="52" width="274" html.valueishtml="0"  name=heuid_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
text(band=header alignment="2" text="Codusucid" border="4" color="16711680" x="297" y="8" height="52" width="251" html.valueishtml="0"  name=codusucid_t visible="1"  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=1 alignment="1" tabsequence=10 border="6" color="16711680" x="9" y="12" height="64" width="274" format="[general]" html.valueishtml="0"  name=heuid visible="1" edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=2 alignment="0" tabsequence=30 border="6" color="16711680" x="297" y="12" height="64" width="251" format="[general]" html.valueishtml="0"  name=codusucid visible="1" edit.limit=10 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
column(band=detail id=3 alignment="0" tabsequence=40 border="6" color="16711680" x="558" y="12" height="64" width="503" format="[shortdate] [time]" html.valueishtml="0"  name=feccrereg visible="1" edit.limit=0 edit.case=any edit.focusrectangle=no edit.autoselect=yes edit.autohscroll=yes  font.face="Tahoma" font.height="-8" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" encodeselflinkargs="1" netscapelayers="0" pagingmethod=0 generatedddwframes="1" )
xhtmlgen() cssgen(sessionspecific="0" )
xmlgen(inline="0" )
xsltgen()
jsgen()
export.xml(headgroups="1" includewhitespace="0" metadatatype=0 savemetadata=0 )
import.xml()
export.pdf(method=0 distill.custompostscript="0" xslfop.print="0" )
export.xhtml()
 
